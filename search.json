[{"path":"index.html","id":"welcome","chapter":"1 Welcome!","heading":"1 Welcome!","text":"Let’s add content welcome page.Submit pull request .construction","code":""},{"path":"community-contribution.html","id":"community-contribution","chapter":"2 Community Contribution","heading":"2 Community Contribution","text":"fairly open-ended assignment provides opportunity receive credit contributing collective learning class, perhaps beyond. reflect minimum 3 hours work. complete assignment must submit short description contribution. appropriate, attach relevant files.many ways can contribute:organize lead workshop particular topic (date may assignment due date need schedule )help students find final project partnersgive well-rehearsed 5 minute lightning talk class datavis topic (theory tool) (email set date – may assignment due date need schedule )create video tutorial (length)create cheatsheet resourcewrite tutorial tool ’s well documentedbuild viz product (ex. htmlwidget RStudio add-) class use[idea](Note: translations allowed)may draw expand existing resources. , critical cite sources.","code":""},{"path":"community-contribution.html","id":"important-logistics","chapter":"2 Community Contribution","heading":"2.1 IMPORTANT LOGISTICS","text":"","code":""},{"path":"community-contribution.html","id":"groups","chapter":"2 Community Contribution","heading":"2.1.1 Groups","text":"may work partner choosing. work alone, need join group 1, simply submit work CourseWorks solo assignment.work partner, add group CC page People tab. Ed Discussion can used find partners similar interests.","code":""},{"path":"community-contribution.html","id":"what-to-submit","chapter":"2 Community Contribution","heading":"2.1.2 What to submit","text":"cases something tangible upload, tutorial, cheatsheet, etc. Alternatively may submit link material online (YouTube video, etc.) ’s nothing tangible include longer description (see 2.).cases something tangible upload, tutorial, cheatsheet, etc. Alternatively may submit link material online (YouTube video, etc.) ’s nothing tangible include longer description (see 2.).explanation motivation project, need addresses, evaluation project including learned / might differently next time. (1/2 page)explanation motivation project, need addresses, evaluation project including learned / might differently next time. (1/2 page)","code":""},{"path":"community-contribution.html","id":"submitting-your-assignment","chapter":"2 Community Contribution","heading":"2.1.3 Submitting your assignment","text":"must submit assignment twice: CourseWorks (can graded) class, details follow.CourseWorks submission (assignment): submit work .Rmd rendered .pdf .html file, just problem sets. work lend format, write assignment text box .CourseWorks submission (assignment): submit work .Rmd rendered .pdf .html file, just problem sets. work lend format, write assignment text box .Class (GitHub) submission: detail provided separate assignment.Class (GitHub) submission: detail provided separate assignment.","code":""},{"path":"community-contribution.html","id":"grading","chapter":"2 Community Contribution","heading":"2.1.4 Grading","text":"graded quality work, originality, effort invested. sources used must cited.","code":""},{"path":"github-submission-instructions.html","id":"github-submission-instructions","chapter":"3 GitHub submission instructions","heading":"3 GitHub submission instructions","text":"chapter gives information need upload community contribution. Please read entire document carefully making submission. particular note fact bookdown requires different .Rmd format ’re used , must make changes beginning file described submitting.","code":""},{"path":"github-submission-instructions.html","id":"background","chapter":"3 GitHub submission instructions","heading":"3.1 Background","text":"web site makes use bookdown package render collection .Rmd files nicely formatted online book chapters subchapters. job submit slightly modified version community contribution .Rmd file GitHub repository source files web site stored. backend, admins divide chapters book sections order .community contribution different format, create short .Rmd file explains , includes links relevant files, slides, etc. can post GitHub repo (another online site.)","code":""},{"path":"github-submission-instructions.html","id":"preparing-your-.rmd-file","chapter":"3 GitHub submission instructions","heading":"3.2 Preparing your .Rmd file","text":"submit ONE Rmd file.completing modifications, .Rmd look like sample .Rmd.Create concise, descriptive name project. instance, name base_r_ggplot_graph something similar work contrasting/working base R graphics ggplot2 graphics. Check .Rmd filenames file make sure name isn’t already taken. project name words joined underscores, white space. Use .Rmd .rmd. addition, letters must lowercase. Create copy .Rmd file new name.Create concise, descriptive name project. instance, name base_r_ggplot_graph something similar work contrasting/working base R graphics ggplot2 graphics. Check .Rmd filenames file make sure name isn’t already taken. project name words joined underscores, white space. Use .Rmd .rmd. addition, letters must lowercase. Create copy .Rmd file new name.Completely delete YAML header (section top .Rmd includes name, title, date, output, etc.) including --- line.Completely delete YAML header (section top .Rmd includes name, title, date, output, etc.) including --- line.Choose short, descriptive, human readable title project title show table contents – look examples panel left. Capitalize first letter (“sentence case”). first line document, enter single hashtag, followed single whitespace, title. important follow format bookdown renders title header. use single # headers anywhere else document.Choose short, descriptive, human readable title project title show table contents – look examples panel left. Capitalize first letter (“sentence case”). first line document, enter single hashtag, followed single whitespace, title. important follow format bookdown renders title header. use single # headers anywhere else document.second line blank, followed name(s):\n# Base R vs. ggplot2\n\nAaron Burr Alexander Hamilton\n\ncontent starts . second line blank, followed name(s):project requires data, please use built-dataset read directly URL, :\ndf <- readr::read_csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv\")  absolutely must include data file, please use small one, many reasons desirable keep repository size small possible.project requires data, please use built-dataset read directly URL, :df <- readr::read_csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv\")  absolutely must include data file, please use small one, many reasons desirable keep repository size small possible.included setup chunk .Rmd file, please remember remove label setup chunk, .e., use:\n{r, include=FALSE}\ninstead :\n{r setup, include=FALSE}included setup chunk .Rmd file, please remember remove label setup chunk, .e., use:instead :project requires libraries installed included document, please adhere following conventions. evaluate install.packages() statements document. Consumers .Rmd file won’t want packages get installed knit document. Include library() statements top .Rmd file, title, name, setup, content. chapter requires installation package source (GitHub installation), please add comment identifying . Please mention well PR. example library() section install statements won’t evaluated:\n\n# remotes::install_github(\"twitter/AnomalyDetection\")\nlibrary(\"AnomalyDetection\") # must installed sourceIf project requires libraries installed included document, please adhere following conventions. evaluate install.packages() statements document. Consumers .Rmd file won’t want packages get installed knit document. Include library() statements top .Rmd file, title, name, setup, content. chapter requires installation package source (GitHub installation), please add comment identifying . Please mention well PR. example library() section install statements won’t evaluated:developed .Rmd file moving library() statements rest file content, highly recommended knit review document . may change namespace available section code development, causing function work exhibit unexpected behavior.file contain getwd() / setwd() calls (never use scripts anyway!) write statements.Want get fancy? See optional tweaks section .","code":"# Base R vs. ggplot2\n\nAaron Burr and Alexander Hamilton\n\nYour content starts here. {r, include=FALSE}{r setup, include=FALSE}\n# remotes::install_github(\"twitter/AnomalyDetection\")\nlibrary(\"AnomalyDetection\") # must be installed from source"},{"path":"github-submission-instructions.html","id":"submission-steps","chapter":"3 GitHub submission instructions","heading":"3.3 Submission steps","text":"submit work, following “Workflow #4” – submitting pull request someone else’s repository write access. Instructions available lecture slides topic well tutorial. repeated abbreviated form, specific instructions naming conventions, content information, important details.Fork cc22spring repo (repo) GitHub account.Fork cc22spring repo (repo) GitHub account.Clone/download forked repo local computer.Clone/download forked repo local computer.Create new branch name project name, case sample_project. skip step. merge PR doesn’t come branch. already forgot , check tutorial fix .Create new branch name project name, case sample_project. skip step. merge PR doesn’t come branch. already forgot , check tutorial fix .Copy modified .Rmd file name root directory branch. example, sample_project.Rmd.Copy modified .Rmd file name root directory branch. example, sample_project.Rmd.include .html file. (order bookdown package work, .Rmd files rendered behind scenes.)include .html file. (order bookdown package work, .Rmd files rendered behind scenes.)[OPTIONAL] resources (images) included project, create folder resources/. example, resources/sample_project/. Put resources files . sure change links .Rmd include resources/.../, example:\n![Test Photo](resources/sample_project/pumpkins.jpg)[OPTIONAL] resources (images) included project, create folder resources/. example, resources/sample_project/. Put resources files . sure change links .Rmd include resources/.../, example:![Test Photo](resources/sample_project/pumpkins.jpg)ready submit project, push branch remote repo. Follow tutorial create pull request.ready submit project, push branch remote repo. Follow tutorial create pull request.point back forth begin team managing pull requests. asked make changes, simply make changes local branch, save, commit, push GitHub. new commits added pull request; need , , create new pull request. (, based circumstances, make sense close pull request start new one, tell .)point back forth begin team managing pull requests. asked make changes, simply make changes local branch, save, commit, push GitHub. new commits added pull request; need , , create new pull request. (, based circumstances, make sense close pull request start new one, tell .)pull request merged, ’s fine delete local clone (folder) well forked repository GitHub account.pull request merged, ’s fine delete local clone (folder) well forked repository GitHub account.","code":""},{"path":"github-submission-instructions.html","id":"optional-tweaks","chapter":"3 GitHub submission instructions","heading":"3.4 Optional tweaks","text":"prefer links chapter open new tabs, add {target=\"_blank\"} link, :\n[edav.info](edav.info){target=\"_blank\"}prefer links chapter open new tabs, add {target=\"_blank\"} link, :[edav.info](edav.info){target=\"_blank\"}Note headers (##, ###, etc.) converted numbered headings : ## –> 3.1 ### –> 3.1.1  headings appear chapter subheadings sub-subheadings navigation panel left. Think logical structure users navigate chapter. recommend using ## ### headings since “sub-sub-subheadings” 4.1.3.4 generally unnecessary look messy.Note headers (##, ###, etc.) converted numbered headings : ## –> 3.1 ### –> 3.1.1  headings appear chapter subheadings sub-subheadings navigation panel left. Think logical structure users navigate chapter. recommend using ## ### headings since “sub-sub-subheadings” 4.1.3.4 generally unnecessary look messy.Unfortunately, ’s simple way preview chapter ’s actually merged project. (bookdown preview_chapter() option works entire book rendered least become complex require packages project grows.) really want preview , fork clone minimal bookdown repo, add .Rmd file, click “Build book” button Build tab (next Git), open .html files _book folder web browser see rendered book.  ’re interested bookdown options, see official reference book.  useful tweaks share? Submit issue PR.Unfortunately, ’s simple way preview chapter ’s actually merged project. (bookdown preview_chapter() option works entire book rendered least become complex require packages project grows.) really want preview , fork clone minimal bookdown repo, add .Rmd file, click “Build book” button Build tab (next Git), open .html files _book folder web browser see rendered book.  ’re interested bookdown options, see official reference book.  useful tweaks share? Submit issue PR.","code":""},{"path":"github-submission-instructions.html","id":"faq","chapter":"3 GitHub submission instructions","heading":"3.5 FAQ","text":"","code":""},{"path":"github-submission-instructions.html","id":"what-should-i-expect-after-creating-a-pull-request","chapter":"3 GitHub submission instructions","heading":"3.5.1 What should I expect after creating a pull request?","text":"Within week create pull request, apply label assign classmate “PR merger” review files submit see meet requirements.Within week create pull request, apply label assign classmate “PR merger” review files submit see meet requirements.take time can process pull requests, long see pull request repo, don’t worry.take time can process pull requests, long see pull request repo, don’t worry.PR merger contacts regarding pull request, usually means files fail meet requirements. explain wrong, please fix soon possible.PR merger contacts regarding pull request, usually means files fail meet requirements. explain wrong, please fix soon possible.","code":""},{"path":"github-submission-instructions.html","id":"what-if-i-catch-mistakes-before-my-pull-request-is-merged","chapter":"3 GitHub submission instructions","heading":"3.5.2 What if I catch mistakes before my pull request is merged?","text":"Just make changes branch, commit push GitHub. automatically added pull request.","code":""},{"path":"github-submission-instructions.html","id":"what-if-i-catch-mistakes-after-my-pull-request-is-merged","chapter":"3 GitHub submission instructions","heading":"3.5.3 What if I catch mistakes after my pull request is merged?","text":"may submit additional pull requests fix material site. edits small, fixing typos, easiest make edits directly GitHub, following instructions. merge first pull requests edits, please patient.","code":""},{"path":"github-submission-instructions.html","id":"other-questions","chapter":"3 GitHub submission instructions","heading":"3.5.4 Other questions","text":"additional questions, please ask Discussions section respond.Thank contributions!","code":""},{"path":"sample-project.html","id":"sample-project","chapter":"4 Sample project","heading":"4 Sample project","text":"Joe Biden Donald TrumpThis chapter gives sample layout Rmd file.Test Photo","code":""},{"path":"tmap-package.html","id":"tmap-package","chapter":"5 tmap package","heading":"5 tmap package","text":"Sihui Liang Yuxuan Fu","code":""},{"path":"tmap-package.html","id":"what-we-did","chapter":"5 tmap package","heading":"5.1 What we did","text":"purpose tmap cheatsheet provide comprehensive practical display usage tmap R package, one main geographic visualiation toolkits R platform.explore handbooks literatures different packages spatial data presentation, including raster, ggmap, sf, sp leaflet. choose one common packages give consecutive example tmap package.explore handbooks literatures different packages spatial data presentation, including raster, ggmap, sf, sp leaflet. choose one common packages give consecutive example tmap package.Structure cheat sheet includes purposes single functions arguments, simple map including mere geograghy, map adding colors cuts, interactive maps maps working facets.Structure cheat sheet includes purposes single functions arguments, simple map including mere geograghy, map adding colors cuts, interactive maps maps working facets.Enlarge/download cheatsheet","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"graphics-cheatsheet-in-ggplot2","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6 Graphics cheatsheet in ggplot2","text":"Yuwei HuMotivation: main purpose create cheat sheet organizing statistical graphics (contains graphics mentioned class websites(1)) ggplot2. time, want show usage ggplot2 functions cheat sheet. means graphics mentioned document can created easily base R packages. cheat sheet divided ‘Distribution’, ‘Correlation’, ‘Ranking’, ‘Evolution’ ‘Flow’, five types graphic. find code, can firstly consider type graphic want draw choose code certain chart. think organized create graphics ggplot2 can control elements different graphs similar methods. However, due existing graphic packages, can draw graphs simpler code several lines ggplot2 code. Next time, may create cheat sheet simpler code graphics mentioned document.(1)https://r-graph-gallery.com/index.html","code":"\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(d3r)\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(Lock5withR)\nlibrary(ggridges)\nlibrary(broom)\nlibrary(plotly)\nlibrary(MASS)\nlibrary(gcookbook) \nlibrary(GGally)\nlibrary(parcoords)\nlibrary(ggmosaic)\nlibrary(ggalluvial)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"distribution","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1 Distribution","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"histogram","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.1 histogram","text":"","code":"\ndata=data.frame(x=sample(0:20,100,replace = T))\n# basic histogram\ngh<-ggplot(data, aes(x)) + \n  geom_histogram()+\n  ggtitle(\"basic histogram\")+\n  theme_grey(8)\n\n# add color, bin width and bin center\ng1<-ggplot(data, aes(x)) + \n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = 5, center = 0)+\n  ggtitle(\"binwidth=5 and centered at 0\")+\n  theme_grey(8)\n\n# unequal bin widths\ng2<-ggplot(data, aes(x)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\", breaks=c(0,2,5,10, 20))+\n  ggtitle(\"unequal bin widths\")+\n  theme_grey(8)\n\n\n# density histogram\ngd<-ggplot(data, aes(x)) + \n  geom_histogram(aes(y = ..density..),color = \"blue\", fill = \"lightblue\")+\n  geom_density(color = \"red\") +\n  ggtitle(\"density histogram\")+\n  theme_grey(8)\n\n# Cumulative frequency histogram\ngc<-ggplot(data, aes(x)) +\n  geom_histogram(aes(y = cumsum(..count..)), color = \"blue\", fill = \"lightblue\") +\n  ggtitle(\"Cumulative Frequency\")+\n  theme_grey(8)\n\n\n# Bin boundaries: right closed/left closed\ngr<-ggplot(data, aes(x)) + \n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = 1, center = 0.5, closed = \"right\") +\n  ggtitle(\"right closed\")+\n  theme_grey(8)\n\ngl<-ggplot(data, aes(x)) + \n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = 1, center = 0.5, closed = \"left\") +\n  ggtitle(\"left closed\")+\n  theme_grey(8)\n\n# histogram with several groups\n# source: https://r-graph-gallery.com/histogram_several_group.html\ngmulti<-ggplot(iris, aes(x=Sepal.Length, fill=Species)) +\n    geom_histogram( color=\"#e9ecef\", alpha=0.6, position = 'identity')+\n  ggtitle(\"histogram with several groups\")+\n  theme_grey(8)\n\ngrid.arrange(gh,g1, g2,gd, gc,gr, gl,gmulti,ncol=3, nrow =3)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"boxplot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.2 boxplot","text":"","code":"\n# resource: https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html\ndata2 <- data.frame(\n  group=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)  ),\n  value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )\n)\n# basic\ngs<-ggplot(data, aes(x)) + \n  geom_boxplot()+\n  ggtitle(\"basic boxplot\")+\n  theme_grey(10)\n\ngm<-ggplot(data2, aes(group, value)) + \n  geom_boxplot()+\n  ggtitle(\"basic boxplot by group\")+\n  theme_grey(10)\n\n\n# reorder by median\ngorder<-ggplot(data2) + \n  geom_boxplot(aes(x = reorder(group, -value, median),y = value)) +\n  ggtitle(\"order by median with variable width boxplots\")+\n  theme_grey(10)\n\n# variable width boxplots\ngwidth<-ggplot(data2) + \n  geom_boxplot(aes(group,value),varwidth = TRUE) +\n  ggtitle(\"variable width boxplots\")+\n  theme_grey(10)\n\n# horizontal boxplots\nghorizontal<-ggplot(data2) + \n  geom_boxplot(aes(group,value)) +\n  coord_flip()+\n  ggtitle(\"horizontal boxplots\")+\n  theme_grey(10)\n\ngrid.arrange(gs, gm,gorder, gwidth,ghorizontal,ncol=3, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"violin-plots-ridgeline-plot-vs-boxplot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.3 Violin plots, ridgeline plot vs boxplot","text":"","code":"\n# basic violin plots with color\ngv<-ggplot(data2) + \n  geom_violin(aes(group,value, fill=group),adjust = 6)+ \n  ggtitle(\"violin plots\")\n\n# basic ridgeline plot\ngr<-ggplot(data2) +\n  geom_density_ridges(aes(value,group, fill=group), alpha = .5, scale = 1)+\n  ggtitle(\"ridgeline plot\")\n\ngrid.arrange(gv, gr,gm,ncol=2, nrow =2)\ngsca<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width,color = Species)) + \n  geom_point()+\n  ggtitle(\"colored Scatterplot\")+\n  theme_grey(8)\n\ngscaadj<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  geom_point(alpha = 0.4, size = 0.8,pch = 21,stroke = 0)+\n  ggtitle(\"Scatterplot with adjusted alpha, size, pch, stroke\")+\n  theme_grey(8)\n\nglm<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  geom_point()+\n  geom_smooth(method = 'lm', se = FALSE) +\n  ggtitle(\"basic Scatterplot with linear model\")+\n  theme_grey(8)\n\n\nmod <- lm(Sepal.Width~Sepal.Length,iris)\nr2 <- summary(mod)$r.squared\n\ndf <- mod %>% augment()\ngrp<-ggplot(df, aes(.fitted, .std.resid)) + \n  geom_point()+\n  geom_hline(yintercept = 0, col = \"blue\")+\n  ggtitle(\"Residual plot\")+\n  theme_grey(8)\n\n# basic Scatterplot with facets\ngsf<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  geom_point()+\n  facet_wrap(~Species, ncol=3,scales = \"free_x\")+\n  ggtitle(\"basic Scatterplot with facets\")+\n  theme_grey(8)\n\ngrid.arrange(gsca,gscaadj,glm,grp,gsf,ncol=3, nrow =2)\n# Interactive\n\nggplotly(gsca)\n# scatterplot with heatmap and contour lines\nghh<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  scale_fill_viridis_c()+\n  geom_hex(binwidth = c(0.5, 0.5), alpha = .4)+\n  geom_point(size = 1)+\n  ggtitle(\"Scatterplot with Hex heatmap\")+\n  theme_grey(8)\n\ngsh<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  scale_fill_viridis_c()+\n  geom_bin2d(binwidth = c(0.5, 0.5), alpha = .4)+\n  geom_point(size = 1)+\n  ggtitle(\"Scatterplot with Square heatmap\")+\n  theme_grey(8)\n\ngcl<-ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + \n  scale_fill_viridis_c()+\n  geom_density2d(colour=\"red\",bins = 5)+\n  geom_point(size = 1)+\n  ggtitle(\"Scatterplot with contour lines\")+\n  theme_grey(8)\n\ndata3<-data.frame(time = c(1,2,3,4,5,6,7,8,9,10),\n                  value = sample(1:50,10))\n# basic connected scatterplot\nggcs<-ggplot(data3, aes(x=time, y=value)) +\n    geom_line() +\n    geom_point()+\n  ggtitle(\"basic connected scatterplot\")+\n  theme_grey(8)\n\ngrid.arrange(ghh,gsh,gcl,ggcs,ncol=2, nrow =2)\n# 2D kernel\n\nf1 <- kde2d(iris$Sepal.Length, iris$Sepal.Width)\nimage(f1)\ncontour(f1, add = T)\npoints(iris$Sepal.Length, iris$Sepal.Width, pch = 16)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"heatmap","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.4 Heatmap","text":"","code":"\n# data from course notes\ngrade <- rep(c(\"first\", \"second\", \"third\", \"fourth\"), 3)\nsubject <- rep(c(\"math\", \"reading\", \"gym\"), each = 4)\nstatescore <- sample(50, 12) + 50\ndf <- data.frame(grade, subject, statescore)\n\n# basic heatmap\nghp<-ggplot(df, aes(grade, subject, fill = statescore))+ \n  geom_tile()+\n  ggtitle(\"basic heatmap\")+\n  theme_grey(8)\n\n# control color\nghpc<-ggplot(df, aes(grade, subject, fill = statescore)) + \n  geom_tile() +\n  scale_fill_gradient(low=\"white\", high=\"blue\")+\n  ggtitle(\"control color\")+\n  theme_grey(8)\n\ngrid.arrange(ghp,ghpc,ncol=2, nrow =1)\n# interactive\nggplotly(ghp)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"bubble-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.1.5 Bubble plot","text":"","code":"\n# source: https://r-graph-gallery.com/320-the-basis-of-bubble-plot.html\nhead(StudentSurvey)##        Year Gender Smoke   Award HigherSAT Exercise TV Height Weight Siblings\n## 1    Senior      M    No Olympic      Math       10  1     71    180        4\n## 2 Sophomore      F   Yes Academy      Math        4  7     66    120        2\n## 3 FirstYear      M    No   Nobel      Math       14  5     72    208        2\n## 4    Junior      M    No   Nobel      Math        3  1     63    110        1\n## 5 Sophomore      F    No   Nobel    Verbal        3  3     65    150        1\n## 6 Sophomore      F    No   Nobel    Verbal        5  4     65    114        2\n##   BirthOrder VerbalSAT MathSAT  SAT  GPA Pulse Piercings    Sex\n## 1          4       540     670 1210 3.13    54         0   Male\n## 2          2       520     630 1150 2.50    66         3 Female\n## 3          1       550     560 1110 2.55   130         0   Male\n## 4          1       490     630 1120 3.10    78         0   Male\n## 5          1       720     450 1170 2.70    40         6 Female\n## 6          2       600     550 1150 3.20    80         4 Female\n# basic bubble plot\ngbp<-ggplot(StudentSurvey, aes(x=VerbalSAT, y=MathSAT, size = Exercise)) +\n  geom_point(alpha=0.5)+\n  ggtitle(\"basic bubble plot\")+\n  theme_grey(8)\n\n# Control circle size\ngbps<-ggplot(StudentSurvey, aes(x=VerbalSAT, y=MathSAT, size = Exercise)) +\n  geom_point(alpha=0.1)+\n  scale_size(range = c(.1, 10))+\n  ggtitle(\"control circle size\")+\n  theme_grey(8)\n\n# add the fourth dimension\ngbpd<-ggplot(StudentSurvey, aes(x=VerbalSAT, y=MathSAT, size = Exercise,color = Gender)) +\n  geom_point(alpha=0.5)+\n  ggtitle(\"add the fourth dimension\")+\n  theme_grey(8)\n\ngrid.arrange(gbp,gbps,gbpd,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"ranking","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2 Ranking","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"bar-chart","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.1 bar chart","text":"","code":"\n# with/without stat=\"identity\"\ngb1<-ggplot(data2,aes(x=group, y=value)) + \n  geom_bar(stat = \"identity\")+\n  ggtitle(\"with stat\")\n\ngb2<-ggplot(data2,aes(group)) + \n  geom_bar()+\n  ggtitle(\"without stat\")\n\n# order bar chart\ndata2$group<-factor(data2$group)\n\ngborder1<-ggplot(data2) +\n  geom_bar(aes(fct_infreq(group))) +\n  ggtitle(\"order the levels of x by decreasing frequency\")+\n  theme_grey(6)\n\ngborder2<-data2 %>%\n  group_by(group) %>%\n  summarize(sum = sum(value)) %>%\n  ggplot(aes(fct_reorder(group, sum, .desc = TRUE), sum))+\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"reorder x by y\")+\n  theme_grey(6)\n\ngborder<-ggplot(data2, aes(x = fct_inorder(group), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"set level order of x to row order\")+\n  theme_grey(6)\n\ngborderm1<-ggplot(data2, aes(x = fct_relevel(group, \"C\"), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"manually set group C to the first\") +\n  theme_grey(6)\n\ngborderm2<-ggplot(data2, aes(x = fct_relevel(group, \"C\",after = 2), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"manually set group C after the second group\") +\n  theme_grey(6)\n\ngborderm3<-ggplot(data2, aes(x = fct_relevel(group, \"C\",after = Inf), y = value)) +\n  geom_bar(stat = \"identity\")+\n  ggtitle(\"manually set group C to the last\") +\n  theme_grey(6)\n\ngbrev<-ggplot(data2, aes(fct_rev(group))) +\n  geom_bar() +\n  coord_flip() +\n  ggtitle(\"reverse the order of factor levels of x\") +\n  theme_grey(6)\n\ngrid.arrange(gb1, gb2,gborder1, gborder2,gborder,gborderm1,gborderm2,gborderm3,gbrev,ncol=4, nrow =3)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"cleveland-dot-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.2 Cleveland dot plot","text":"","code":"\n# resourse: https://r-graphics.org/recipe-bar-graph-dot-plot\n\ntophit <- tophitters2001[1:25, ]\n\ngc1<-ggplot(tophit, aes(x = avg, y = name)) +\n  geom_point()+\n  ggtitle(\"basic Cleveland dot plot\") +\n  theme_grey(8)\n\ngc2<-ggplot(tophit, aes(x = avg, y = fct_reorder(name, avg))) +\n  geom_point() +\n  ggtitle(\"ordered Cleveland dot plot\") +\n  theme_grey(8)\n\ngc3<-ggplot(tophit, aes(x = avg, y = fct_reorder(name, avg), color = lg)) +\n  geom_point() +\n  ggtitle(\"ordered Cleveland dot plot by color\") +\n  theme_grey(8)\n\ngc4<-ggplot(tophit, aes(x = avg, y = fct_reorder(name, avg))) +\n  geom_point() +\n  facet_grid(lg~.,scales = \"free_y\", space = \"free_y\") +\n  ggtitle(\"ordered Cleveland dot plot with facets\") +\n  theme_grey(8)\n\ngrid.arrange(gc1,gc2,gc3,gc4,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"parallel-coordinates-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.3 Parallel coordinates plot","text":"","code":"\n# rescale + group\ngstd<-ggparcoord(iris, columns = 1:4,groupColumn = 5)+\n  ggtitle(\"substract mean & divide by sd\")+\n  theme_grey(8)\ngglo<-ggparcoord(iris, columns = 1:4,groupColumn = 5,scale = \"globalminmax\")+\n  ggtitle(\"No scaling\")+\n  theme_grey(8)\nguni<-ggparcoord(iris, columns = 1:4,groupColumn = 5,scale = \"uniminmax\")+\n  ggtitle(\"Standardize to Min = 0 and Max = 1\")+\n  theme_grey(8)\ngcenter<-ggparcoord(iris, columns = 1:4,groupColumn = 5,scale = \"center\")+\n  ggtitle(\"Standardize and center variables\")+\n  theme_grey(8)\n\n# change alpha\ngpcalpha<-ggparcoord(iris, columns = 1:4,alphaLines = .3)+\n  ggtitle(\"change alpha\")+\n  theme_grey(8)\n# Splines\ngpcspline<-ggparcoord(iris, columns = 1:4, splineFactor = 10) +\n  ggtitle(\"splines\")+\n  theme_grey(8)\n\n# Highlight a group\niriscolor <- iris %>%\nmutate(color = factor(ifelse(Species == \"setosa\",1,0))) %>%\narrange(color)\ngpchl<-ggparcoord(iriscolor, columns = 1:4, groupColumn = \"color\") +\n  scale_color_manual(values = c(\"grey70\", \"red\")) +\n  guides(color = FALSE) +\n  ggtitle(\"highlight setosa\")+\n  theme_grey(8)\n\ngrid.arrange(gstd,gglo,guni,gcenter,gpcalpha,gpcspline,gpchl,ncol=3, nrow =3)\n# interactive Parallel coordinates with arrangement by groups\n\niris %>% arrange(Species) %>%\nparcoords(\nrownames = F \n, brushMode = \"1D-axes\"\n, reorderable = T\n, queue = T\n, color = list(\ncolorBy = \"Region\"\n,colorScale = \"scaleOrdinal\"\n,colorScheme = \"schemeCategory10\"\n)\n, withD3 = TRUE\n, width = 1000\n, height = 400\n)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"mosaic-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.4 Mosaic plot","text":"","code":"\n# Stacked bar chart\ngsbc<-ggplot(StudentSurvey, aes(x = Year, fill = Award)) +\n  geom_bar()+\n  ggtitle(\"Stacked bar chart\")+\n  theme_grey(8)\n\n# Mosaic plot (2 var)\n\ngmp2<-ggplot(StudentSurvey) +\n  geom_mosaic(aes(x = product(Year), fill = Award))+\n  ggtitle(\"Mosaic plot (2 var)\")+\n  theme_grey(8)\n\n# Mosaic plot (3 var)\ngmp3<-ggplot(StudentSurvey) +\n  geom_mosaic(aes(x = product(Year,Gender), fill = Award))+\n  ggtitle(\"Mosaic plot (3 var)\")+\n  theme_grey(8)\n\ngrid.arrange(gsbc,gmp2,gmp3,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"lollipop-plot","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.5 lollipop plot","text":"","code":"\n# source: https://r-graph-gallery.com/301-custom-lollipop-chart.html\n# basic lollipop plot\nglp<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=0, yend=value))+\n  ggtitle(\"basic lollipop plot\")+\n  theme_grey(8)\n\n# control marker\nglpm<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=0, yend=value))+\n  geom_point( size=5, color=\"red\", fill=alpha(\"orange\", 0.3), alpha=0.7, shape=21, stroke=2) +\n  ggtitle(\"control marker\")+\n  theme_grey(8)\n\n# control stem\nglps<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=0, yend=value),size=1, color=\"blue\",linetype=\"dotdash\" )+\n  ggtitle(\"control stem\")+\n  theme_grey(8)\n\n# control baseline\nglpb<-ggplot(data3, aes(x=time, y=value)) +\n  geom_point() + \n  geom_segment( aes(x=time, xend=time, y=20, yend=value))+\n  ggtitle(\"control baseline\")+\n  theme_grey(8)\n\ngrid.arrange(glp,glpm,glps,glpb,ncol=2, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"donut-chart-pie-chart","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.2.6 Donut chart, pie chart","text":"","code":"\n# source: https://r-graph-gallery.com/128-ring-or-donut-plot.html\ndata2$fraction = data2$value / sum(data2$value)\ndata2$ymax = cumsum(data2$fraction)\ndata2$ymin = c(0, head(data2$ymax, n=-1))\n\ngdc<-ggplot(data2, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2, fill=group)) +\n  geom_rect() +\n  coord_polar(theta=\"y\")+\n  xlim(c(-1, 4))+\n  ggtitle(\"Donut chart\")+\n  theme_grey(8)\n\ngpc<-ggplot(data2, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2, fill=group)) +\n  geom_rect() +\n  coord_polar(theta=\"y\")+\n  ggtitle(\"Pie chart\")+\n  theme_grey(8)\n\ngrid.arrange(gdc,gpc,ncol=2, nrow =1)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"evolution","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.3 Evolution","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"line-plotarea-chart","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.3.1 line plot/area chart","text":"","code":"\n# source: https://r-graph-gallery.com/line-chart-ggplot2.html\n# basic line plot\nglp<-ggplot(data3, aes(x=time, y=value)) +\n  geom_line()+\n  ggtitle(\"basic line plot\")+\n  theme_grey(8)\n\n# Customize\nglpc<-ggplot(data3, aes(x=time, y=value)) +\n  geom_line( color=\"#69b3a2\", size=2, alpha=0.9, linetype=2)+\n  ggtitle(\"customize line plot\")+\n  theme_grey(8)\n\n# basic area chart\ngac<-ggplot(data3, aes(x=time, y=value)) +\n  geom_area()+\n  ggtitle(\"basic area chart\")+\n  theme_grey(8)\n\ndata4<-data.frame(time = as.numeric(rep(seq(1,7),each=7)), \nvalue = runif(49, 10, 100) ,             \ngroup = rep(LETTERS[1:7],times=7)\n)\n\n# basic stacked area chart\ngsac<-ggplot(data4, aes(x=time, y=value, fill=group)) + \n  geom_area()+\n  ggtitle(\"basic stacked area chart\")+\n  theme_grey(8)\n\n# proportional stacked area chart\ndata4 <- data4  %>%\n  group_by(time, group) %>%\n  summarise(n = sum(value)) %>%\n  mutate(percentage = n / sum(n))\ngpsac<-ggplot(data4, aes(x=time, y=percentage, fill=group)) + \n  geom_area(alpha=0.6 , size=1, colour=\"black\")\n\ngrid.arrange(glp,glpc,gac,gsac,gpsac,ncol=3, nrow =2)"},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"flow","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.4 flow","text":"","code":""},{"path":"graphics-cheatsheet-in-ggplot2.html","id":"alluvial-diagram","chapter":"6 Graphics cheatsheet in ggplot2","heading":"6.4.1 alluvial diagram","text":"","code":"\n# source: https://cran.r-project.org/web/packages/ggalluvial/vignettes/ggalluvial.html#:~:text=The%20ggalluvial%20package%20is%20a,the%20feedback%20of%20many%20users.\n\n# alluvial diagram example\n\ngad<-ggplot(as.data.frame(Titanic),aes(y = Freq, axis1 = Survived, axis2 = Sex, axis3 = Class)) +\n  geom_alluvium(aes(fill = Class),width = 0)+\n  geom_stratum(width = 1/8) +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)))+\n  ggtitle(\"alluvial diagram\")\n\n# change alluvium color\ngadc<-ggplot(as.data.frame(Titanic),aes(y = Freq, axis1 = Survived, axis2 = Sex, axis3 = Class)) +\n  geom_alluvium(aes(fill = Survived),width = 0)+\n  geom_stratum(width = 1/8) +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)))+\n  ggtitle(\"change alluvium color\")\n\ngrid.arrange(gad,gadc,ncol=1, nrow =2)"},{"path":"ggplot2-cheatsheet.html","id":"ggplot2-cheatsheet","chapter":"7 ggplot2 cheatsheet","heading":"7 ggplot2 cheatsheet","text":"Haoyuan Sun, Zhongtian Qiao","code":"\nlibrary(tidyverse)\nlibrary(ggplot2)"},{"path":"ggplot2-cheatsheet.html","id":"overview","chapter":"7 ggplot2 cheatsheet","heading":"7.1 Overview","text":"ggplot2 system declaratively creating graphics. provide data, tell ggplot2 map variables aesthetics, graphical primitives use, takes care details. cheatsheet shows code options commonly used graphs using ggplot2.","code":""},{"path":"ggplot2-cheatsheet.html","id":"scatter-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.2 scatter plot","text":"can get scatter plot using geom_point().","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy))"},{"path":"ggplot2-cheatsheet.html","id":"setting-color","chapter":"7 ggplot2 cheatsheet","heading":"7.2.1 Setting color","text":"can change color poionts using color =.","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy), color = \"blue\")"},{"path":"ggplot2-cheatsheet.html","id":"color-by-groups","chapter":"7 ggplot2 cheatsheet","heading":"7.2.2 Color by groups","text":"X-variable categorical variable, variable “class”, can set points different classes different colors.","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy, color = class))"},{"path":"ggplot2-cheatsheet.html","id":"identify-overlapping-points","chapter":"7 ggplot2 cheatsheet","heading":"7.2.3 Identify overlapping points","text":"can get scatter plot using geom_count. size points shows point overlap.","code":"\nggplot(data = mpg) +\n  geom_count(aes(x = displ, y = hwy))"},{"path":"ggplot2-cheatsheet.html","id":"line-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.3 Line plot","text":"can get line plot using geom_line().Use lty = change type line.\nUse lty = change type line.Use size = change size line.\nUse col = change color line.\n","code":"\nggplot(data = mpg) +\n  geom_line(aes(x = displ, y = hwy))"},{"path":"ggplot2-cheatsheet.html","id":"adding-an-arbitrary-line","chapter":"7 ggplot2 cheatsheet","heading":"7.3.1 Adding an arbitrary line","text":"can add arbitrary lines using geom_abline().","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy)) +\n  geom_abline(slope = 1, intercept = 20)"},{"path":"ggplot2-cheatsheet.html","id":"box-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.4 Box plot","text":"can get box plot using geom_boxplot().","code":"\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy))"},{"path":"ggplot2-cheatsheet.html","id":"horizontal-box-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.4.1 Horizontal box plot","text":"using coord_flip(), get horizontal box plot.","code":"\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy)) +\n  coord_flip()"},{"path":"ggplot2-cheatsheet.html","id":"histogram-1","chapter":"7 ggplot2 cheatsheet","heading":"7.5 Histogram","text":"can get histogram using geom_histogram().","code":"\nggplot(data = mpg) +\n  geom_histogram(aes(x = hwy))"},{"path":"ggplot2-cheatsheet.html","id":"bins","chapter":"7 ggplot2 cheatsheet","heading":"7.5.1 Bins","text":"default value bin 30. changing value bins =, can get different width bin.","code":"\nggplot(data = mpg) +\n  geom_histogram(aes(x = hwy), bins = 10)"},{"path":"ggplot2-cheatsheet.html","id":"bar-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.6 Bar plot","text":"can get barplot shows relationship hwy displ using geom_bar arguments position=\"dodge\" stat = \"identity\".","code":"\nggplot(data = mpg, aes(x = hwy, y = displ)) +\n  geom_bar(position = \"dodge\", stat = \"identity\")"},{"path":"ggplot2-cheatsheet.html","id":"heatmap-1","chapter":"7 ggplot2 cheatsheet","heading":"7.7 Heatmap","text":"","code":"\nx <- c(1, 1, 1, 2, 2, 2, 3, 3, 3)\ny <- c(1, 2, 3, 1, 2, 3, 1, 2, 3)\ndf <- data.frame(x, y)\nset.seed(2017)\ndf$z <- sample(9)\nggplot(df, aes(x, y)) +\n  geom_raster(aes(fill = z))"},{"path":"ggplot2-cheatsheet.html","id":"another-way-to-plot-heatmap","chapter":"7 ggplot2 cheatsheet","heading":"7.7.1 Another way to plot heatmap","text":"","code":"\nggplot(df, aes(x, y, fill = z)) +\n  geom_tile() "},{"path":"ggplot2-cheatsheet.html","id":"countour-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.8 Countour plot","text":"can get contour plot using geom_density2d().","code":"\nggplot(data = mpg, aes(x = displ, y = hwy)) +\n  geom_density2d() +\n  geom_point(size = 1, alpha = 0.3)"},{"path":"ggplot2-cheatsheet.html","id":"area-plot","chapter":"7 ggplot2 cheatsheet","heading":"7.9 Area plot","text":"want analyse 2 continuous variables, can plot area plot using geom_area.","code":"\nggplot(data = economics) +\n  geom_area(aes(x = date, y = unemploy))"},{"path":"ggplot2-cheatsheet.html","id":"adding-text","chapter":"7 ggplot2 cheatsheet","heading":"7.10 Adding Text","text":"","code":""},{"path":"ggplot2-cheatsheet.html","id":"title-and-xy-corrdinate","chapter":"7 ggplot2 cheatsheet","heading":"7.10.1 title and xy-corrdinate","text":"using labs(), can add information plot, title, subtitle, x-coordinate, y-coordinate, class color, class fill, etc.","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy, color = class)) +\n  labs(title = \"displ v.s. hwy\",\n       subtitle = \"group by different class\",\n       x = \"Displ\",\n       y = \"Hwy\",\n       color = \"Class\")"},{"path":"ggplot2-cheatsheet.html","id":"label","chapter":"7 ggplot2 cheatsheet","heading":"7.10.2 Label","text":"can get label plot data geom_text(),content label controlled aes(label = ).\ncontent label controlled aes(label = ).Use hjust vjust adjust vertical horizontal position label.\nUse col = adjust color label.\nUse size = adjust size label.\n","code":"\ndata <- data.frame(name = c(\"a\", \"b\", \"c\"), count = c(20, 10, 30))\n\nggplot(data, aes(name, count)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = count))\nggplot(data, aes(name, count)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = count), col = \"blue\", vjust = -0.3, size = 5)"},{"path":"ggplot2-cheatsheet.html","id":"facet","chapter":"7 ggplot2 cheatsheet","heading":"7.11 Facet","text":"","code":""},{"path":"ggplot2-cheatsheet.html","id":"facet_wrap","chapter":"7 ggplot2 cheatsheet","heading":"7.11.1 facet_wrap","text":"can get multiple plots group class using facet_wrap.","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy)) +\n  facet_wrap(~class,nrow=2)"},{"path":"ggplot2-cheatsheet.html","id":"facet_grid","chapter":"7 ggplot2 cheatsheet","heading":"7.11.2 facet_grid","text":"can get multiple plots group drv cyl using facet_grid.","code":"\nggplot(data = mpg) +\n  geom_point(aes(x = displ, y = hwy)) +\n  facet_grid(drv~cyl)"},{"path":"data-preprocessing-cheat-sheet-in-r.html","id":"data-preprocessing-cheat-sheet-in-r","chapter":"8 Data preprocessing cheat sheet in R","heading":"8 Data preprocessing cheat sheet in R","text":"Ying GaoThis cheat sheet provide basic steps students think follow new data comes order simply preprocess , including importing data, checking missing values, reshaping, etc.Depending different cases datasets, however, need consider different ways clean treat data. example, working missing values, might need figure whether data missing randomly characteristic specific reasons explain . Therefore, cheat sheet now limitation different situations students meet practical work. creating cheat sheet, process cleaning exploring data becomes clearer also found useful methods help understand data. can extended improved comprehensive future.Hope save time help getting sense easy start problem solving project!Click link cheat sheet:https://github.com/yg2804/rep/blob/main/data_preprocessing_cheat_sheet_in_r.pdf","code":""},{"path":"data-wrangling-and-visualization-in-r.html","id":"data-wrangling-and-visualization-in-r","chapter":"9 Data Wrangling and Visualization in R","heading":"9 Data Wrangling and Visualization in R","text":"Weilin ZhouReferred Prof’s lecture notes online material create cheatsheet G5293 course, mainly aimed introducing useful plotshttps://hbctraining.github.io/Intro--R-flipped/cheatsheets/data-visualization-2.1.pdf\nhttp://www.sthda.com/english/wiki/-awesome--ggplot2--practical-guide---highly-effective-r-software--data-visualization#one-variable-discrete","code":""},{"path":"data-wrangling-and-visualization-in-r.html","id":"introduction","chapter":"9 Data Wrangling and Visualization in R","heading":"9.1 Introduction","text":"R good tool apply data cleaning data visualization.\n### Prerequisites:\nUseful packages inside R may include:","code":"\nlibrary(tidyverse) \nlibrary(dplyr)\n# provide simple functions to the most common data manipulation tasks\n# 'ggplot2' is included in tidyverse"},{"path":"data-wrangling-and-visualization-in-r.html","id":"import-data","chapter":"9 Data Wrangling and Visualization in R","heading":"9.1.1 Import data:","text":"","code":"\nflights_data <- nycflights13::flights #dataset in package\ndata_set <- read.csv(\"filepath/filename.csv\") #outer source\n#head(flights_data)"},{"path":"data-wrangling-and-visualization-in-r.html","id":"data-wrangling","chapter":"9 Data Wrangling and Visualization in R","heading":"9.1.2 Data Wrangling:","text":"important keep dataset ‘clean’ visualizing data, can done visualization adjusted process visualization.Useful functions solve data cleaning:\nfilter(): select observations based values\narrange(): reorder observations\nselect(): select variables based names\nmutate(): add variables functions existing variables\ngroup_by(): operate groupwise names\nsummarize(): collapse many values single\ndrop_na(): drop NA values\ntop_n(): select order top n entries\ndistinct(): remove duplicate rows\nleft/right/inner/full_join(): types joining data\nfilter(): select observations based valuesarrange(): reorder observationsselect(): select variables based namesmutate(): add variables functions existing variablesgroup_by(): operate groupwise namessummarize(): collapse many values singledrop_na(): drop NA valuestop_n(): select order top n entriesdistinct(): remove duplicate rowsleft/right/inner/full_join(): types joining dataTwo useful steps tidying:\npivot_longer(): increase number rows, can used tidy datasets optimized data entry rather analysis\npivot_wider(): increase number column, useful create summary tables presentation data\npivot_longer(): increase number rows, can used tidy datasets optimized data entry rather analysispivot_wider(): increase number column, useful create summary tables presentation data","code":""},{"path":"data-wrangling-and-visualization-in-r.html","id":"data-visualization","chapter":"9 Data Wrangling and Visualization in R","heading":"9.2 Data Visualization:","text":"","code":""},{"path":"data-wrangling-and-visualization-in-r.html","id":"grammar-of-graphics","chapter":"9 Data Wrangling and Visualization in R","heading":"9.2.1 Grammar of Graphics:","text":"Formula building graph:Layers:\nDataset\nAesthetic mapping: x-loc/y-loc/shape/size/fill/color/alpha/group\nGeom: point/bar/boxplot/histogram/density/hex\nStat: bin/boxplot/identity/density\nPosition: identity/jitter/dodge/stack\nDatasetAesthetic mapping: x-loc/y-loc/shape/size/fill/color/alpha/groupGeom: point/bar/boxplot/histogram/density/hexStat: bin/boxplot/identity/densityPosition: identity/jitter/dodge/stackScale:\nscale_*_date()\nscale_*_continuous()\nscale_*_identity()\nscale_color_manual()\nscale_fill_viridis_c()\nscale_*_date()scale_*_continuous()scale_*_identity()scale_color_manual()scale_fill_viridis_c()Coord (1 can used):\ncoord_polar(): use polar coordinate system\ncoord_fixed(): fixed scale coordinate system, ratio = y-axis/x-axis\ncoord_polar(): use polar coordinate systemcoord_fixed(): fixed scale coordinate system, ratio = y-axis/x-axisFacet (1 can used):\nfacet_grid(): form matrix panels defined row column\nfacet_wrap(): wrap 1d sequence panels 2d\nfacet_grid(): form matrix panels defined row columnfacet_wrap(): wrap 1d sequence panels 2dTheme (1 can used):\ntheme_grey(): default theme grey plot background\ntheme_bw(): use white background thin grey grid lines\ntheme_linedraw(): black lines various widths white backgrounds\ntheme_minimal(): minimalistic theme background annotations\ntheme_void(): completely empty theme\ntheme_grey(): default theme grey plot backgroundtheme_bw(): use white background thin grey grid linestheme_linedraw(): black lines various widths white backgroundstheme_minimal(): minimalistic theme background annotationstheme_void(): completely empty theme","code":"ggplot(data = df)+\n  geom_function(mapping=aes(x=x=,y,y),stat=,Position=)+\n  coordinate_function+\n  facet_function+\n  scale_function+\n  theme_function+\n  labs(title=\"Graph title\",\n       x=\"X-axis name\",\n       y=\"Y-axis name\")"},{"path":"data-wrangling-and-visualization-in-r.html","id":"continuous-variables","chapter":"9 Data Wrangling and Visualization in R","heading":"9.2.2 Continuous Variables:","text":"Types categorical data:\nnominal: fixed category order\nordinal: fixed category order\nnominal: fixed category orderordinal: fixed category order","code":""},{"path":"data-wrangling-and-visualization-in-r.html","id":"one-variable","chapter":"9 Data Wrangling and Visualization in R","heading":"9.2.2.1 One variable:","text":"Histogram:\nShow frequency values variableArea Plot:\nRepresnet evolution numeric variableDot Plot:Cleveland dot plot:","code":"ggplot(df, aes(x=x))+\n    geom_histogram()  # Basic histogram\nor  geom_histogram(binwidth=1) # Change the width of bins\nor  geom_histogram(breaks=seq(30,110,10)) \n# Another way to change width of bins\nor  geom_histogram(color=\"black\",fill=\"white\",linetype=\"dashed\") \n# Change colors/fills/linetypes\nor  geom_histogram(aes(y = cumsum(..count..))) \n# create cumulative frequency histogram\n\nAdditions:\n    +geom_density(color=\"red\") # Add density curve \n    +stat_function(fun=dnorm,args=list(mean=0,sd=1),color=\"red\",lwd=1.5) \n    #Add normal curve    \nggplot(df,aes(x=x))+\n  geom_area(aes(fill=y),stat=\"bin\",alpha=0.6) \n#fill color by y-var\nggplot(df,aes(x=x))+\n  geom_dotplot(aes(fill=y)) \n#fill color by y-var\nggplot(df,aes(x=x,y=fct_reorder(y,x),color = z))+ \n  # color is used for large number of categories\n  geom_point(color=\"blue\")+\n  theme_linedraw()+\n  facet_grid(.~reorder(y,-x,median),scales = \"free_y\",space=\"free_y\") \n  # used for faceting\n  # scales: determine whether the scales are shared across all facets\n  # sapce: determine whether all panels have the same size"},{"path":"data-wrangling-and-visualization-in-r.html","id":"two-variables","chapter":"9 Data Wrangling and Visualization in R","heading":"9.2.2.2 Two Variables:","text":"Scatterplot (Continuous X, Coutinuous Y):Boxplots (Discrete X, Continuous Y):measure well distributed data datasetViolin plot (Discrete X, Continuous Y):Similar boxplot, show kerneal probability density dataRidgeline plot:Parallel Coordinates:Scale Options:\nglobalminmax: scaling\nuniminmax: Stadardize min=0 max=1\nstd: Normalize univariately (Subtract mean & divide sd)\ncenter: Standardize center variables\nglobalminmax: scalinguniminmax: Stadardize min=0 max=1std: Normalize univariately (Subtract mean & divide sd)center: Standardize center variablesBar plot:Heatmaps (Continuous bivariate distribution):2d density estimate (Continuous bivariate distribution):Used add 2d density estimate scatter plot","code":"\nggplot(ddf,aes(x,y))+\n  geom_point(alpha=0.5,size=1)+\n  geom_smooth(method=lm) \n#add a regression line on a scatterplot\n\n#alpha: adjust transparency of point\n#size: adjust size of pointggplot(df,aes(x=x,y=y))+\n    geom_boxplot() # Basic boxplot\nor  geom_boxplot() + coord_flip() # Rotate the boxplot\nor  geom_boxplot(outlier.color=\"red\",outlier.shape=5) \n  # Make adjustments of outliers\nggplot(df,aes(x=x,y=y))+\n  geom_violin(trim=FALSE)+\n  stat_summary(fun.data=\"mean_sdl\",fun.args=list(mult=1),geom=\"pointrange\",color=\"blue\")\n#add mean points (+/- SD)\nlibrary(ggridges)\nggplot(df, aes(x=x,y=y))+\n  geom_density_ridges(fill=\"blue\",alpha=0.5)\n# fill: change inside color\n# alpha: specify the level of transparency\nlibrary(GGally)\nggparcoord(df,columns=num:num,groupColumn=num,\n           scale='globalminmax/uniminmax/std/center',\n           showPoints = TRUE/FALSE,\n           title=\"Title\",\n           alphaLines = 0.3)\n  #Showpoints: add dots\n  #Alphalines: add transparency\nggplot(df,aes(x=x))+\n  geom_bar(fill=\"color\")ggplot(df,aes(x=x,y=y))+\n  geom_bin2d(binwidth=c(num,num))\n  # Square heatmap\n  \nor geom_hex(binwidth=c(num,num))\n  # Hex heatmap\nggplot(df, aes(x=x,y=y))+\n  geom_point()+\n  geom_density_2d()"},{"path":"data-wrangling-and-visualization-in-r.html","id":"additional-interesting-plots","chapter":"9 Data Wrangling and Visualization in R","heading":"9.2.3 Additional Interesting plots:","text":"Principal Components Analysis & Biplot:\nGoal: explain variability dataset fewer variables original datasetMosaic Plots:\nvisual representation association two categorical variables.Interactive plot:Alluvial Plot:\nGroup categorical data flows can easily traced diagram.","code":"\nlibrary(redav)\npca <- prcomp(df[num:num],scale.=TRUE)\n\nbiplot(results,scale=0) #Basic biplot\n\ndraw_biplot(df,\"var\",project=FALSE) #Biplot with calibrated axis\n#Calculate total variance explained by each principal component\nvar_explained <- results$sdev^2 / sum(results$sdev^2)library(vcd)\nmosaic(~Var1+Var2+..+Varn, data=df,\n       direction = c(\"v/h\",\"h/v\")  \n       main = \"Title name\",\n       shade = TRUE/FALSE, \n       legend = TRUE/FALSE)\n#direction: layout direction of each variable\n#shade: whether to color the figure\n#legend: whether to display a legend for data\nlibrary(plotly)\n\nplotly::plot_ly(df,x=x,y=y,color=z,text=w)%>%\n  add_markers()\nlibrary(ggalluvial)\nggplot(df,aes(axis1=Class1,axis2=Class2,y=Freq))+\n  geom_alluvium(color=\"blue\")+\n  geom_stratum()+\n  geom_text(stat = \"stratum\",aes(label=paste(after_stat(stratum),\"\\n\",after_stat(count))))+\n  scale_x_discrete(limits = c(\"Class1\",\"Class2\"))"},{"path":"ggplot2-cheatsheet-1.html","id":"ggplot2-cheatsheet-1","chapter":"10 GGplot2 cheatsheet","heading":"10 GGplot2 cheatsheet","text":"Yiqin Shi Yuxuan LiangGGplot2 one commonly used plotting packages, can efficiently create complex aesthetically pleasing graphics using easily understandable syntax. purpose cheatsheet provide organized information package GGplot2. cheatsheet consists two parts. first part classification graphics. second part customization graph drawing. classification cheat sheet made according website https://r-charts.com/#category. first part, function codes, along suggestions use , sample diagrams, useful argument function notes category. second part, cheatsheet contains different customization methods drawing graphics examples help better understand roles.cheatsheet can accessed following link:\nhttps://github.com/yxliv/communitycontribution/blob/main/communitycontribution.pdf","code":""},{"path":"cheat-sheet-for-tidyverse.html","id":"cheat-sheet-for-tidyverse","chapter":"11 Cheat Sheet for Tidyverse","heading":"11 Cheat Sheet for Tidyverse","text":"Yinda QianThis R Cheat Sheet Tidyverse. made Cheat Sheet give RStudio user clearer view Tidyverse , Tidyverse works, advantages Tidyverse , functions Tidyverse includes. following section, users picture utilize function efficiently, manipulate data.Enlarge/download cheatsheet","code":""},{"path":"memos-checklist-and-usful-links-experience-of-statistical-graphic.html","id":"memos-checklist-and-usful-links-experience-of-statistical-graphic","chapter":"12 Memos, checklist and usful links: experience of statistical graphic","heading":"12 Memos, checklist and usful links: experience of statistical graphic","text":"Jiayuan Zhou, Wenqi YuMotivation community contribution: community contribution aim share experience create short checklist effective process, show like blog people can search online. reason want , people think work statistical graphic project might easy way. Nowadays, people can find advertisement transfer data analysis get offer data analysis Internet, posts describe process everyone can . However, student really learn course (like STAT5293 statistical graphics) know lots work behind simple simple, beautiful easy understand pictures. Therefore want write share student take course, also people may get involved future. Also, chose group content based experience mistakes made. information provided two people comprehensive one person’s, especially since one still systematically exposed r language first time semester, made picking programming-type problems introductory. addition, also check gaps past knowledge process writing, equivalent reviewing contents class . think meaning value. However, time, didn’t cover later chapters content r project git, chance afterwards, might add .Part 1 CommunicationLike first step finish Problem Sets read question, believe first thing confirm project requirements accepting project assigned task. complicate matters, sometimes extra help needed understand meaning data – especially need work areas never touched. , “Explanation Document” can give rough introduction. need accurate content, need search Internet , book meeting data provider, similar get trouble Problem Sets: ask ED discussion meet professor.Also, project one-person battlefield, teamwork beneficial project. Therefore, communicate teammates, think also key point. Based experience, feel meaningful multiple progress reports assigning tasks. report, let teammates know right, help find mistakes, think difficult point. present, think better solution (mainly homework communication two-person groups) share requirements reading requirements together. , first meeting scheduled according respective time. main purpose communicate drafts progress, explain processing important data party, merging cluster data, marking data outliers, etc. Questions details can discussed time, questions can saved ask professor necessary. Subsequent meetings can repeat process final version completed. course, meantime, discussions ambiguous results professors also needed avoid questionable results.addition, business analysis, recently reading Minto Pyramid Principle Logic Writing Thinking Storytelling Data, find interesting supplementary reading business analysis., investigations background knowledge data preliminary preparations sufficient, analysis data can carried .Part 2 Analysis Visualization Processggplot2 tidyverse package extremely simple use everyone. get data set, need take cursory scan think needs want. coding, need clean data. Popular methods deleting messy data, dealing missing values, adjusting format, unified name.example, Problem Set2, cluster separated categories (“Vegerables ~E”, “Vegerables F~P” etc.) unified name “Vegetables”. apply ‘tidyverse’ regular expression make code readable, since find base R team project quite hard understand.can follow instruction draw plot.R beginner might use base R plot results, complex output, ggplot2 powerful tools. However, ggplot2 easier beginner, list problems met based useful basic function ggplot2.First, process editing drawing, draw various chart cumulative conditions, line--line independent running function python. ggplot2, “+”. different programming languages, still similar “modular” design. professional explanation, check stackoverflow page., get trouble find bugs final output, suggest three solutions (may like debug):codes, removed part think problems, observed graph change;codes, removed part think problems, observed graph change;Browsed stackoverflow (others) found similar solutions source code, consider improve ;Browsed stackoverflow (others) found similar solutions source code, consider improve ;ggplot2 inspired Grammar Graphics book, summarizes drawing process data, transformation, scale, coordinates, elements, guides, display, etc. series independent steps combined achieve personalized statistical plots. ggplot2 subtle, think concise intuitive drawing logic python’s matplotlib statistical grapics.ggplot2 inspired Grammar Graphics book, summarizes drawing process data, transformation, scale, coordinates, elements, guides, display, etc. series independent steps combined achieve personalized statistical plots. ggplot2 subtle, think concise intuitive drawing logic python’s matplotlib statistical grapics.Second, convenient use facet_wrap facet_grid functions, can classify draw samples attributes. previous practice group data draw graphs separately. ggplot2 provides easy way facet directly. can directly group draw attributes. type graph, separate data attributes, draw multiple graphs;Third, fill color parameters，difference two parameters easy confuse, check general fill changes color within shapes, color changes outline.Last least, Geom_bar. example, aggregated data female 6, male 4, write code like :ggplot(data, aes(x = gender, y = value)) + geom_bar().prompt “stat_count() can x y aesthetic”. change ggplot(data, aes(x = gender)) + geom_bar()), find graph two bars height, reflect difference value. correct way write data :ggplot(data, aes(x = gender, y = value)) + geom_bar(stat = \"identity\").geom_bar handles data female, female, female, …, male, male, male, male default, count, default stat = “count”. details, can refer stackoverflow page. geom_bar(stat = \"identity\") also equivalent geom_col().Since ggplot2 tidyverse various users, R studio created official cheat sheet everyone download. can quickly grasp main knowledge ggplot2. can learn syntax, code selecting part want.Part 3 ChecklistThis check list think must working project: Discuss manager professor precise requirements  Get description document dataset  Check deal abnormal data (e.g. cleaning data) visualization Debug Format result graph check details, e.g: data arrangement logic, color, picture copywriting Part 4 Helpful Content LinksAside knowledge textbooks, find bugs getting trouble, can find solutions Internet books. already mention previous content, list R coding.beginner R Rstudio, order get familiar R ggplot2, book source used extra textbook:Discovering Statistics using R Andy Field, Jeremy Miles Zoe Field , 2012. ,Introduction R W.N.Venables, D.M.Smith R core team..provide brief description operate R R Studio mention visualization inside good future advanced R coding.helpful links, several recommend used find help :Professor Joyce Robbins’s website STAT 5293tidyverse cookbookR graphics cookbookIn addition, one notes last semesters class, since helpful us, put link :Jiayuan’s casual note STAT5206","code":"\n# combine.2density <- two.density %>%\n#   mutate_if(grepl(\"Vegetables\",.), ~replace(., grepl('Vegetables', .), \"Vegetables\")) %>%\n#   mutate_if(grepl(\"Fruit\",.), ~replace(., grepl('Fruit', .), \"Fruit\"))"},{"path":"cheatsheet-for-multiple-graphics.html","id":"cheatsheet-for-multiple-graphics","chapter":"13 Cheatsheet for multiple graphics","heading":"13 Cheatsheet for multiple graphics","text":"Guo Pei","code":""},{"path":"cheatsheet-for-multiple-graphics.html","id":"description","chapter":"13 Cheatsheet for multiple graphics","heading":"13.1 Description","text":"cheatsheet includes single formula sheet detailed tutorial implementing different plot types several data sets. specific, contains Histogram, Boxplot, Violin plot, Ridgeline plot, Q-Q plot, Bar chart, Cleveland dot plot, Scatterplot, Parallel coordinates plot, Biplot, Mosaic plot, Alluvial diagram Heatmap.formula sheet part, contains nearly formulas professor introduced class used met previous problem sets.Link: https://github.com/gloria6661/5293_CC/blob/main/cheatsheet.pdfFor implementation part, figure attached code draw . types plots, lists one methods draw.","code":"\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(ggridges)\nlibrary(carData)\nlibrary(forcats)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(openintro)\nlibrary(plotly)\nlibrary(GGally)\nlibrary(scales)\nlibrary(parcoords) # devtools::install_github(\"timelyportfolio/parcoords\")\nlibrary(d3r)\nlibrary(redav)\nlibrary(grid)\nlibrary(vcd)\nlibrary(vcdExtra)\nlibrary(ggalluvial)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"histogram-2","chapter":"13 Cheatsheet for multiple graphics","heading":"13.2 Histogram","text":"Data: iris","code":"\nhead(iris)##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n## 3          4.7         3.2          1.3         0.2  setosa\n## 4          4.6         3.1          1.5         0.2  setosa\n## 5          5.0         3.6          1.4         0.2  setosa\n## 6          5.4         3.9          1.7         0.4  setosa"},{"path":"cheatsheet-for-multiple-graphics.html","id":"frequency-count-histogram-ggplot2","chapter":"13 Cheatsheet for multiple graphics","heading":"13.2.1 Frequency (count) histogram (ggplot2)","text":"","code":"\nggplot(iris, aes(Sepal.Length)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\", binwidth = .3) +\n  theme_grey(14) +\n  labs(title = \"Histogram of Sepal Length\", x = \"Sepal Length\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"histograms-with-right-closed-right-open-base-r","chapter":"13 Cheatsheet for multiple graphics","heading":"13.2.2 Histograms with right closed / right open (base R)","text":"","code":"\npar(mfrow = c(1, 2))\n# histogram with right closed\nhist(iris$Sepal.Length, col = \"lightblue\", right = TRUE,\n     breaks = 4, ylim = c(0, 60),\n     main = \"Histogram with right closed\", xlab = \"Sepal Length\")\n# histogram with right open\nhist(iris$Sepal.Length, col = \"lightblue\", right = FALSE,\n     breaks = 4, ylim = c(0, 60),\n     main = \"Histogram with right open\", xlab = \"Sepal Length\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"density-histogram-with-density-curve-overlaid-ggplot2","chapter":"13 Cheatsheet for multiple graphics","heading":"13.2.3 Density histogram with density curve overlaid (ggplot2)","text":"","code":"\nggplot(iris, aes(x = Sepal.Length, y = ..density..)) + \n  geom_histogram(binwidth = .5, color = \"blue\", fill = \"lightblue\", boundary = 0) +\n  geom_density(color = \"red\") +\n  labs(title = \"Density Histogram\", x = \"Sepal Length\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"density-histogram-with-density-curve-and-theoretical-normal-curve-overlaid-base-r","chapter":"13 Cheatsheet for multiple graphics","heading":"13.2.4 Density histogram with density curve and theoretical normal curve overlaid (base R)","text":"","code":"\n# draw the density histogram\nhist(iris$Sepal.Length, freq = FALSE, ylim = c(0, 0.5), \n     main = \"Density Histogram\", xlab = \"Sepal Length\")\n# add density curve\nlines(density(iris$Sepal.Length), col = 2)\n# add normal curve\nx <- seq(3, 9, length = 100) # x-axis grid\nnc <- dnorm(x, mean = mean(iris$Sepal.Length), sd = sd(iris$Sepal.Length)) #normal curve\nlines(x, nc, col = 3)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"cumulative-frequency-histogram","chapter":"13 Cheatsheet for multiple graphics","heading":"13.2.5 Cumulative frequency histogram","text":"","code":"\ng1 <- ggplot(iris, aes(x = Sepal.Length)) +\n  geom_histogram(color = \"blue\", fill = \"lightblue\") +\n  labs(title = \"Frequency\", x = \"Sepal Length\")\ng2 <- ggplot(iris, aes(x = Sepal.Length)) +\n  geom_histogram(aes(y = cumsum(..count..)),\n                 color = \"blue\", fill = \"lightblue\") +\n  labs(title = \"Cumulative Frequency\", x = \"Sepal Length\")\ngrid.arrange(g1, g2, nrow = 1)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"boxplot-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.3 Boxplot","text":"","code":""},{"path":"cheatsheet-for-multiple-graphics.html","id":"boxplot-base-r","chapter":"13 Cheatsheet for multiple graphics","heading":"13.3.1 Boxplot (base R)","text":"","code":"\nboxplot(Sepal.Length ~ Species, data = iris, horizontal = TRUE,\n        main = \"Sepal Length vs Species\", ylab = \"Sepal Length\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"boxplot-ggplot2","chapter":"13 Cheatsheet for multiple graphics","heading":"13.3.2 Boxplot (ggplot2)","text":"","code":"\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_boxplot(varwidth = TRUE) +\n  coord_flip() +\n  labs(title = \"Sepal Length vs Species\", y = \"Sepal Length\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"violin-plot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.4 Violin plot","text":"","code":"\nggplot(iris, aes(x = Species,\n                  y = Sepal.Length)) +\n  geom_violin(adjust = 1.5) +\n  coord_flip() +\n  labs(title = \"Violin Plot\", y = \"Sepal Length\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"ridgeline-plot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.5 Ridgeline plot","text":"","code":"\nggplot(iris, aes(x = Sepal.Length, y = reorder(Species, Sepal.Length, median))) +\n  geom_density_ridges(fill = \"blue\", alpha = .5, scale = .95) +\n  labs(title = \"Ridgeline Plot\", x = \"Sepal Length\", y = \"Species\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"q-q-plot-quantile-quantile","chapter":"13 Cheatsheet for multiple graphics","heading":"13.6 Q-Q plot (quantile-quantile)","text":"","code":"\nqqnorm(iris$Sepal.Length)\nqqline(iris$Sepal.Length, col = 2)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"bar-chart-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7 Bar chart","text":"Data: TitanicSurvival","code":"\nhead(TitanicSurvival)##                                 survived    sex     age passengerClass\n## Allen, Miss. Elisabeth Walton        yes female 29.0000            1st\n## Allison, Master. Hudson Trevor       yes   male  0.9167            1st\n## Allison, Miss. Helen Loraine          no female  2.0000            1st\n## Allison, Mr. Hudson Joshua Crei       no   male 30.0000            1st\n## Allison, Mrs. Hudson J C (Bessi       no female 25.0000            1st\n## Anderson, Mr. Harry                  yes   male 48.0000            1st"},{"path":"cheatsheet-for-multiple-graphics.html","id":"ordinal-data-sort-in-logical-order-of-the-categories","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7.1 Ordinal data (sort in logical order of the categories)","text":"","code":"\nggplot(TitanicSurvival, aes(passengerClass)) +\n  geom_bar(fill = \"cornflowerblue\") +\n  ggtitle(\"Passenger Class\") +\n  labs(title = \"Passenger Class\", x = \"\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"nominal-data-sort-from-highest-to-lowest-count","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7.2 Nominal data (sort from highest to lowest count)","text":"","code":"\nggplot(TitanicSurvival, aes(fct_infreq(passengerClass))) +\n  geom_bar(fill = \"cornflowerblue\") +\n  ggtitle(\"Passenger Class\") +\n  labs(title = \"Passenger Class\", x = \"\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"bar-chart-with-facets","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7.3 Bar chart with facets","text":"","code":"\nggplot(data = TitanicSurvival, aes(x = passengerClass)) +\n  geom_bar() +\n  facet_wrap(~survived, ncol = 1, scales = \"free_y\") +\n  labs(title = \"Bar chart faceted by Survival Status\",\n       x = \"Passenger Class\", y = \"\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"stacked-bar-chart","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7.4 Stacked bar chart","text":"","code":"\nggplot(TitanicSurvival, aes(x = sex, fill = survived)) + \n    geom_bar()"},{"path":"cheatsheet-for-multiple-graphics.html","id":"grouped-bar-chart","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7.5 Grouped bar chart","text":"","code":"\nggplot(TitanicSurvival, aes(x = sex, fill = survived)) +\n  geom_bar(position = \"dodge\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"grouped-bar-chart-with-facets","chapter":"13 Cheatsheet for multiple graphics","heading":"13.7.6 Grouped bar chart with facets","text":"","code":"\ncounts <- TitanicSurvival %>%\n  group_by(sex, survived, passengerClass) %>%\n  summarize(Freq = n()) %>%\n  ungroup() %>%\n  complete(sex, survived, passengerClass, fill = list(Freq = 0))\n# draw the grouped bar chart\nggplot(counts, aes(x = sex, y = Freq, fill = survived)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~passengerClass)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"cleveland-dot-plot-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.8 Cleveland dot plot","text":"","code":"\nTitanicSurvival1 <- TitanicSurvival %>%\n  rownames_to_column(var = \"name\")\nhead(TitanicSurvival1)##                              name survived    sex     age passengerClass\n## 1   Allen, Miss. Elisabeth Walton      yes female 29.0000            1st\n## 2  Allison, Master. Hudson Trevor      yes   male  0.9167            1st\n## 3    Allison, Miss. Helen Loraine       no female  2.0000            1st\n## 4 Allison, Mr. Hudson Joshua Crei       no   male 30.0000            1st\n## 5 Allison, Mrs. Hudson J C (Bessi       no female 25.0000            1st\n## 6             Anderson, Mr. Harry      yes   male 48.0000            1st"},{"path":"cheatsheet-for-multiple-graphics.html","id":"cleveland-dot-plot-2","chapter":"13 Cheatsheet for multiple graphics","heading":"13.8.1 Cleveland dot plot","text":"","code":"\nts1 <- TitanicSurvival1 %>%\n  filter(!is.na(age) & passengerClass == \"1st\" & survived == \"yes\" & sex == \"female\" &\n           age >= 30 & age <= 40)\n\nggplot(ts1,aes(x = age, y = fct_reorder(name, age))) +\n  geom_point(color = \"blue\") +\n  ylab(\"\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"cleveland-dot-plot-with-facets","chapter":"13 Cheatsheet for multiple graphics","heading":"13.8.2 Cleveland dot plot with facets","text":"","code":"\nts2 <- TitanicSurvival1 %>%\n  filter(!is.na(age) & survived == \"yes\" & sex == \"female\" & age >= 30 & age <= 40)\n\nggplot(ts2, aes(x = age, y = reorder(name, age))) +\n  geom_point(color = \"blue\") +\n  facet_grid(.~reorder(passengerClass, -age, median)) +\n  ylab(\"\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"scatterplot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.9 Scatterplot","text":"Data: babies openintro package","code":"\nhead(babies)## # A tibble: 6 × 8\n##    case   bwt gestation parity   age height weight smoke\n##   <int> <int>     <int>  <int> <int>  <int>  <int> <int>\n## 1     1   120       284      0    27     62    100     0\n## 2     2   113       282      0    33     64    135     0\n## 3     3   128       279      0    28     64    115     1\n## 4     4   123        NA      0    36     69    190     0\n## 5     5   108       282      0    23     67    125     1\n## 6     6   136       286      0    25     62     93     0"},{"path":"cheatsheet-for-multiple-graphics.html","id":"scatterplot-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.9.1 Scatterplot","text":"","code":"\n# draw the scatterplot\ng <- ggplot(babies, aes(x = gestation, y = bwt)) +\n  # adjust point size and add alpha blending\n  geom_point(size = 1, alpha = .5)\ng +\n  # add the density contour lines\n  geom_density_2d() +\n  # add the linear model\n  geom_smooth(method = 'lm', se = FALSE, col = 2)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"interactive-scatterplot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.9.2 Interactive scatterplot","text":"","code":"\ng1 <- ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length, color = Species)) +\n  geom_point()\nggplotly(g1)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"scatterplot-matrix","chapter":"13 Cheatsheet for multiple graphics","heading":"13.9.3 Scatterplot matrix","text":"","code":"\nplot(iris[,1:4], col = \"#00660030\", pch = 19)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"parallel-coordinates-plot-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.10 Parallel coordinates plot","text":"Data: state.x77","code":"\nmystates <- data.frame(state.x77) %>%\n  rownames_to_column(\"State\") %>%\n  mutate(Region = factor(state.region))\nhead(mystates)##        State Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area\n## 1    Alabama       3615   3624        2.1    69.05   15.1    41.3    20  50708\n## 2     Alaska        365   6315        1.5    69.31   11.3    66.7   152 566432\n## 3    Arizona       2212   4530        1.8    70.55    7.8    58.1    15 113417\n## 4   Arkansas       2110   3378        1.9    70.66   10.1    39.9    65  51945\n## 5 California      21198   5114        1.1    71.71   10.3    62.6    20 156361\n## 6   Colorado       2541   4884        0.7    72.06    6.8    63.9   166 103766\n##   Region\n## 1  South\n## 2   West\n## 3   West\n## 4  South\n## 5   West\n## 6   West"},{"path":"cheatsheet-for-multiple-graphics.html","id":"static-parallel-coordinates-plot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.10.1 Static parallel coordinates plot","text":"","code":"\nggparcoord(mystates, columns = 2:9, alphaLines = .5, \n           scale = \"uniminmax\", splineFactor = 10, groupColumn = 10) +\n  geom_vline(xintercept = 2:8, color = \"lightblue\")"},{"path":"cheatsheet-for-multiple-graphics.html","id":"interactive-parallel-coordinates-plot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.10.2 Interactive parallel coordinates plot","text":"","code":"\nmystates %>%\n  arrange(Region) %>%\n  parcoords(\n    rownames = FALSE,\n    brushMode = \"1D-axes\",\n    reorderable = TRUE,\n    queue = TRUE,\n    alpha = .5,\n    color = list(\n      colorBy = \"Region\",\n      colorScale = \"scaleOrdinal\",\n      colorScheme = \"schemeCategory10\"\n      ),\n    withD3 = TRUE,\n    width = 800,\n    height = 600\n    )"},{"path":"cheatsheet-for-multiple-graphics.html","id":"biplot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.11 Biplot","text":"Data: attributes.xls\n(http://www.econ.upf.edu/~michael/attributes.xls)","code":"\nratings <- data.frame(country = c(\"Italy\",\"Spain\",\"Croatia\",\"Brazil\",\"Russia\",\n                                  \"Germany\",\"Turkey\",\"Morocco\",\"Peru\",\"Nigeria\",\n                                  \"France\",\"Mexico\",\"SouthAfrica\"),\n                      living_standard = c(7,7,5,5,6,8,5,4,5,2,8,2,4),\n                      climate = c(8,9,6,8,2,3,8,7,6,4,4,5,4),\n                      food = c(9,9,6,7,2,2,9,8,6,4,7,5,5),\n                      security = c(5,5,6,3,3,8,3,2,3,2,7,2,3),\n                      hospitality = c(3,2,5,2,7,7,1,1,4,3,9,3,3),\n                      infrastructure = c(7,8,6,3,6,9,3,2,4,2,8,3,3))\nhead(ratings)##   country living_standard climate food security hospitality infrastructure\n## 1   Italy               7       8    9        5           3              7\n## 2   Spain               7       9    9        5           2              8\n## 3 Croatia               5       6    6        6           5              6\n## 4  Brazil               5       8    7        3           2              3\n## 5  Russia               6       2    2        3           7              6\n## 6 Germany               8       3    2        8           7              9"},{"path":"cheatsheet-for-multiple-graphics.html","id":"principal-components-analysis-pca","chapter":"13 Cheatsheet for multiple graphics","heading":"13.11.1 Principal components analysis (PCA)","text":"","code":"\npca <- prcomp(ratings[,2:7], scale. = TRUE)  \nsummary(pca)## Importance of components:\n##                          PC1    PC2     PC3     PC4     PC5     PC6\n## Standard deviation     1.854 1.4497 0.43959 0.39052 0.27517 0.19778\n## Proportion of Variance 0.573 0.3503 0.03221 0.02542 0.01262 0.00652\n## Cumulative Proportion  0.573 0.9232 0.95544 0.98086 0.99348 1.00000"},{"path":"cheatsheet-for-multiple-graphics.html","id":"biplot-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.11.2 Biplot","text":"","code":"\ndraw_biplot(ratings, fix_sign = FALSE)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"biplot-with-calibrated-axis-and-projection-lines","chapter":"13 Cheatsheet for multiple graphics","heading":"13.11.3 Biplot with calibrated axis and projection lines","text":"","code":"\ndraw_biplot(ratings, \"climate\",  project = TRUE)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"mosaic-plot-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.12 Mosaic plot","text":"","code":""},{"path":"cheatsheet-for-multiple-graphics.html","id":"mosaic-plot-with-one-variable","chapter":"13 Cheatsheet for multiple graphics","heading":"13.12.1 Mosaic plot with one variable","text":"","code":"\ncounts1 <- TitanicSurvival %>%\n  group_by(sex, survived) %>%\n  summarize(Freq = n())\nmosaic(~sex, direction = \"v\", counts1)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"mosaic-plot-with-two-variables","chapter":"13 Cheatsheet for multiple graphics","heading":"13.12.2 Mosaic plot with two variables","text":"","code":"\nmosaic(survived ~ sex, counts1, direction = c(\"v\", \"h\"))"},{"path":"cheatsheet-for-multiple-graphics.html","id":"mosaic-plot-with-three-variables","chapter":"13 Cheatsheet for multiple graphics","heading":"13.12.3 Mosaic plot with three variables","text":"","code":"\nmosaic(survived ~ passengerClass + sex, counts, direction = c(\"v\", \"v\", \"h\"),\n       rot_labels = c(0,0,0,90))"},{"path":"cheatsheet-for-multiple-graphics.html","id":"mosaic-pairs-plot","chapter":"13 Cheatsheet for multiple graphics","heading":"13.12.4 Mosaic pairs plot","text":"","code":"\npairs(table(TitanicSurvival[,c(1,2,4)]), highlighting = 2)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"alluvial-diagram-1","chapter":"13 Cheatsheet for multiple graphics","heading":"13.13 Alluvial diagram","text":"Data: Yamaguchi87 vcdExtra package","code":"\nhead(Yamaguchi87)##    Son Father Country Freq\n## 1 UpNM   UpNM      US 1275\n## 2 LoNM   UpNM      US  364\n## 3  UpM   UpNM      US  274\n## 4  LoM   UpNM      US  272\n## 5 Farm   UpNM      US   17\n## 6 UpNM   LoNM      US 1055\nggplot(Yamaguchi87, aes(y = Freq, axis1 = Father, axis2 = Son)) +\n  geom_flow(aes(fill = Father), width = 1/12) +\n  geom_stratum(width = 1/12, fill = \"grey80\", color = \"black\") +\n  geom_label(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  scale_x_discrete(limit = c(\"Father\", \"Son\"), expand = c(.05, .05)) +\n  scale_y_continuous(expand = c(.01, 0)) +\n  guides(fill = FALSE)"},{"path":"cheatsheet-for-multiple-graphics.html","id":"heatmap-2","chapter":"13 Cheatsheet for multiple graphics","heading":"13.14 Heatmap","text":"","code":""},{"path":"cheatsheet-for-multiple-graphics.html","id":"hexagonal-heatmap","chapter":"13 Cheatsheet for multiple graphics","heading":"13.14.1 Hexagonal heatmap","text":"","code":"\nggplot(babies, aes(x = gestation, y = bwt)) +\n  geom_hex()"},{"path":"cheatsheet-for-multiple-graphics.html","id":"square-heatmap","chapter":"13 Cheatsheet for multiple graphics","heading":"13.14.2 Square heatmap","text":"","code":"\nggplot(babies, aes(x = gestation, y = bwt)) +\n  geom_bin_2d()"},{"path":"cheatsheet-for-multiple-graphics.html","id":"heatmap-with-facets","chapter":"13 Cheatsheet for multiple graphics","heading":"13.14.3 Heatmap with facets","text":"","code":"\nmydata <- Yamaguchi87 %>%\n  group_by(Country, Father) %>% \n  mutate(Total = sum(Freq)) %>%\n  ungroup()\nggplot(mydata, aes(x = Father, y = Son)) +\n  geom_tile(aes(fill = Freq/Total), color = \"white\") +\n  coord_fixed() +\n  facet_wrap(~Country) +\n  scale_fill_distiller(palette = \"RdBu\")"},{"path":"useful-setting-of-ggplot2.html","id":"useful-setting-of-ggplot2","chapter":"14 Useful setting of ggplot2","heading":"14 Useful setting of ggplot2","text":"Yixuan Zhang","code":""},{"path":"useful-setting-of-ggplot2.html","id":"motivation","chapter":"14 Useful setting of ggplot2","heading":"14.1 Motivation","text":"ggplot2 common package used plotting. Besides ability draw different kinds plots, also contains lot useful settings make plot beautiful informative. example, transposing x y axis, changing location legend, changing angle text axis, etc. Therefore, made cheat sheet help people check useful settings. Intentionally, made Rshiny. Therefore, people can interact setting text box designed show code people can copy&paste use code.","code":""},{"path":"useful-setting-of-ggplot2.html","id":"the-link-to-the-cheatsheet","chapter":"14 Useful setting of ggplot2","heading":"14.2 The Link to the cheatsheet","text":"https://codingellena.shinyapps.io/cheatsheet/","code":""},{"path":"cheatsheet-for-circlize-package.html","id":"cheatsheet-for-circlize-package","chapter":"15 Cheatsheet for ‘circlize’ package","heading":"15 Cheatsheet for ‘circlize’ package","text":"Yanhao RenA quick glance:circlize plots:","code":"\nlibrary(circlize)\nlibrary(RColorBrewer)\ncol<-RColorBrewer::brewer.pal(6,\"Paired\")\ndf<-data.frame(chr=sample(c(paste0(\"chr\",1:6)),1000,replace = T),\n               x=rnorm(1000),\n               y=rnorm(1000))\nhead(df)##    chr          x           y\n## 1 chr5 -0.0689864 -0.86958498\n## 2 chr6  0.3735874 -0.08890751\n## 3 chr6 -0.6632499 -0.83934530\n## 4 chr4  0.3514712  0.51804746\n## 5 chr6  0.1502522 -0.18407308\n## 6 chr2  0.4782594  0.64462589\ncircos.initialize(factors = df$chr,x=df$x)\ncircos.trackPlotRegion(factors = df$chr,y=df$y,\n                       panel.fun = function(x,y){\n                         circos.axis()\n                       })\nfor(i in 1:6){\n  highlight.sector(sector.index = paste0(\"chr\",i),col=col[i])\n  circos.text(CELL_META$xcenter, CELL_META$ycenter,\n              labels = paste0(\"chr\",i),sector.index = paste0(\"chr\",i))\n}\ncircos.trackHist(df$chr,df$x,col=col)\ncircos.link(\"chr1\",0,\"chr2\",0)\ncircos.link(\"chr4\",c(-2,0),\"chr3\",c(-2,2),col=\"blue\")\ncircos.link(\"chr4\", c(0, 2), \"chr6\", c(-2, 0), col = \"orange\")\ncircos.link(\"chr5\", c(0, 2), \"chr1\", c(-2, 2), col = \"lightgrey\")\ncircos.clear()\n#dataset:\nn <- 1000\ndf <- data.frame(\n  sectors = sample(letters[1:8], n, replace = TRUE),\n  x = rnorm(n), y = runif(n)\n)\n#first step:\ncircos.par(\"track.height\" = 0.1)\ncircos.initialize(df$sectors, x = df$x)\ncircos.track(df$sectors, y = df$y,\n             panel.fun = function(x, y) {\n               circos.text(CELL_META$xcenter, \n                           CELL_META$cell.ylim[2] + mm_y(7), \n                           CELL_META$sector.index)\n               circos.axis(labels.cex = 0.6)\n             })\n\ncol <- rep(c(\"#e41a1c\", \"#4daf4a\"), 4)\ncircos.trackPoints(df$sectors, df$x, df$y, col = col, pch = 16, cex = 0.5)\ncircos.text(-1, 0.5, \"text\", sector.index = \"a\", track.index = 1)\n\n#next step:\nbgcol <- rep(c(\"#fb8072\", \"#80b1d3\"), 4)\ncircos.trackHist(df$sectors, df$x, bin.size = 0.2, bg.col = bgcol, col = NA)\n\n#next step:\ncircos.track(df$sectors, x = df$x, y = df$y,\n    panel.fun = function(x, y) {\n        ind = sample(length(x), 12)\n        x2 = x[ind]\n        y2 = y[ind]\n        od = order(x2)\n        circos.lines(x2[od], y2[od], col = \"#ff7f00\")\n})\n\n#next step:\ncircos.update(sector.index = \"d\", track.index = 2, \n              bg.col = \"white\", bg.border = \"black\")\ncircos.points(x = -2:2, y = rep(0.5, 5), col = \"#1f78b4\")\ncircos.text(CELL_META$xcenter, CELL_META$ycenter, \"updated\", col = \"black\")\n\n#next step:\ncircos.track(ylim = c(0, 1), panel.fun = function(x, y) {\n    xlim = CELL_META$xlim\n    ylim = CELL_META$ylim\n    breaks = seq(xlim[1], xlim[2], by = 0.1)\n    n_breaks = length(breaks)\n    circos.rect(breaks[-n_breaks], rep(ylim[1], n_breaks - 1),\n                breaks[-1], rep(ylim[2], n_breaks - 1),\n                col=rainbow(n_breaks),\n                border = NA)\n})\n\n#next step:\ncircos.link(\"a\", 0, \"b\", 0, h = 0.4, col = \"blue\")\ncircos.link(\"c\", c(-0.5, 0.5), \"e\", c(-0.5,1), \n            col = \"#fb9a99\", border = \"blue\", h = 0.2)\ncircos.link(\"f\", 0, \"g\", c(-1,1), col = \"#b2df8a\", \n            border = \"black\", lwd = 2, lty = 2)\ncircos.clear()"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"visualizing-geographical-time-series-data-with-messy-country-name","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16 Visualizing Geographical Time Series Data With Messy Country Name","text":"Jiachen Liu, Hao Chang Yihui XieWith development internet acceleration Internationalization process, many data nowadays recorded based countries. better understand geographical information contained data, choropleth geographic heatmap sometimes unavoidable. Generally, geographic information required maps, information always data get hands . tutorial intented solve problem, helping adding location information(Longitude Latitude) simple country based data.tutorial, start data downloading directly International Disaster Data Center, death number international disasters past 122 years messy country names. use data show guide process data cleaning, adding location information, finally produce geographic heatmap time change shown animation.","code":"\nknitr::opts_chunk$set(echo = TRUE, message=FALSE)\nlibrary(tidyverse) \nlibrary(ggplot2)\nlibrary(maps)\nlibrary(readxl)\nlibrary(gganimate)\nlibrary(gifski)\nlibrary(plotly)\nlibrary(countrycode)"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"data-reading","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.1 Data Reading","text":", 50 columns data, focus “Year”, “Country”, “Total Deaths” tutorial. One thing might notice actually “Latitude” “Longitude” columns data, many NAs columns hence usable.","code":"\n# read in the dataset downloaded from the International Disaster Data Center\nraw_data <- readxl::read_xlsx(\"resources/visualizing_geographic_time_series/emdat_public_2022_03_19_query_uid-LV4CQy.xlsx\")\nhead(raw_data)## # A tibble: 6 × 50\n##   `Dis No`   Year  Seq   Glide `Disaster Group` `Disaster Subg…` `Disaster Type`\n##   <chr>      <chr> <chr> <lgl> <chr>            <chr>            <chr>          \n## 1 1900-9002… 1900  9002  NA    Natural          Climatological   Drought        \n## 2 1900-9001… 1900  9001  NA    Natural          Climatological   Drought        \n## 3 1902-0012… 1902  0012  NA    Natural          Geophysical      Earthquake     \n## 4 1902-0003… 1902  0003  NA    Natural          Geophysical      Volcanic activ…\n## 5 1902-0010… 1902  0010  NA    Natural          Geophysical      Volcanic activ…\n## 6 1903-0006… 1903  0006  NA    Natural          Geophysical      Mass movement …\n## # … with 43 more variables: `Disaster Subtype` <chr>,\n## #   `Disaster Subsubtype` <chr>, `Event Name` <chr>, Country <chr>, ISO <chr>,\n## #   Region <chr>, Continent <chr>, Location <chr>, Origin <chr>,\n## #   `Associated Dis` <chr>, `Associated Dis2` <chr>, `OFDA Response` <chr>,\n## #   Appeal <chr>, Declaration <chr>, `Aid Contribution` <lgl>,\n## #   `Dis Mag Value` <dbl>, `Dis Mag Scale` <chr>, Latitude <chr>,\n## #   Longitude <chr>, `Local Time` <chr>, `River Basin` <chr>, …"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"data-processing","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.2 Data Processing","text":"target step add location information data. simple way achieve find existing dataset containing countries Latitude/Longitude, merge data exiting data. good thought, data actually recording countries names different way existing data(e.g. write “United States America” “USA”). also common situation, deal problem, need clean countries’ names first can merge.existing dataset, recommend using data ggplot2 keep maps consistent.Read , country column existing dataset “region”.","code":"\n# Read in the existing data from ggplot 2 in \"latitude.longtitude.data\"\n\nlatitude.longtitude.data <- map_data(\"world\")\nhead(latitude.longtitude.data)##        long      lat group order region subregion\n## 1 -69.89912 12.45200     1     1  Aruba      <NA>\n## 2 -69.89571 12.42300     1     2  Aruba      <NA>\n## 3 -69.94219 12.43853     1     3  Aruba      <NA>\n## 4 -70.00415 12.50049     1     4  Aruba      <NA>\n## 5 -70.06612 12.54697     1     5  Aruba      <NA>\n## 6 -70.05088 12.59707     1     6  Aruba      <NA>"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"countrycode-package","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.2.1 Countrycode Package","text":"introduce package called “countrycode”. package written Arel-Bundock, Vincent, Nils Enevoldsen, CJ Yetman, standardizes country names 40 different coding schemes, helpful current situation. Let’s apply package data standardize .result output show countries’ names, along warning messages indicating countries fall matched.several reasons mismatching:First situation, countries small included package.(e.g. “Azores”, “Canary Islands”)Second situation, countries longer exist since data contains data 1900. (e.g. “Serbia Montenegro”, “Yemen P Dem Rep”)\n“Yemen P Dem Rep” merged “Yemen Arab Rep” 1990 called “Yemen” now.\n“Yemen P Dem Rep” merged “Yemen Arab Rep” 1990 called “Yemen” now.Third situation, show , need consider situation countries disintegrated past 122 years. (e.g. “Czechoslovakia”, “Yugoslavia”) situation, may need change data one country several. data information supporting us achieve type splitting. data supporting, might need find another way deal simply drop .\n“Serbia Montenegro” split two countries called “Serbia” “Montengro” 2006.\n“Yugoslavia” split six countries,“Slovenia”,“Croatia”, “Serbia”, “Montengro”, “Bosnia Herzegovina” “Macedonia”.\n“Czechoslovakia” split two countries, “Czech Republic” “Slovakia”, 1993.\n“Serbia Montenegro” split two countries called “Serbia” “Montengro” 2006.“Yugoslavia” split six countries,“Slovenia”,“Croatia”, “Serbia”, “Montengro”, “Bosnia Herzegovina” “Macedonia”.“Czechoslovakia” split two countries, “Czech Republic” “Slovakia”, 1993.","code":"\ncountryname(unique(raw_data$Country))\ncountryname(unique(latitude.longtitude.data$region))"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"manual-adjustments","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.2.2 Manual Adjustments","text":"Based three situation, manual adjustment(splitting) data, reread data.\nsplited countries ：“Czechoslovakia”， “Yugoslavia”，“Serbia Montenegro”.","code":"\n# data after splitting certain countries\ndatamap <- readxl::read_xlsx(\"resources/visualizing_geographic_time_series/cleared_data.xlsx\") \ndata_temp <- map_data(\"world\")\n\n# some manual adjustments\n\n# delete \"Micronesia (Federated States of)\" and \"Tuvalu\", which does not included in the existing data, hence do not have latitude and longitude information.\ndatamap_remove <- datamap[-which(datamap$Country %in% c(\"Micronesia (Federated States of)\",\"Tuvalu\")),]\n# manual match some small contries \ndatamap_remove$Country[datamap_remove$Country == \"Azores Islands\"] <- \"Azores\"\ndatamap_remove$Country[datamap_remove$Country == \"Canary Is\"] <- \"Canary Islands\"\n# merge \"Yemen P Dem Rep\" and \"Yemen Arab Rep\"\ndatamap_remove$Country[datamap_remove$Country %in% c(\"Yemen P Dem Rep\",\"Yemen Arab Rep\")] <- \"Yemen\"\n# Virgin Islands are one area in existing data, so merge together\ndatamap_remove$Country[datamap_remove$Country == \"Virgin Island (British)\"] <- \"Virgin Islands\"\ndatamap_remove$Country[datamap_remove$Country == \"Virgin Island (U.S.)\"] <- \"Virgin Islands\"\n# \"Hong Kong\" and \"Macao\" belong to China now\ndatamap_remove$Country[datamap_remove$Country == \"Hong Kong\"] <- \"China\"\ndatamap_remove$Country[datamap_remove$Country == \"Macao\"] <- \"China\"\n# \"Netherlands Antilles\" belongs to \"Caribbean Netherlands\", but does not have independent geographic information, so including it in \"Netherlands\"\ndatamap_remove$Country[datamap_remove$Country == \"Netherlands Antilles\"] <- \"Netherlands\"\n# same situation, including \"Saint Martin (French part)\" in \"Saint Martin\"\ndatamap_remove$Country[datamap_remove$Country == \"Saint Martin (French Part)\"] <- \"Saint Martin\"\n# \"Tokelau\" is belong to \"New Zealand\"\ndatamap_remove$Country[datamap_remove$Country == \"Tokelau\"] <- \"New Zealand\""},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"merge-data","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.2.3 Merge Data","text":"clean country name column, already finished hardest part. Next step, can merge data existing geographic data.Now, finished processing data. hard time consuming process. required researching historical knowledge. shown steps, doable difficult may seems. Next step, can use processed data geographic information make heatmap.","code":"\n# adding a column called \"countryname\" to be the standard country names, and when mismatch then the country must be one of our adjusted countries, so just keep it as it is.\ndatamap_match <- datamap_remove %>% mutate(countryname = ifelse(is.na(countryname(datamap_remove$Country)),datamap_remove$Country,countryname(datamap_remove$Country)))\n# adding the column \"countryname\" to both data so they can be matched later.\ndata_match <- mutate(data_temp,countryname = ifelse(is.na(countryname(data_temp$region)),data_temp$region,countryname(data_temp$region)))\n# find those countries that is in both data, and create a data with them only\ndata_c_match <- data_match[data_match$countryname %in% unique(datamap_match$countryname),]\n\n# tidy our data to only including Year, Country, deaths, and also created a summarized column that is the percentage of death in each country each year.\ndatamap_raw = datamap_match %>%\n  group_by(Year) %>%\n  mutate(alldeaths = sum(`Total Deaths`, na.rm = T)) %>%\n  group_by(Year,countryname) %>%\n  summarize(deathsprop = sum(`Total Deaths`, na.rm = T)/alldeaths, deaths = sum(`Total Deaths`, na.rm = T)) %>%\n  unique()\nhead(datamap_raw)## # A tibble: 6 × 4\n## # Groups:   Year, countryname [6]\n##   Year  countryname deathsprop  deaths\n##   <chr> <chr>            <dbl>   <dbl>\n## 1 1900  Cape Verde   0.00868     11000\n## 2 1900  India        0.986     1250000\n## 3 1900  Jamaica      0.000260      330\n## 4 1900  Japan        0.0000237      30\n## 5 1900  Turkey       0.000110      140\n## 6 1900  US           0.00473      6000\n# summarized total death across years\ndatamap_rawall = datamap_match %>%\n  mutate(alldeaths = sum(`Total Deaths`, na.rm = T)) %>%\n  group_by(countryname) %>%\n  summarize(deathsprop = sum(`Total Deaths`, na.rm = T)/alldeaths, deaths = sum(`Total Deaths`, na.rm = T)) %>%\n  unique()\n# Merge Data!\n\n# create a list of all the countries\ncountry = sort(unique(data_c_match$countryname))\n# for each country, add year to create a basic dataframe\ndata = data.frame(Year = as.character(rep(seq(1900,2022), each = length(country))), Country = rep(country, 123))\n# merge in our disaster data, and set NAs to 0 represent 0 deaths in that country that year\ndata1 = data %>% left_join(datamap_raw, by = c('Country' = 'countryname', 'Year' = 'Year'))\ndata1[is.na(data1)] = 0\n# merge in the existing geographic data, and convert year to numbers\nrawdata = left_join(data_c_match,data1,by=c(\"countryname\" = \"Country\"))\nrawdata$Year = as.numeric(rawdata$Year)\n\n# A simpler way to produce a data for plotting\nrawalldata = left_join(data_c_match,datamap_rawall)\nhead(rawalldata)##       long      lat group order      region subregion countryname   deathsprop\n## 1 74.89131 37.23164     2    12 Afghanistan      <NA> Afghanistan 0.0007834703\n## 2 74.84023 37.22505     2    13 Afghanistan      <NA> Afghanistan 0.0007834703\n## 3 74.76738 37.24917     2    14 Afghanistan      <NA> Afghanistan 0.0007834703\n## 4 74.73896 37.28564     2    15 Afghanistan      <NA> Afghanistan 0.0007834703\n## 5 74.72666 37.29072     2    16 Afghanistan      <NA> Afghanistan 0.0007834703\n## 6 74.66895 37.26670     2    17 Afghanistan      <NA> Afghanistan 0.0007834703\n##   deaths\n## 1  25424\n## 2  25424\n## 3  25424\n## 4  25424\n## 5  25424\n## 6  25424"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"mapping","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.3 Mapping","text":"calculated log10 death numbers far away , hence color change clearer. good way handle data large range.","code":"\n# Read in backages\n# here is a basic world map without any external data\nggplot(data_temp, aes(x = long, y = lat, group = group))+\n  geom_polygon()+\n  theme_classic()\nplot1data = rawalldata\n\ng = ggplot(plot1data, aes(x = long, y = lat, group = group, text = countryname))+ \n  # take longitude and latitude as x and y, a certain region as a group\n  geom_polygon(aes(fill = log10(deaths)), color = 'black')+\n  # draw a map filled by log10(deaths), and separate each country by black lines\n  scale_fill_gradient(low = '#FFF68F',high = '#FC4902') +\n  # use a common used heat map color setting\n  labs(title = 'Total Death Number for Every Country From 1900-2022')+\n  # rename the plot\n  ggdark::dark_theme_bw()\n  # use a dark theme which can make the map more attractive\n\nggplotly(g, tooltip = c(\"text\",'fill')) # create a interactive plot shown it's name and death number"},{"path":"visualizing-geographical-time-series-data-with-messy-country-name.html","id":"time-series-data","chapter":"16 Visualizing Geographical Time Series Data With Messy Country Name","heading":"16.4 time series data","text":"end tutorial. Hope can help someway. questions thoughts, feel free reach us email github :)","code":"\nplot2data = rawdata\n\ng2 = ggplot(plot2data, aes(x = long, y = lat, group = group))+ \n  # the same as the setting with summary plot\n  geom_polygon(aes(fill = log10(deaths)), color = 'black')+\n  transition_manual(frames = Year) +\n  # use year as the animation parameter\n  scale_fill_gradient(low = '#FFF68F',high = '#FC4902') +\n  labs(title = paste('Year:','{current_frame}')) +\n  # make the title changes among different plot\n  ggdark::dark_theme_bw()\n\nanimate(g2,fps = 3)\n# set the fps=3 to make sure the that the plot will not change too quickly"},{"path":"plotly-package.html","id":"plotly-package","chapter":"17 Plotly package","heading":"17 Plotly package","text":"Eris Chai Juntian Zhang","code":"\nlibrary(plotly)\nlibrary(gapminder)\nlibrary(quantmod)"},{"path":"plotly-package.html","id":"motivation-1","chapter":"17 Plotly package","heading":"17.1 Motivation","text":"lecture, mentioned package plotly see plotly can create interactive plots R. learned lot ways create static plots , explore much create interactive plots. interested exploring plotly package providing information people also interested learning plotly package.\nproject, learned plot basic interactive plots scatter plot, line plot, boxplot, bar charts, histogram. also learned add custom controls adding buttons range sliders. Furthermore, also explored animation feature plotly package. might differently next time probably try learn packages can create interactive plots htmlwidgets, Shiny, D3, collapsibleTree, visNetwork.","code":""},{"path":"plotly-package.html","id":"creating-interactive-plot-using-plotly","chapter":"17 Plotly package","heading":"17.2 Creating Interactive plot using plotly","text":"\n \nfundamental interactive plot using plotly scatter plot, interactive feature added plot, can move mouse see specific values point.Plot_ly user-friendly function basic scatter plot can quickly extend create basic plots. use type mode arguments.\n1. scatter plot: type = ‘scatter’ , mode = ‘markers’\n2. line plot: type = ‘scatter’ , mode = ‘lines’\n3. bar chart: type = ‘bar’ , mode = ‘markers’\n4. histogram: type = ‘histogram’\n5. boxplot: type = ‘box’\nfollowing examples, just simply change type mode, can alter among basic plots.\n \nSometimes, one kinds plot satisfy needs, want combine several plots sharing axis, can show several perspective data together.\ncan firstly create several plots, useing subplot() combine inserting plots function specify axis share.","code":"\nplot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, color = ~Species)\ntrace_0 <- rnorm(100, mean = 5)\ntrace_1 <- rnorm(100, mean = 0)\ntrace_2 <- rnorm(100, mean = -5)\nx <- c(1:100)\n\ndata <- data.frame(x, trace_0, trace_1, trace_2)\n\nfig_basic <- plot_ly(data, x = ~x, y = ~trace_0, name = 'trace 0', \n                     type = 'scatter',\n                     mode = 'lines') \nfig_basic <- fig_basic %>% \n  add_trace(y = ~trace_1, name = 'trace 1',\n            type = 'scatter',\n            mode = 'markers') \nfig_basic <- fig_basic %>% add_trace(y = ~trace_2, name = 'trace 2',\n                         type = 'scatter',\n                         mode = 'lines+markers')\nfig_basic\nscatter_plot <- plot_ly(iris, y = ~Petal.Length,\n                        type = \"scatter\" , mode = \"markers\") \nbox_plot<-plot_ly(iris,y = ~Petal.Length,type = \"box\") \nbar_plot<-plot_ly(iris,y = ~Petal.Length,type = \"bar\",mode = \"markers\") \n\nsubplot(box_plot,bar_plot,scatter_plot,shareY = TRUE)"},{"path":"plotly-package.html","id":"add-custom-control-in-plotly","chapter":"17 Plotly package","heading":"17.3 Add Custom Control in Plotly","text":"knowing basic knowledge plot_ly, can start add custom control, change helpful analysis data.","code":"\n#The basic plot\ndf_Japan<-gapminder[gapminder$country==\"Japan\",]\ngdpPercap_Japan<-data.frame(df_Japan$year,df_Japan$gdpPercap)\nfig_Japan<-plot_ly(gdpPercap_Japan, type = \"scatter\" , mode = \"lines\")\nfig_Japan_b0 <-fig_Japan %>%\n  add_trace(x = ~df_Japan.year, y = ~df_Japan.gdpPercap, name = 'Japan')\nfig_Japan_b0"},{"path":"plotly-package.html","id":"add-buttons","chapter":"17 Plotly package","heading":"17.3.1 Add Buttons","text":"1）restyle methods：modify dataIn example, show modify types plot buttons. choosing methods, can use \"args = list(\"type\", \"scatter\", \"lines\")\" set different chart types, second position insied thelistis attributed type, third position mode. can use \"updatemenus = list(chart_types)\" layout parts.\n \nchanging types plot, can also change color plot using \"args = list(\"line.color\", \"blue\")\" insides buttons function set different colors.\n \n2）Update Methods: update traces data diplayedIn next example, can choose show different columns data selecting different buttons. need carefully set args.\"list(visible = c(FALSE, TRUE))\"\"list(annotationslist(c(),df_J_I$gdpPercap_Japan)\"\ntwo parts need consistent , “FALSE” corresponds “c()”, “TRUE” corresponds column appears plot.\n \n","code":"\n#restlye the chart type\nchart_types <- list(\n  type = \"buttons\",\n  direction = \"right\",\n  xanchor = 'center',\n  yanchor = \"top\",\n  pad = list('r'= 0, 't'= 10, 'b' = 10),\n  x = 0.5,\n  y = 1.27,\n  buttons = list(\n    list(method = \"restyle\",\n         args = list(\"type\", \"scatter\", \"lines\"),\n         label = \"scatter-line\"),\n    list(method = \"restyle\",\n         args = list(\"type\", \"bar\"),\n         label = \"bar\")\n  ))\nfig_Japan_b1 <- fig_Japan_b0 %>% layout(\n  xaxis = list(domain = c(0.1, 1)),\n  yaxis = list(title = \"y\"),\n  updatemenus = list(chart_types))\nfig_Japan_b1\n#restlye the color\ncolor_types <- list(\n  type = \"buttons\",\n  direction = \"right\",\n  xanchor = 'center',\n  yanchor = \"top\",\n  pad = list('r'= 0, 't'= 10, 'b' = 10),\n  x = 0.5,\n  y = 1.17,\n  buttons = list(\n    list(method = \"restyle\",\n         args = list(\"line.color\", \"blue\"),\n         label =\"blue\" ),\n    list(method = \"restyle\",\n         args = list(\"line.color\", \"red\"),\n         label = \"red\" )\n  ))\nfig_Japan_b2 <- fig_Japan_b0 %>% layout(\n  xaxis = list(domain = c(0.1, 1)),\n  yaxis = list(title = \"y\"),\n  updatemenus = list(color_types))\nfig_Japan_b2\n##set the dataframe\ndf_Italy<-gapminder[gapminder$country==\"Italy\",]\ngdpPercap_Italy<-df_Italy$gdpPercap\ndf_J_I<-cbind(gdpPercap_Japan,gdpPercap_Italy)\ncolnames(df_J_I) <- c(\"year\",\"gdpPercap_Japan\",\"gdpPercap_Italy\")\nfig_J_I <- plot_ly(df_J_I, type = \"scatter\" , mode = \"lines\")\nfig_J_I<- fig_J_I %>% add_lines(x=~year, y=~gdpPercap_Japan, name=\"Japan\",\n            line=list(color=\"red\")) \nfig_J_I<- fig_J_I%>% add_lines(x=~year, y=~gdpPercap_Italy, name=\"Italy\",\n            line=list(color=\"blue\")) \n\nupdate_trace <- list(list(active = -1,type= 'buttons',\n    buttons = list(list(label = \"Japan\",\n                        method = \"update\",\n                        args = list(\n                          list(visible = c(FALSE, TRUE)),\n                          list(title = \"gdpPercap_Japan\",\n                               annotations = \n                                 list(c(),df_J_I$gdpPercap_Japan )))),\n                   list(label = \"Italy\",method = \"update\",\n                        args = list(\n                          list(visible = c(TRUE, FALSE)),\n                          list(title = \"gdpPercap_Italy\",\n                               annotations = \n                                 list(df_J_I$gdpPercap_Italy, c())))),\n                   list(label = \"Both\",method = \"update\",\n                        args = list(list(visible = c(TRUE, TRUE)),\n                                    list(title = \"gdpPercap\",\n                                         annotations = \n                                           list(df_J_I$gdpPercap_Japan,\n                                                df_J_I$gdpPercap_Italy)))))))\nfig_J_I_update <- fig_J_I %>% layout(title = \"gdpPercap\", showlegend=FALSE,\n                                     xaxis=list(title=\"YEAR\"),\n                                     yaxis=list(title=\"gdpPercap\"),\n                                     updatemenus=update_trace)\nfig_J_I_update"},{"path":"plotly-package.html","id":"add-range-slider","chapter":"17 Plotly package","heading":"17.3.2 Add Range Slider","text":"example shows add rangeslider basic plot. Except adding rangeslider layout() function, can simply use rangeslider()function “%>%”.\ndata set multiple time point, function can help us data change within different range time two direction moving side slider.\n \n","code":"\nfig_Japan1<-fig_Japan_b0 %>% \n  layout(xaxis = list(rangeslider = list(visible = T)))\nfig_Japan1"},{"path":"plotly-package.html","id":"add-range-selectors","chapter":"17 Plotly package","heading":"17.3.3 Add Range Selectors","text":"example, choose use data set multiple complex time point show custom control can help analysis data clearly useful graphs.\n \ninitial plot just show data change related time, want see change specific time range, use rangeselector.\nset range time, can add rangeselector inside layout() use buttons create time buttons include four parts.\nstep shows time move, three options (“year”,“month”,“day”); count can used set many steps want set. two part, time range set. stepmode, can choose “backward” “todate”. Finally, can use labelto set name buttons.","code":"\n##chose the adjusted price,get the dataframe we need\ngetSymbols(Symbols = \"AAPL\", from = '2017-01-01', to = '2019-01-01')## [1] \"AAPL\"\ndf_AAPL <- data.frame(Date = index(AAPL), AAPL[,6])\nfig_APPL<-plot_ly(df_AAPL,x=df_AAPL$Date,\n                  y=df_AAPL$AAPL.Adjusted, type= \"scatter\" , mode = \"lines\")\n##initial plot\nfig_APPL\nfig_APPL1 <- fig_APPL %>% layout(\n    title = \"Stock Prices\",\n    xaxis = list(\n      rangeselector = list(\n        buttons = list(\n          list(\n            count = 3,\n            label = \"3 mo\",\n            step = \"month\",\n            stepmode = \"backward\"),\n          list(\n            count = 1,\n            label = \"1 yr\",\n            step = \"year\",\n            stepmode = \"backward\"),\n          list(\n            count = 1,\n            label = \"YTD\",\n            step = \"year\",\n            stepmode = \"todate\"),\n          list(step = \"all\")))))\n\nfig_APPL1"},{"path":"plotly-package.html","id":"animation-in-plotly","chapter":"17 Plotly package","heading":"17.4 Animation in Plotly","text":"Since plot_ly() maps R objects plotly.js, web-based JavaScript interactive charting library, plot_ly gives us option animations data.","code":""},{"path":"plotly-package.html","id":"basic-animation","chapter":"17 Plotly package","heading":"17.4.1 Basic Animation","text":"Animations can created using frame argument plot_ly(). assigning discrete values frame, can create animation frames. animation frame, play button slider component controlling state animation created default. can play animation simply clicking play button dragging slider. pause animation, just click relevant location slider bar.\n \ncan try create animation basic example using Iris data. inputting Species frame, species cycled plot.\n \n","code":"\niris %>%\n  plot_ly(\n    x = ~Sepal.Length,\n    y = ~Petal.Length,\n    frame = ~Species,\n    type = 'scatter',\n    mode = 'markers',\n    showlegend = F\n    )"},{"path":"plotly-package.html","id":"mulitple-trace-animations","chapter":"17 Plotly package","heading":"17.4.2 Mulitple Trace Animations","text":"basic knowledge frame, can now apply useful scenario. example, want see relationship GDP per capita life expectancy changing time, clear way show animation can directly see data move time. Since done plotly, can utilize interactive feature use color fill continents. allow us select view specific continents animation.plot can see country Kuwait outlier, assignment, order see data clearly, usually just delete outlier, animation feature, can keep outlier see change time. playing animation, can see Kuwait change back forth GDP per capita, finally join big cluster.\n \nstill prefer see data clearly without deleting outlier, can log-transformation GDP per capita. use layout() modify xaxis change type type = \"log\". default xaxis type “-”, options “log”. can choose one following based needs \"-\", \"linear\", \"log\" \"date\",\"category\",\"multicategory\".","code":"\nfig_animation <- gapminder %>%\n  plot_ly(\n    x = ~gdpPercap, \n    y = ~lifeExp, \n    size = ~pop, \n    color = ~continent, \n    frame = ~year,\n    text = ~country, \n    hoverinfo = \"text\",\n    type = 'scatter',\n    mode = 'markers'\n  )\nfig_animation\nfig_animation %>% layout(\n    xaxis = list(\n      type = \"log\")\n  )"},{"path":"plotly-package.html","id":"configuration-options-in-animation","chapter":"17 Plotly package","heading":"17.4.3 Configuration Options in Animation","text":"\n \n\n \n\n \n\n \n","code":"\nfig_animation %>%\n  animation_opts(\n    frame=1000, \n    transition=0,\n    easing = \"sin\"\n  )"},{"path":"plotly-package.html","id":"references","chapter":"17 Plotly package","heading":"17.5 References","text":"https://plotly.com/r/\nhttps://medium.com/analytics-vidhya/time-buttons--plotly--line-charts-5c4817cfbcb8\n \n","code":""},{"path":"web-scraping-using-beautifulsoup-in-python.html","id":"web-scraping-using-beautifulsoup-in-python","chapter":"18 Web Scraping Using BeautifulSoup in Python","heading":"18 Web Scraping Using BeautifulSoup in Python","text":"Long Lin & Shiang XuanYuan","code":""},{"path":"web-scraping-using-beautifulsoup-in-python.html","id":"descrition","chapter":"18 Web Scraping Using BeautifulSoup in Python","heading":"18.1 Descrition:","text":"much information Internet human can’t master lifetime. need access information using extensible way collect, organize, analyze . Imagine pull large amount data websites want quickly possible. without manually going website getting data? Well, “Web Scraping” answer. Web Scraping just makes job easier faster.Although use web scraping R, common easiest way retrieving data internet using Python. give brief introduction use Python web scraping, storing data csv file, use another languages data analysis, data visualization, etc.","code":""},{"path":"web-scraping-using-beautifulsoup-in-python.html","id":"link","chapter":"18 Web Scraping Using BeautifulSoup in Python","heading":"18.2 Link:","text":"https://github.com/LL07-bit/GR5293-Community-Contribution","code":""},{"path":"web-scraping-using-beautifulsoup-in-python.html","id":"references-1","chapter":"18 Web Scraping Using BeautifulSoup in Python","heading":"18.3 References:","text":"https://www.edureka.co/blog/web-scraping--python/https://www.freecodecamp.org/news/--scrape-websites--python-2/https://www.freecodecamp.org/news/web-scraping-python-tutorial---scrape-data---website/https://oxylabs.io/blog/python-web-scrapinghttps://gist.github.com/gjreda/f3e6875f869779ec03db","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"a-brief-guide-through-ggplot-via-examples","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19 A Brief Guide Through ggplot via Examples","text":"Andrew Ward","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"introduction-1","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.1 Introduction","text":"community contribution outline key concepts data visualization. find , remind particular plot created, like look example. example, can see key parameters used, well code formatted. end, decided create cheat sheet sorts, rundown major plots ’ve using recently. chapter contains type plot, examples plot based different common uses . Essentially, just wanted place quickly access relevant examples common plots may using. also added comments parameters explain words parameter . can make knowing lines alter easier create precise plot looking create.Creating cheat sheet really helpful personally. now serve resource reference , even just writing examples helped get innate understanding functions operate, including type data require. Often times, tried use data examples need downloaded. meant either manually writing data frame, using common data set R, mtcars. , alter data frame fit format needed suit plot making. Understanding type data needs used ended making much easier understand plot worked.Many examples taken lecture slides. gave baseline build upon. tried comment line code. Additionally, sometimes use different data slightly different syntax try make plot reproducible someone might understand certain parameters . meant provide solutions highly complex plots really messy data. Instead, meant serve baseline understanding major plots work examples, way personally like learn things.future iterations cheat sheet, plan add types plots, just grow database file . Additionally, may look cohesive thorough way different examples. Maybe ’ll need create examples chapter illustrate differences, maybe don’t need many, simply listing parameters sufficient.","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"histograms","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.2 Histograms","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"histogram-by-frequency-count","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.2.1 Histogram by Frequency (Count)","text":"Data lecture slides","code":"\ndf1a <- data.frame(x = c(35, 59, 61, 64, 66, 66, 70, 72, 73, 74, 75, 76, 76, 78, 79, 80, 80, 81, 81, 82, 82, 82, 84, 86, 86, 88, 88, 88, 88, 89, 89, 90, 91,91, 92, 92, 92, 92, 94, 94, 94, 94, 96, 98, 102))\ng1a <- ggplot(df1a, aes(x = x)) + \n    geom_histogram(color = \"blue\", #color the border of the bars\n                   fill = \"lightblue\", #color the bars\n                   breaks = seq(30, 110, 10)) + #set the bins\n        scale_x_continuous(breaks = seq(30, 110, 10)) #set the x axis\ng1a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"histogram-by-density","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.2.2 Histogram by Density","text":"","code":"\ndf1b <- data.frame(x = rnorm(1000, 100, 10))\n\ng1b <- ggplot(data= df1b, aes(x=x)) +\n  geom_histogram(aes(y = ..density..), #set to density\n                 color = \"blue\", fill = \"lightblue\") +\n  geom_density(color = \"red\") + #add density curve of the data\n  stat_function(fun = dnorm, args = list(mean = mean(df1b$x), sd = sd(df1b$x))) + #add normal curve based on mean and sd of data to see how it compares to the density curve\n  ggtitle(\"Density\")\n\ng1b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"boxplots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.3 Boxplots","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"standard-box-plot","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.3.1 Standard Box Plot","text":"","code":"\ndf2a <- mtcars\ndf2a <- df2a %>%\n  mutate(group = c(1,1,1,1,1,1,1,1, 2,2,2,2,2,2,2,2, 3,3,3,3,3,3,3,3, 4,4,4,4,4,4,4,4)) %>%\n  mutate(group = as.factor(group))\n\ng2a <- ggplot(df2a, aes(x= reorder(group, -mpg, median), #order the boxes in eitehr increasing or decreasing order\n                        y = mpg)) + \n  geom_boxplot(varwidth= TRUE) + #change width of each box\n  coord_flip() + #switch x and y axes\n  theme_grey(14)\n\ng2a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"ridgeline-plot-1","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.3.2 Ridgeline Plot","text":"","code":"\ndf2b <- mtcars\ndf2b <- df2b %>%\n  mutate(group = c(1,1,1,1,1,1,1,1, 2,2,2,2,2,2,2,2, 3,3,3,3,3,3,3,3, 4,4,4,4,4,4,4,4)) %>%\n  mutate(group = as.factor(group))\n\ng2b <- ggplot(df2b, aes(x= mpg,y= reorder(group,-mpg, median))) +\n  geom_density_ridges(fill = \"blue\", alpha = .5, #alpha changes how opaque or vague the ridges are\n                      scale= 1) + #scale changes how close together the groups are\n  theme_grey(14)\ng2b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"bar-plots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.4 Bar Plots","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"standard-bar-plot","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.4.1 Standard Bar Plot","text":"Data lecture slides","code":"\ndf3a <- food_world_cup\n\ng3a <- ggplot(data = df3a, aes(x = knowledge)) + #y is the count of x instances\n    geom_bar(fill = \"cornflowerblue\") + #color\n    coord_flip() + #switch x and y axes\n    ggtitle(\"Knowledge level of respondents\") +\n    theme_bw(16)\n\ng3a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"stacked-bar-plot-with-multiple-variables","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.4.2 Stacked Bar Plot with Multiple Variables","text":"data https://r-charts.com/part-whole/stacked-bar-chart-ggplot2/","code":"\nset.seed(1)\n\nage3b <- factor(sample(c(\"Child\", \"Adult\", \"Retired\"),\n              size = 50, replace = TRUE),\n              levels = c(\"Child\", \"Adult\", \"Retired\"))\nhours3b <- sample(1:4, size = 50, replace = TRUE)\ncity3b <- sample(c(\"A\", \"B\", \"C\"),\n               size = 50, replace = TRUE)\n\ndf3b <- data.frame(x = age3b, y = hours3b, group = city3b)\n\ng3b <- ggplot(df3b, aes(x = x, y = y,\n                      fill = group)) + #fill by the group you want to compare between\n  geom_bar(stat = \"identity\") #stat= identity for multiple variables\n\ng3b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"grouped-bar-plot","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.4.3 Grouped Bar Plot","text":"data https://r-charts.com/part-whole/stacked-bar-chart-ggplot2/","code":"\nage3c <- factor(sample(c(\"Child\", \"Adult\", \"Retired\"),\n              size = 50, replace = TRUE),\n              levels = c(\"Child\", \"Adult\", \"Retired\"))\nhours3c <- sample(1:4, size = 50, replace = TRUE)\ncity3c <- sample(c(\"A\", \"B\", \"C\"),\n               size = 50, replace = TRUE)\n\ndf3c <- data.frame(x = age3c, y = hours3c, group = city3c)\n\ng3c <- ggplot(df3c, aes(x = x, y = y, fill = group)) + #same aesthetics\n  geom_bar(position= \"dodge\", stat = \"identity\") #position = dodge makes them grouped\n\ng3c"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"grouped-bar-plot-with-facets","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.4.4 Grouped Bar Plot with Facets","text":"data https://r-charts.com/part-whole/stacked-bar-chart-ggplot2/","code":"\nage3d <- factor(sample(c(\"Child\", \"Adult\", \"Retired\"),\n              size = 50, replace = TRUE),\n              levels = c(\"Child\", \"Adult\", \"Retired\"))\nhours3d <- sample(1:4, size = 50, replace = TRUE)\ncity3d <- sample(c(\"A\", \"B\", \"C\"),\n               size = 50, replace = TRUE)\n\ndf3d <- data.frame(x = age3d, y = hours3d, group = city3d)\n\ng3d <- ggplot(df3d, aes(x = x, fill = group)) + \n  geom_bar(position= \"dodge\") + #position = dodge makes them grouped\n  facet_wrap(~y) #add the facets around the variable of your choice\n\ng3d"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"cleveland-dot-plots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.5 Cleveland Dot Plots","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"standard-cleveland-dot-plot","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.5.1 Standard Cleveland Dot Plot","text":"","code":"\ndf4a <- mtcars %>%\n  mutate(number = c(1:32)) %>%\n  mutate(number = as.factor(number)) %>%\n  mutate(group = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)) %>%\n  mutate(group = as.factor(group))\n\n\ng4a <- ggplot(data = df4a, aes(x= mpg, y= fct_reorder(number, mpg))) + #order the factor to make the dots be increasing or decreaing\n  geom_point(color = \"blue\") +\n  ggtitle(\"Cleveland Dot Plot for Car MPG\") +\n  ylab(\"\")\n\ng4a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"cleveland-dot-plot-with-multiple-dots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.5.2 Cleveland Dot Plot with Multiple Dots","text":"","code":"\ndf4b <- mtcars %>%\n  mutate(number = c(1:32)) %>%\n  mutate(number = as.factor(number)) %>%\n  mutate(group = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)) %>%\n  mutate(group = as.factor(group))\n\n\ng4b <- ggplot(data = df4b, aes(x= mpg, y= fct_reorder2(number, group == 2, mpg, .desc= FALSE), color= group)) + #color parameter differentiates the points by group\n  geom_point() +\n  ggtitle(\"With Multiple Groups\") +\n  ylab(\"\")\n\ng4b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"cleveland-dot-plots-with-facets","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.5.3 Cleveland Dot Plots with Facets","text":"","code":"\ndf4c <- mtcars %>%\n  mutate(number = c(1:32)) %>%\n  mutate(number = as.factor(number)) %>%\n  mutate(group = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)) %>%\n  mutate(group = as.factor(group))\n\n\ng4c <- ggplot(data= df4c, aes(x= mpg, y= reorder(number, mpg))) +\n  geom_point(color = \"blue\") +\n  facet_grid(.~reorder(group, -mpg, median)) + #facet by the group\n  ggtitle(\"Facet Cleveland Dot Plot for Car MPG\") +\n  ylab(\"\")\n\ng4c"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"heatmaps","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.6 Heatmaps","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"square-heatmap-1","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.6.1 Square Heatmap","text":"Data lecture slides","code":"\ndf5a <- SpeedSki\n\ng5a <- ggplot(df5a, aes(x=Year, y=Speed)) +\n  scale_fill_viridis_c() + #color scheme\n  geom_bin2d(binwidth = c(5,5), #binwidth sets how big the bins are\n             alpha = .4) + #alpha changes transparency\n  geom_point(size= 2) #add points to see that the heatmap looks correct\n\ng5a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"hex-heatmap","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.6.2 Hex Heatmap","text":"Data lecture slides","code":"\ndf5b <- SpeedSki\n\ng5b <- ggplot(df5b, aes(x=Year, y=Speed)) +\n  scale_fill_gradient(low = \"grey\", high= \"purple\") + #color scheme\n  geom_hex(binwidth = c(5,5), alpha = .8) + #use geom_hex instead\n  geom_point(size= 2)\n\ng5b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"density-lines","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.6.3 Density lines","text":"Data lecture slides","code":"\ndf5c <- SpeedSki\n\ng5c <- ggplot(df5c, aes(x=Year, y=Speed)) +\n  geom_point() +\n  geom_density2d(bins = 10) + #bins number changes how many density lines there are\n  theme_grey(18)\n\ng5c"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"parallel-coordinate-plots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.7 Parallel Coordinate Plots","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"rescaled-slope-graph","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.7.1 Rescaled Slope Graph","text":"Data lecture slides","code":"\ntheme_set(theme_grey(18))\nx6a <- rnorm(50, 20, 5)\ny6a <- runif(50, 8, 12) - x6a\ndf6a <- data.frame(x6a, y6a)  \n\ntidydf6a <- df6a %>%\n  mutate(z = rexp(50, .1) + x6a) %>%\n  dplyr::select(x6a, y6a) %>%\n  rownames_to_column(\"ID\") %>%  \n  gather(var, value, -ID) \n\n# Rescale the data here\nrescaled6a <- tidydf6a %>%\n  group_by(var) %>%\n  mutate(value= scales::rescale(value)) %>%\n  ungroup()\n\ng6a <- ggplot(rescaled6a, aes(x = var, #2 variables, x and y\n                            y = value, #using the rescaled value\n                            group = ID)) +  #use this so ggplot knows where to map points in x to points in y\n  geom_line()\n\ng6a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"parallel-coordinate-plot","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.7.2 Parallel Coordinate Plot","text":"Data lecture slides","code":"\nmystates6b <- data.frame(state.x77) %>%  \n    rownames_to_column(\"State\") %>%   \n    mutate(Region = factor(state.region))\n\nmystates6b$Region <- factor(mystates6b$Region,  \n                          levels = c(\"Northeast\", \"North Central\",\"South\",\"West\")) \n\ng6b <- ggparcoord(mystates6b,\n                  columns= c(2,4,6,8,3,5,7,9), #reorder the columns\n                  alphaLines = .3, #transparency of lines\n                  scale= \"uniminmax\") #rescale\n\ng6b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"splines","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.7.3 Splines","text":"Data lecture slides","code":"\nx6c <- 1:10  \ny6c <- c(2,2,4,4,5,5,5,10,10,10)  \nz6c <- c(3,3,2,3,3,7,7,5,7,7)  \nw6c <- c(1, 1, 1, 7, 7, 7, 8, 8, 8, 8)  \ndf6c <- data.frame(x6c,y6c,z6c, w6c)\n\ng6c <- ggparcoord(df6c, columns= 1:4, scale= \"globalminmax\", #scale\n                  splineFactor = 10, #how curvy the lines are\n                  alphaLines = .5) + #how transparent the lines are\n  geom_vline(xintercept = 1:4, color= \"blue\") # vertical lines\n\ng6c"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"parallel-coordinate-plot-with-highlighted-trend","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.7.4 Parallel Coordinate Plot with Highlighted Trend","text":"Data lecture slides","code":"\nmystates6d <- data.frame(state.x77) %>%  \n    rownames_to_column(\"State\") %>%   \n    mutate(Region = factor(state.region))\n\nmystates6d$Region <- factor(mystates6d$Region,  \n                          levels = c(\"Northeast\", \"North Central\",\"South\",\"West\")) \n\nmystates6d <- mystates6d %>%  \n    mutate(color = factor(ifelse(Murder > 11, 1, 0))) %>%   \n    arrange(color)\n\ng6d <- ggparcoord(mystates6d,columns= 2:9, #set the columns to use\n                  groupColumn= \"color\") + #group the columns by the parameter you want to highlight\n  scale_color_manual(values = c(\"grey70\", \"red\")) + #Choose colors\n  coord_flip() + #flip the coordinates\n  guides(color = FALSE) #remove this to get the legend\n\ng6d"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"biplots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.8 Biplots","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"principal-component-analysis","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.8.1 Principal Component Analysis","text":"Data lecture slides","code":"\ndf7a <- data.frame(country = c(1,2,3,4,5,6,7,8,9,10,11,12,13),\n                   living = c(7,7,5,5,6,8,5,4,5,2,8,2,4),\n                   climate = c(8,9,6,8,2,3,8,7,6,4,4,5,4),\n                   food = c(9,9,6,7,2,2,9,8,6,4,7,5,5),\n                   security = c(5,5,6,3,3,8,3,2,3,2,7,2,3),\n                   hospitality = c(3,2,5,2,7,7,1,1,4,3,9,3,3),\n                   infrastructure = c(7,8,6,3,6,9,3,2,4,2,8,3,3))\ndf7a <- df7a %>%\n  mutate(country = as.factor(country))\n\npca <- prcomp(df7a[,2:7], scale = TRUE) #do the pca here\n\nbiplot(pca) #plot the pca"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"biplot-by-hand","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.8.2 Biplot By Hand","text":"Data lecture slides","code":"\ndf7b <- data.frame(country = c(1,2,3,4,5,6,7,8,9,10,11,12,13),\n                   living = c(7,7,5,5,6,8,5,4,5,2,8,2,4),\n                   climate = c(8,9,6,8,2,3,8,7,6,4,4,5,4),\n                   food = c(9,9,6,7,2,2,9,8,6,4,7,5,5),\n                   security = c(5,5,6,3,3,8,3,2,3,2,7,2,3),\n                   hospitality = c(3,2,5,2,7,7,1,1,4,3,9,3,3),\n                   infrastructure = c(7,8,6,3,6,9,3,2,4,2,8,3,3))\ndf7b <- df7b %>%\n  mutate(country = as.factor(country))\n\ndraw_biplot(df7b,\n            \"climate\", # calibrate an axis\n            project = TRUE) + #set to false to remove the projection\n  scale_x_continuous(limits = c(-4, 3)) + \n  scale_y_continuous(limits = c(-3, 3)) #can use these to rotate the biplot"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"mosaic-plots","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.9 Mosaic Plots","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"using-ggplot","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.9.1 Using ggplot","text":"Data lecture slides","code":"\nlocalnews8a <- data.frame(Age = c(\"18-29\", \"30-49\", \"50-64\", \"65+\"),\n                        Freq = c(2851, 9967, 11163, 10911)) %>%\n  mutate(Followers = round(Freq*c(.15, .28, .38, .42)),\n         Nonfollowers = Freq - Followers)\n\nlocal8a <- localnews8a %>%\n  dplyr::select(-Freq)\n\ntidylocal8a <- local8a %>%\n  gather(key = \"Group\", value = \"Freq\", -Age)\n\ng8a <- ggplot(tidylocal8a) +\n  geom_mosaic(aes(weight = Freq, #count\n                  x = product(Age),\n                  fill = Group)) + #color by differing group\n  xlab(\"\") +\n  ylab(\"\") +\n  guides(fill = FALSE) +\n  theme_classic()\ng8a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"using-vcdmosaic","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.9.2 Using vcd::mosaic","text":"Data lecture slides","code":"\nlocalnews8b <- data.frame(Age = c(\"18-29\", \"30-49\", \"50-64\", \"65+\"),\n                        Freq = c(2851, 9967, 11163, 10911)) %>%\n  mutate(Followers = round(Freq*c(.15, .28, .38, .42)),\n         Nonfollowers = Freq - Followers)\n\nlocal8b <- localnews8b %>%\n  dplyr::select(-Freq)\n\ntidylocal8b <- local8b %>%\n  gather(key = \"Group\", value = \"Freq\", -Age)\n\ntidylocal8b$Group <- fct_rev(tidylocal8b$Group)\n\ntidylocal8b$Age <- factor(tidylocal8b$Age, levels= c(\"65+\", \"50-64\", \"30-49\", \"18-29\")) # reorder the factors here for either upward or downward mobility\n\nvcd::mosaic(Group ~ Age, direction= c(\"v\",\"h\"), #direction sets order of vertical and horizontal graphing\n            tidylocal8b, #data\n            tl_labels = c(FALSE, TRUE), #move labels to bottom\n            rot_labels = c(0,0,90,0), #rotate labels\n            highlighting_fill= c(\"grey80\", \"blue\")) #color"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"many-variables","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.9.3 Many Variables","text":"Data lecture slides","code":"\nfoodorder8c <- Alligator %>% group_by(food) %>% summarize(Freq = sum(count)) %>% \n  arrange(Freq) %>% pull(food)\n\nally8c <- Alligator %>% \n  rename(Freq = count) %>% \n  mutate(size = fct_relevel(size, \"small\"),\n         food = factor(food, levels = foodorder8c),\n         food = fct_relevel(food, \"other\"))\n\nvcd::mosaic(food ~ sex + size,\n            ally8c, #data\n       direction = c(\"v\", \"v\", \"h\"), #changing order of v and h changes the image of the plot, but still gives accurate data\n       rot_labels = c(0,0,90,0),\n       highlighting_fill= RColorBrewer::brewer.pal(5, \"Set1\")) #set the color scheme"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"alluvial","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.10 Alluvial","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"simple-alluvial","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.10.1 Simple Alluvial","text":"Data lecture slides","code":"\ndf9a <- data.frame(Class1 = c(\"Stats\", \"Math\", \"Stats\", \"Math\", \"Stats\", \"Math\", \"Stats\", \"Math\"),\n                 Class2 = c(\"French\", \"French\", \"Art\", \"Art\", \"French\", \"French\", \"Art\", \"Art\"),\n                 Class3 = c(\"Gym\", \"Gym\", \"Gym\", \"Gym\", \"Lunch\", \"Lunch\", \"Lunch\", \"Lunch\"),\n                 Freq = c(20, 3, 40, 5, 10, 2, 5, 15))\n\ng9a <- ggplot(df9a, aes(axis1= Class1,\n                      axis2= Class2,\n                      axis3= Class3, #add as many axes as needed\n                      y = Freq)) + #y axis must be Freq\n  geom_alluvium(color = \"black\") + #add the flow\n  geom_stratum() + #add the bars\n  geom_text(stat = \"stratum\",\n            aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count)))) + #add the labels\n  scale_x_discrete(limits = c(\"Class1\", \"Class2\", \"Class3\")) #set x axis\n\ng9a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"use-geom_flow-instead","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.10.2 Use geom_flow instead?","text":"Data lecture slides","code":"\ndf9b <- data.frame(Class1 = c(\"Stats\", \"Math\", \"Stats\", \"Math\", \"Stats\", \"Math\", \"Stats\", \"Math\"),\n                 Class2 = c(\"French\", \"French\", \"Art\", \"Art\", \"French\", \"French\", \"Art\", \"Art\"),\n                 Class3 = c(\"Gym\", \"Gym\", \"Gym\", \"Gym\", \"Lunch\", \"Lunch\", \"Lunch\", \"Lunch\"),\n                 Freq = c(20, 3, 40, 5, 10, 2, 5, 15))\n\ng9b <- ggplot(df9b, aes(axis1 = Class1, axis2 = Class2, axis3 = Class3, y = Freq)) +\n  geom_flow(color = \"black\") + #essentially resets at each stratum\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count)))) +\n  scale_x_discrete(limits = c(\"Class1\", \"Class2\", \"Class3\"))\n\ng9b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"time-series","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.11 Time Series","text":"","code":""},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"multiple-time-series","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.11.1 Multiple Time Series","text":"data https://r-graph-gallery.com/279-plotting-time-series--ggplot2.html","code":"\ndf10a <- data.frame(\n  day = as.Date(\"2017-06-14\") - 0:364,\n  value1 = runif(365) + seq(-140, 224)^2 / 10000,\n  value2 = runif(365) - seq(-140, 224)^2 / 10000\n) #create data\n\ndf10a <- df10a %>%\n  gather(key = TYPE, value = Number, -day) #create only 2 columns: date and value\n\n\ng10a <- ggplot(data= df10a, aes(x=day, #x axis must be date\n                               y=Number, #value you're tracking over time\n                               color= TYPE)) + #can track multiple time series by color\n  geom_line()\n\ng10a"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"add-a-loess-smoother","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.11.2 Add a Loess Smoother","text":"data https://r-graph-gallery.com/279-plotting-time-series--ggplot2.html","code":"\ndf10b <- data.frame(\n  day = as.Date(\"2017-06-14\") - 0:364,\n  value1 = runif(365) + seq(-140, 224)^2 / 10000,\n  value2 = runif(365) - seq(-140, 224)^2 / 10000\n) #create data\n\ng10b <- ggplot(df10b, aes(x= day, y= value1)) +\n  geom_point() + #add the points\n  geom_line(color = \"grey\") + #add the line connecting the points\n  geom_smooth(method= \"loess\",\n              se= FALSE, #turn off the error area around the line\n              lwd = .75, #set the line width\n              span = .75) #determine how closely the line follows individual points\n\ng10b"},{"path":"a-brief-guide-through-ggplot-via-examples.html","id":"facet-by-day-of-the-week","chapter":"19 A Brief Guide Through ggplot via Examples","heading":"19.11.3 Facet by Day of the Week","text":"data https://r-graph-gallery.com/279-plotting-time-series--ggplot2.html","code":"\ndf10c <- data.frame(\n  day = as.Date(\"2017-06-14\") - 0:364,\n  value1 = runif(365) + seq(-140, 224)^2 / 10000,\n  value2 = runif(365) - seq(-140, 224)^2 / 10000\n) #create data\n\ng10c <- ggplot(df10c, aes(x= day, y= value1)) +\n  geom_line(color = \"grey\") + #add the line connecting the points\n  facet_grid(wday(day, label = TRUE)~.) + #facet the data by day of the week using wday() function\n  geom_smooth(se = FALSE, lwd = 0.1) #can add the line to each facet\n\ng10c"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"drawing-five-common-plots-by-ggplot2","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20 Drawing Five Common Plots by ggplot2","text":"Xirui Guo","code":"\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(gridExtra)\nlibrary(reshape2)\nlibrary(Lock5withR)\nlibrary(fivethirtyeight)\nlibrary(RColorBrewer)\nlibrary(plotly)"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"motivation-2","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.1 Motivation","text":"ggplot2 powerful effective package drawing plots. lot syntaxes support people get graphs want. good plot needs clearly represent information. Scatter plots, line plots, histograms, boxplots, heatmaps frequently used daily life. Markdown hopes guide quickly suitably draw five plots ggplot2.","code":""},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"graph1-scatter-plot-geom_point","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.2 Graph1 scatter plot: geom_point","text":"Using data mtcars\nmain code drawing scatter plot geom_point; however, usually don’t use single need plot shows information syntaxes people use together geom_point:aes(size , color): sometimes effective, people need avoid showing much information making graph hard read..alpha: change transparency point.geom_text: add labels point.geom_smooth: show regression line correspond standard error boundary.","code":"\nmtcars$vs <- as.factor(mtcars$vs)\n\nggplot(mtcars, aes(x=wt, y=mpg, size=cyl, color=vs)) +\n  geom_point(alpha = .4) + \n  geom_text(label=rownames(mtcars), \n            nudge_x = 0.25, nudge_y = 0.25, \n            check_overlap = T)+\n  geom_smooth(method=lm , color=\"red\", fill=\"lightblue\", se=TRUE)"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"graph2-line-chart-geom_line","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.3 Graph2 line chart: geom_line","text":"People need clarify x-axis y-axis can use group draw line different colors.Using geom_line twice: way representing line different groups without legend.","code":"\n# library(reshape2)\nx <- -10:10\nvar1 <- dnorm(x,-2,1)\nvar2 <- dnorm(x,2,1)\nvar3 <- dt(x,2,2)\ndata <- data.frame(x,var1,var2,var3)\ndata_n <- melt(data, id=\"x\")\n\nggplot(data_n,aes(x=x, y=value, group=variable, color=variable))+\n  geom_line()\ndata_n <- data_n %>%\n  mutate(variable2=variable) \n\nggplot(data_n, aes(x=x, y=value))+\n  geom_line(data=data_n %>% select(-variable), aes(group=variable2), color=\"grey\", size=0.5, alpha=0.8) +\n  geom_line(aes(color=variable), color=\"blue\", size=1)+\n  facet_wrap(~variable)"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"graph3-box-plot-geom_boxplot","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.4 Graph3 box plot: geom_boxplot","text":"Using Data: StudentSurvey Lock5withR package(PSet1). Drawing “simple” box-plot first:labs(): simultaneously add main title axis labelsHow make boxplot shows information:\n1. Using theme() + element_text() modify color, font, size text.Adding legend modifying legend tittle3.Changing position legend: five choices “left”,“top”, “right”, “bottom”, “none”Modifying title, label background legendChanging name order factor’s level6 ways change background whole plots","code":"\n# library(Lock5withR)\np3<-ggplot(StudentSurvey, aes(x = SAT, y = Year)) + \n  geom_boxplot()+\n  labs(title=\"Plot of SAT score and Year\", x=\"SAT score\", y=\"Year\")\np3\np3+theme(\n  plot.title = element_text(color = \"red\", size = 14, face = \"bold.italic\"),\n  axis.title.x = element_text(color=\"blue\", size = 14, face = \"bold\"),\n  axis.title.y = element_text(color=\"green\", size = 14, face = \"bold\")\n)\np3<-ggplot(StudentSurvey, aes(x = SAT, y = Year, fill=Year)) + \n  geom_boxplot()+\n  labs(fill=\"School Year\")\np3\np3<- p3+\n  theme(legend.position = \"top\")\np3\np3+\n  theme(\n    legend.title = element_text(color=\"blue\"),\n    legend.text = element_text(color=\"red\"),\n    legend.background = element_rect(fill=\"lightblue\")\n    )\nY <- fct_recode(StudentSurvey$Year, \"NA\" = \"\", \"1st\" = \"FirstYear\", \n                \"2nd\" = \"Sophomore\", \"3rd\" = \"Junior\", \"4th\" = \"Senior\")\nY <- fct_relevel(Y,\"1st\",\"2nd\",\"3rd\",\"4th\")\n\np3<-ggplot(StudentSurvey, aes(x = SAT, y = Y, fill=Y)) + \n  geom_boxplot()+\n  labs(fill=\"School Year\")\np3\np3_1<-p3+theme_gray()\np3_2<-p3+theme_bw()\np3_3<-p3+theme_linedraw()\np3_4<-p3+theme_light()\np3_5<-p3+theme_minimal()\np3_6<-p3+theme_classic()\n\nggarrange(p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,nrow=3,ncol=2)"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"graph4-histogram-geom_histogram","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.5 Graph4 histogram: geom_histogram","text":"Using Data: bad_drivers fivethirtyeight  package. Common syntaxes geom_histogram:binwidth: control width bin.fill: color bin.color: frame color bin.alpha: control transparency bin color.coord_flip()：make histogram bar become horizontalscale_x_reverse() scale_y_reverse()：reverse x-axis y-axis","code":"\n# library(fivethirtyeight)\np4 <- ggplot(bad_drivers,aes(x=perc_alcohol,y=..count..)) +\n  geom_histogram(binwidth=3, fill=\"lightblue\", color=\"black\", alpha=0.7)\np4\np4<- p4 +\n  coord_flip()\np4\np4+\n  scale_y_reverse()"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"graph5-heatmap-geom_tile","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.6 Graph5 heatmap: geom_tile","text":"data class notesChanging color\nscale_fill_gradient(), scale_fill_distiller() scale_fill_viridis()scale_fill_gradient() can customize colorscale_fill_distiller() usually need palette = RColorBrewerscale_fill_viridis() need let discrete=False variable continuousadding text square interact","code":"\ngrade <- rep(c(\"first\", \"second\", \"third\", \"fourth\"), 3)\nsubject <- rep(c(\"math\", \"reading\", \"gym\"), each = 4)\nstatescore <- sample(50, 12) + 50\ndf <- data.frame(grade, subject, statescore)\n\np5 <- ggplot(df, aes(grade, subject, fill = statescore)) + \n  geom_tile() \np5\n# library(RColorBrewer)\ndisplay.brewer.all()\np5_1<-p5 + scale_fill_gradient(low=\"white\", high=\"purple\") + theme(legend.position=\"top\")\np5_2<-p5 + scale_fill_distiller(palette = \"RdBu\")+ theme(legend.position=\"top\")\np5_3<-p5 + scale_fill_viridis_c()+ theme(legend.position=\"top\")\nggarrange(p5_1,p5_2,p5_3,nrow=1,ncol=3)\n# library(plotly)\n\ndf <- df %>%\n  mutate(text = paste(\"grade \", grade , \"\\n\", \"subject: \", subject, \"\\n\", \"statescore: \",statescore))\npp5<-ggplot(df, aes(grade, subject, fill = statescore, text = text)) + \n  geom_tile() \nggplotly(pp5, tooltip=\"text\")"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"effective-ways-for-showing-more-information","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.7 Effective ways for showing more information","text":"","code":""},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"way1-faceting","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.7.1 Way1: Faceting","text":"faceting single discrete variable：faceting two discrete variables：","code":"\n# vertical faceting\np3 + \n  facet_grid(Award~.)\n# horizontal faceting\np3 + \n  facet_grid(.~Award)\n# column facet by Year and row facet by Award\np3+\n  facet_grid(Year~Award, scales='free')"},{"path":"drawing-five-common-plots-by-ggplot2.html","id":"way2-representing-multiple-charts-on-a-single-page","chapter":"20 Drawing Five Common Plots by ggplot2","heading":"20.7.2 Way2: Representing multiple charts on a single page","text":"Using Data: bad_drivers syntaxes grid.arrange()","code":"\n# Make 3 simple graphics:\ng6_1 <- ggplot(mtcars, aes(x=qsec)) + \n  geom_density(fill=\"slateblue\")\n\ng6_2 <- ggplot(mtcars, aes(x=drat, y=qsec, color=cyl)) + \n  geom_point(size=5) + theme(legend.position=\"none\")\n\ng6_3 <- ggplot(mtcars, aes(x=factor(cyl), y=qsec, fill=cyl)) + \n  geom_boxplot() +\n  theme(legend.position=\"none\")\n\n# Plots\ngrid.arrange(g6_1, arrangeGrob(g6_2, g6_3, ncol=2), nrow = 2)\ngrid.arrange(g6_1, g6_2, g6_3, nrow = 3)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","text":"Haoyue WangDuring study 5293, found usually different packages functions plot kind plot. example, want plot heatmap, can use different functions like heatmap() function base R, geom_bin2d() ggplot2, etc. difference packages? kind package function use different situation? decided compare make tutorial help us better use different packages functions different plots. tutorial, choose biplot, Mosaic plot, Heatmap comparison.","code":""},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"library","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.1 library()","text":"Now Let’s get started!","code":"\nlibrary(ggplot2)\nlibrary(FactoMineR)\nlibrary(factoextra)\n##remotes::install_github(\"jtr13/redav\")\nlibrary(redav) # must be installed from source\nlibrary(devtools)\n##remotes::install_github(\"vqv/ggbiplot\")\nlibrary(ggbiplot)# must be installed from source\nlibrary(plyr)\nlibrary(scales)\nlibrary(grid)\nlibrary(vcd)\nlibrary(tidyverse)\nlibrary(openintro)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"biplot-2","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.2 Biplot","text":"Bigraph exploratory graph used statistics. generalization simple bivariate scatter graph.use Athletes’ performance two sporting meetings compare difference three ways ploting biplot.","code":""},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"data-processing-1","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.2.1 Data Processing","text":"","code":"\ndata(decathlon2)\ndata <- decathlon2[1:10, 1:10]\npca <- prcomp(data,scale.=TRUE)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"base-r-biplot-function","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.2.2 Base R biplot function","text":"First , plot default biplot.Adjusting size label(argument:cex), deciding whether show arrows(argument:var.axes) changing color x y label(argument:col)Adjusting name rowdim name x(argument:xlabs) name column name y (argument:ylabs)Tweaking scaling two sets physically comparable scale(argument: expand) adjusting length arrow heads (argument: arrow.len)","code":"\nbiplot(pca,main=\"default biplot made by biplot function\")\nbiplot(pca,cex=0.5,col=c(\"red\",\"green\"),var.axes=FALSE,main=\"base biplot figure 1\")\nbiplot(pca,cex=0.5,xlabs=c(\"x1\",\"x2\",\"x3\",\"x4\",\"x5\",\"x6\",\"x7\",\"x8\",\"x9\",\"x10\"),ylabs=c(\"y1\",\"y2\",\"y3\",\"y4\",\"y5\",\"y6\",\"y7\",\"y8\",\"y9\",\"y10\"),main=\"base biplot figure 2\")\nbiplot(pca,cex=0.5,expand=0.5,arrow.len=0.01,main=\"base biplot figure 3\")"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"draw_biplot","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.2.3 Draw_biplot","text":"Now use draw_biplot function redav package compare two ways drawing biplot.First , plot default biplot draw_biplotIn draw_biplot can get similar plot biplot function.\nadjust argument vector_colors point_colorThey plot. biplot gives us name point draw_biplot directly gives us percentage PC.main difference biplot function draw_biplot() draw_biplot gives us easy way calibrate one axes. , need adjust argument key_axis. also change ticklab argument adjust axis breaks tick labels calibrated axisThen adjust project argument decide whether ’ll projection lines fix_sign argument decide whether first element loading non-negative.","code":"\ndraw_biplot(data)\ndraw_biplot(data,vector_colors=\"green\",point_color = \"red\")\nbiplot(pca,cex=0.5,col=c(\"red\",\"green\"))\ndraw_biplot(data,key_axis=\"X100m\",ticklab=10:12)\ndraw_biplot(data,key_axis=\"X100m\",project=FALSE,fix_sign=TRUE)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"ggbiplot","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.2.4 Ggbiplot","text":"First , plot default biplot ggbiplotHere, can know default biplot biplot(), ggbiplot() draw_biplot() similar.\ndifference biplot() axis count percentage PCs. ggbiplot() give us name point.thing ggbiplot can easily get first two components also components interested (argument choice), adjust details variable can adjust argument varname.abbrev(whether abbreviate variable names), varname.adjust(distance varname arrow), var.scale(scale factor variables),var.axes(FALSE arrows gonna disappear), circle argument help us draw correlation circleOne important thing ggbiplot can observations groups, groups argument help points colored according groups. ellipse argument can draw normal data ellipse group. Using scale_color_discrete theme function can also gain cluster observations.","code":"\nggbiplot(pca)\nggbiplot(pca,choice=c(2,3),varname.abbrev=TRUE,varname.adjust=2, var.scale = 1,varname.size=5)\nggbiplot(pca, circle = TRUE) \ndata(wine)\nwine.pca <- prcomp(wine, scale. = TRUE)\nggbiplot(wine.pca, obs.scale = 1, var.scale = 1,\n  groups = wine.class, ellipse = TRUE, circle = TRUE) +\n  scale_color_discrete(name = '') +\n  theme(legend.direction = 'horizontal', legend.position = 'top')"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"mosaic-plot-2","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.3 Mosaic plot","text":"","code":""},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"base-r-mosaicplot-function","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.3.1 Base R mosaicplot function","text":"Firstly, let us plot default mosaic plot Titanic dataTo change order variables, adjust sort argument dir argument just use formula. get plot either changing formula changing sort dir argument time.adjust distance different mosaic can adjust argument,\ncolor, color argument can change color mosaic.\nbesides, formula part, can use part variables see relationship.","code":"\nmosaicplot(Titanic)\nmosaicplot(~Sex+Class+Age+Survived,data=Titanic, main = \"Survival on the Titanic\")\nmosaicplot(Titanic, main = \"Survival on the Titanic\", sort=c(2,1,3,4),dir=c(\"h\",\"v\",\"v\",\"h\"))\nmosaicplot(~ Sex + Age + Survived, data = Titanic, color = TRUE,off=1)\nmosaicplot(~ Sex + Age + Survived, data = Titanic, shade=TRUE)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"vcd-package","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.3.2 vcd package","text":"Let’s see default mosaic plotThe difference two default plot order variable, Thus can gain plot adjusting formula direction vcd::mosaicBut vcd::mosaic can easily gain conditioning formulas, way convenient mosaicplot function base R. also vcd::mosaic can easily adjust zero entries. (zero_size argument adjust size bullets used zero entries,zero_shade argument decide whether zero bullets shaded.)","code":"\nvcd::mosaic(Titanic,rot_labels=c(45,-30))\nvcd::mosaic(~Class+Sex+Age+Survived,data=Titanic,direction = c(\"v\", \"h\",\"v\",\"h\"),rot_labels=c(0,-30))\nvcd::mosaic( Age ~ Class | Sex , data = Titanic, zero_size = 1,zero_shade=FALSE,zero_split=TRUE)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"heatmap-3","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.4 Heatmap","text":"heat map (heat map) data visualization technique shows size phenomena two-dimensional colors.part compare three ways drawing heatmap. Heatmap function base R. geom_tile ggplot2 geom_bin2d ggplot2","code":""},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"base-r-heatmap","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.4.1 Base R heatmap()","text":"heatmap() function natively provided R.\nOne important thing heatmap() base R offers optiooptionsn normalization, clustering , Dendrogram. Scale argument help us normalize data equal “none” means.corresponding dendrograms provided next heatmap, can adjust Colv Rolv argument show .adjust color, adjust col argument terrain.color(), rainbow(), heat.colors(), topo.colors() cm.colors())","code":"\ndf<-as.matrix((mtcars))\nheatmap(df,scale=\"none\")\nheatmap(df,scale=\"row\")\nheatmap(df,scale=\"column\")\nheatmap(df, Colv = NA, Rowv = NA, scale=\"column\")\nheatmap(df,col = terrain.colors(256), scale=\"column\")"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"geom_tile","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.4.2 Geom_tile()","text":"","code":""},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"data-processing-2","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.4.2.1 Data processing","text":"","code":"\nx <- LETTERS[1:10]\ny <- paste0(\"var\", seq(1,10))\ndata <- expand.grid(X=x, Y=y)\ndata$Z <- runif(100, 0, 5)"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"plot","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.4.2.2 Plot","text":"can change color plot adding scale_fill_gradient() layer ggplot2","code":"\ngt<-ggplot(data, aes(X, Y, fill= Z)) + \n  geom_tile()\ngt\ngt+\n  scale_fill_gradient(low=\"white\", high=\"blue\") "},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"geom_bin2d","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.4.3 Geom_bin2d","text":"Geom_bin2d function counting numbers observations particular region two-dimensional space represented color gradient. also kind heatmap.can see data geom_tile, geom_bin2d heatmap() deal different. need decide function use beginning.","code":"\nbabies%>%\n  ggplot(aes(y=bwt,x=gestation))+\n  geom_bin2d(binwidth = c(10, 10))+\n  labs(\n    y=\"birth weight\",\n    title=\"relationship between bwt and gestation\"\n  )\nhead(data,5)##   X    Y        Z\n## 1 A var1 1.400612\n## 2 B var1 2.874787\n## 3 C var1 1.356499\n## 4 D var1 2.106286\n## 5 E var1 1.724270\nhead(df,5)##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nbabies1<-babies%>%select(bwt,gestation)\nhead(babies1,5)## # A tibble: 5 × 2\n##     bwt gestation\n##   <int>     <int>\n## 1   120       284\n## 2   113       282\n## 3   128       279\n## 4   123        NA\n## 5   108       282"},{"path":"compare-different-ways-of-plotting-biplot-mosaicplot-and-heatmap.html","id":"reference","chapter":"21 Compare different ways of plotting Biplot, Mosaicplot, and Heatmap","heading":"21.5 Reference","text":"1,https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/biplot\n2,https://www.rdocumentation.org/packages/ggbiplot/versions/0.55\n3,https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/mosaicplot\n4,https://rdrr.io/cran/vcd/man/mosaic.html\n5,https://r-graph-gallery.com/heatmap.html#:~:text=%20heatmap%20is%20a%20graphical,%20natively%20provided%20in%20R.","code":""},{"path":"twitter-api-guide-in-r.html","id":"twitter-api-guide-in-r","chapter":"22 Twitter API guide in R","heading":"22 Twitter API guide in R","text":"Jiayi YuanAPI, known application programming interface, always strong tool data scientists statisticians gain useful data information different websites, computer programs, etc. tried collect data using Twitter API final project, noticed even though tool helpful, many classmates familiar used , many guides online outdated. Therefore, community contribution, like provide comprehensive guide using Twitter API search tweets gather information, followers favorited tweets, R. Using Twitter API easy thing, still many problems totally new tool. Therefore, like introduce different setup methods make sure everyone reads guide can successfully link interface R. also include examples R codes output data guide show directly interface works.beginner, took long time set interface. got many problems tried search solutions online, found many people problems. Even though, now, still many errors hard find answer online. Therefore, believe --date guide using Twitter API necessary, also like introduce tool people like gather data webs freaked potential problems beginning stage.Although tried APIs, think underlying logic . learning Twitter API, believe can also take advantage getting familiar user APIs quickly. Therefore, learning use API can really helpful future study also try APIs developer tools provided platforms.link guide:\nhttps://github.com/MiraYuan/Community_CON/blob/master/2022springcc.md","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","text":"Yujie Tu, Yuchen Meng","code":"\nlibrary(ggmap)\nlibrary(tmap)\nlibrary(spData)\nlibrary(usdata)\nlibrary(plotly)\nlibrary(tidyverse)"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"introduction-2","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.1 Introduction","text":"Data can express information audience use table view data, may miss important information misunderstand data. Therefore, can turn maps especially data columns geographical characteristics like States, longitude latitude, etc. Maps used variety fields express data appealing interpretive way. Maps can add vital context incorporating many variables easy read applicable context.\nlot packages R can draw geographical maps. Let’s explore different methods draw maps.","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"package-ggmap","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.2 Package ggmap","text":"","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"interpretation-and-examples","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.2.1 Interpretation and Examples","text":"trying make customized maps, can use ggmap package. provides way download static data Google map open-source map called stamen (open street map supported currently). can simply use ggmap::get_map ggmap::ggmap plot map given location. Notice Google Maps Platform now requires registered API key, need register api key using ggmap functions use Google’s services. acquiring api key using ggmap::register_google register key, can start plot maps. example:example ggmap using google sourceOf course, can still uses ggmap::get_map download static maps stamen map (simply specify source = “stamen”). need provide gps coordinates lower-left upper-right points.","code":"\n# register_google(key = \"some google map api\")\n# ggmap(get_map(\"columbia university, new york, ny\", zoom = 18, source = \"google\"))\nget_map(c(left = -73.96846472489304, bottom = 40.80507481834089, right = -73.95616654510266, top = 40.81006172001067), \n        zoom = 16, source = \"stamen\") %>%\n  ggmap()"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"combine-with-other-plots","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.2.2 Combine With Other Plots","text":"Since ggmap based ggplot, can add kinds layer tops map. scatter plot goes along ggmap well, since map usually high resolution area map can customized, meaning easy see exactly location. Furthermore, ggmap provides simple way plot map scatter plot, using ggmap::qmplot, can simply provide data set, record containing GPS coordinate:","code":"\n# define helper\n`%notin%` <- function(lhs, rhs) !(lhs %in% rhs)\n# reduce crime to violent crimes in downtown houston\nviolent_crimes <- crime %>% \n     filter(\n         offense %notin% c(\"auto theft\", \"theft\", \"burglary\"),\n         -95.39681 <= lon & lon <= -95.34188,\n         29.73631 <= lat & lat <=  29.78400\n     ) %>% \n     mutate(\n         offense = fct_drop(offense),\n         offense = fct_relevel(offense, c(\"robbery\", \"aggravated assault\", \"rape\", \"murder\"))\n     ) %>% \n  select(\"offense\", \"lon\", \"lat\")\nhead(violent_crimes)##              offense       lon      lat\n## 1 aggravated assault -95.36348 29.77802\n## 2               rape -95.34817 29.75505\n## 3            robbery -95.37596 29.75143\n## 4            robbery -95.36327 29.76328\n## 5 aggravated assault -95.38217 29.78002\n## 6 aggravated assault -95.37930 29.73745\n# use qmplot to make a scatterplot on a map\ng1 <- qmplot(lon, lat, group = offense, data = violent_crimes, color = I(\"red\"))\ng1"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"make-it-interactive","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.2.3 Make it Interactive","text":"course, can also make interactive easily since still ggplot object","code":"\nggplotly(g1, tooltip = c(\"offense\", \"lon\", \"lat\"))"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"comments","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.2.4 Comments","text":"want use ggmap, register Google Cloud get API key use ggmap::register_google(key = \"xxxxx\").","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"package-ggplot","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.3 Package ggplot","text":"","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"interpretation-and-example","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.3.1 Interpretation and Example","text":"course, ggplot also provides function plot maps, can use ggplot::geom_map. , data needed plot maps relatively hard find. Package called maps provides maps smallest granularity states, meaning get detailed information within state.","code":"\nus_states.map <- map_data(\"state\")\nggplot(us_states.map, aes(map_id = region)) +\n  geom_map(color = \"white\", map = us_states.map) +\n  expand_limits(x = us_states.map$long, y = us_states.map$lat)"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"combine-with-other-plots-1","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.3.2 Combine With Other Plots","text":"Since map date generally comes form dozens polygons, heat map goes along kinds maps well. Using data containing state’s certain statistics, can easily plot heat map United State help maps ggplot","code":"\ndata(\"state_stats\")\nstates_selected <- state_stats %>%\n  mutate(region = tolower(state)) %>%\n  select(region,unempl,murder,nuclear)\n\nstates_map <- map_data(\"state\")\n\nstates_selected %>%\n  filter(region != \"district of columbia\") %>%\n  ggplot(aes(fill = murder)) +\n  geom_map(aes(map_id = region), map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  scale_fill_viridis_c() +\n  labs(x = \"\", y = \"\", fill = \"Murders\\nper 100k\")"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"notes","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.3.3 Notes","text":"maps::map can also draw geographical maps easily.","code":"\nmaps::map(\"state\")"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"package-tmap","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.4 Package tmap","text":"","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"interpretation-and-example-1","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.4.1 Interpretation and Example","text":"basic building block tmap::tm_shape (defines input data), followed one layer elements tmap::tm_fill tmap::tm_borders. data uses objects class defined sf, stars, sp raster package. Luckily, package called spData provides maps can use, similar maps, number maps limited smallest granularity states.","code":"\ntm_shape(us_states) +\n  tm_borders()"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"combine-with-other-plots-2","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.4.2 Combine With Other Plots","text":"Similarly, can also plot heatmap using tmap easily.","code":"\ndata(\"state_stats\")\nus_states %>% \n  inner_join(state_stats %>% select(\"state\", \"murder\"), by = c(\"NAME\" = \"state\")) %>%\n  select(\"NAME\", \"geometry\", \"murder\") %>%\n  tm_shape() + \n  tm_fill(col = \"murder\", breaks = seq(0, 10, 2.5), interactive = TRUE) +\n  tm_borders()"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"make-it-interactive-1","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.4.3 Make it Interactive","text":"easily switch generated map interactive mode using just one line code. default, hover text first column input data.","code":"\n# not run\n#tmap_mode(\"view\")\n#tmap_last()"},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"comment","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.4.4 Comment","text":"tmap based idea ‘grammar graphics’, just like ggplot2. involves separation input data aesthetics. Therefore, difficult users familiar ggplot2 learn .","code":""},{"path":"geographical-maps-packages-comparison-ggmap-vs.-ggplot-vs-tmap.html","id":"references-2","chapter":"23 Geographical Maps Packages Comparison: ggmap vs. ggplot vs tmap","heading":"23.5 References","text":"ggmap: original github page ggmapGeocomputation R, Chapter 9, Robin Lovelace, et al.: great introduction tutorial tmap leafletUsing Spatial Data R, Chapter 3, Claudia Engel: tutorial ggplot, ggmap, tmap, leaflet","code":""},{"path":"r-shiny-map-tutorial.html","id":"r-shiny-map-tutorial","chapter":"24 R Shiny Map Tutorial","heading":"24 R Shiny Map Tutorial","text":"Haozhong Zheng Weixun QianIn tutorial, want introduce build APP incorporates map built shapefiles. Main packages used shiny ggspatial. Basically first give quick introduction shiny, introduce preprocessing work shapefiles produce plots maps, build advanced shiny app widget introduced previous part.","code":""},{"path":"r-shiny-map-tutorial.html","id":"shiny-page","chapter":"24 R Shiny Map Tutorial","heading":"24.1 Shiny Page","text":"","code":""},{"path":"r-shiny-map-tutorial.html","id":"references-3","chapter":"24 R Shiny Map Tutorial","heading":"24.2 References","text":"ggspatialleafletmagickR shinyviridis","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"neural-network-ploting-with-bp-algorithm-and-without-algorithm","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25 Neural Network Ploting with BP Algorithm and without Algorithm","text":"Jing Wang Peilin Jing","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"explnation-of-our-community-contribution","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.1 Explnation of our community contribution:","text":"","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"since-we-are-learning-data-science-as-well-as-data-visualization-this-semester-we-get-very-interested-in-the-data-visualization-in-machine-learning-and-decide-to-do-a-tutorial-for-the-network-plotting-which-generally-for-the-network-visualization-and-bp-neural-network-plotting.","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.1.1 Since we are learning data science as well as data visualization this semester, we get very interested in the data visualization in machine learning, and decide to do a tutorial for the Network plotting, which generally for the network visualization and bp neural network plotting.","text":"","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"we-learned-a-lot-from-the-project-including-the-neural-networks-we-never-lerned-before-the-basic-network-plotting-and-how-to-scale-the-data-for-better-visualization.-also-there-are-a-few-things-we-want-to-improve-for-next-time.-we-would-like-to-visualize-more-complex-neural-network-algorithm-and-would-like-to-learn-more-about-the-network-plotting-packages-including-ggraph-and-ggnetwork.","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.1.2 We learned a lot from the project, including the neural networks we never lerned before, the basic network plotting, and how to scale the data for better visualization. Also, there are a few things we want to improve for next time. We would like to visualize more complex neural network algorithm, and would like to learn more about the network plotting packages including ggraph and ggnetwork.","text":"","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"the-back-propagation-bp-neural-networks-algorithm","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2 The Back Propagation (bp) Neural Networks algorithm","text":"BP (Back Propagation) neural network proposed scientists headed Rumelhart McCelland 1986. multi-layer feed-forward network trained error Back Propagation algorithm. one widely used neural network models present. BP network can learn store large number input-output mode mappings without revealing mathematical equations describing mappings advance. learning rule use fastest descent method, back propagation constantly adjust weight threshold network, minimize sum squares error network. topology BP neural network model includes input layer, hide layer output layer. can effectively decrease data dimensionality. , need pass data “bottleneck” lower dimension source data.already many packages bp neural networks R language, NNET, AMORE Neuralnet.Nnet provides common feed-forward back-propagation neural network algorithm.AMORE package takes one step providing richer control parameters adding multiple hidden layers.Neuralnet package improved providing elastic backpropagation algorithms forms activation functions.RSNNS package contains bp algorithm also types algorithm, DDA etc.Backpropagation neural networks can helpful whem want compress visuallized multi_dimensional data, clear well-known methods.(https://link.springer.com/chapter/10.1007/978-3-642-30223-7_87; https://rpubs.com/alexv71/237757)","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"nnet","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.1 NNET","text":"Feed-Forward Neural Networks Multinomial Log-Linear Modelsnnet uses C code BFGS optim (converted earlier Pascal) directly instead calling optim R. may allows faster, limits optimization single method. nnet beaten Extreme Learning Machine (ELM) algorithms terms speed. However, larger variation using nnet. believe different default starting values cause . instance, nnet uses range initial random weights 0.7 spite results, real reason authors users likely choose nnet included distributed base R even mentioned first package CRAN’s task view machine learning.(https://cran.r-project.org/web/packages/nnet/nnet.pdf)","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"usage","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.1.1 Usage","text":"nnet(x, …)S3 method formulaS3 method default","code":"nnet(formula, data, weights, …,\n\nsubset, na.action, contrasts = NULL)nnet(x, y, weights, size, Wts, mask,\n\nlinout = FALSE, entropy = FALSE, softmax = FALSE,\n \ncensored = FALSE, skip = FALSE, rang = 0.7, decay = 0,\n \nmaxit = 100, Hess = FALSE, trace = TRUE, MaxNWts = 1000,\n \nabstol = 1.0e-4, reltol = 1.0e-8, …)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.1.2 Arguments","text":"formula: formula form class ~ x1 + x2 + …x: matrix data frame x values examples.y: matrix data frame target values examples.weights: (case) weights example – missing defaults 1.size: number units hidden layer. Can zero skip-layer units.data: Data frame variables specified formula preferentially taken.subset: index vector specifying cases used training sample. (NOTE: given, argument must named.)na.action: function specify action taken NAs found. default action procedure fail. alternative na.omit, leads rejection cases missing values required variable. (NOTE: given, argument must named.)contrasts: list contrasts used factors appearing variables model formula.Wts: initial parameter vector. missing chosen random.mask: logical vector indicating parameters optimized (default ).linout: switch linear output units. Default logistic output units.entropy: switch entropy (= maximum conditional likelihood) fitting. Default least-squares.softmax: switch softmax (log-linear model) maximum conditional likelihood fitting. linout, entropy, softmax censored mutually exclusive.censored: variant softmax, non-zero targets mean possible classes. Thus softmax row (0, 1, 1) means one example classes 2 3, censored means one example whose class known 2 3.skip: switch add skip-layer connections input output.rang: Initial random weights [-rang, rang]. Value 0.5 unless inputs large, case chosen rang * max(|x|) 1.decay: parameter weight decay. Default 0.maxit: maximum number iterations. Default 100.Hess: true, Hessian measure fit best set weights found returned component Hessian.trace: switch tracing optimization. Default TRUE.MaxNWts: maximum allowable number weights. intrinsic limit code, increasing MaxNWts probably allow fits slow time-consuming.abstol: Stop fit criterion falls abstol, indicating essentially perfect fit.reltol: Stop optimizer unable reduce fit criterion factor least 1 - reltol.…arguments passed methods.","code":"\n#load package and data\n# install.packages(\"DMwR2\")\nlibrary(lattice)\nlibrary(grid)\nlibrary(DMwR2)\nlibrary(nnet)\ndata(algae)\n\n#drop NAs\nalgae <- algae[-manyNAs(algae), ]\nclean.algae <- knnImputation(algae[,1:12],k=10) \n\n#approaching the value of NAs by finding the median of K neigbors\nalgae<-knnImputation(algae,k=10,meth='median')\n\n# standardized data\nnorm.data <- scale(clean.algae[,4:12])  \n\n#use nnet to fit the model  \nnn <- nnet(a1~., norm.data, size = 10, decay = 0.01,  \n maxit = 1000, linout = T, trace = F)  \n\n#use the model above to make prediction\nnorm.preds <- predict(nn, norm.data) \n\n#plot predict value and true value\nplot(norm.preds~ scale(clean.algae$a1))\n#calculate the error  \n(nmse2 <- mean((norm.preds-scale(clean.algae$a1))^2)/  \nmean((mean( scale(clean.algae$a1))- scale(clean.algae$a1))^2)) ## [1] 0.1452598\n#plot model\nlibrary(devtools)\nsource_url('https://gist.githubusercontent.com/Peque/41a9e20d6687f2f3108d/raw/85e14f3a292e126f1454864427e3a189c2fe33f3/nnet_plot_update.r')\nplot.nnet(nn)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"amore","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.2 AMORE","text":"AMORE flexible neural network package, born release TAO robust neural network algorithem R users. ’s kind dated hard data visualization people generally use one bp neural network.","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"newff-usage","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.2.1 newff() Usage","text":"","code":"newff(n.neurons, learning.rate.global, momentum.global, \nerror.criterium, Stao,hidden.layer, output.layer, method)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-1","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.2.2 Arguments","text":"n.neurons: Numeric vector containing number neurons layer. first element vector number input neurons, last number output neurons rest number neuron different hidden layers.learning.rate.global: Learning rate every neuron trained.momentum.global: Momentum every neuron. Needed several training methodsThe mostly used arguments newff() listed . information, can check cran website posted .","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"train-usage","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.2.3 train() Usage","text":"","code":"train(net, P, T, Pval=NULL, Tval=NULL, error.criterium=\"LMS\",\nreport=TRUE,n.shows, show.step, Stao=NA,prob=NULL,n.threads=0L)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-2","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.2.4 Arguments","text":"net: Neural Network train.error.criterium: Criterium used measure goodness fit:“LMS”, “LMLS”, “TAO”.n.shows: Number times report (report TRUE). total number training epochs n.shows times show.step.show.step: Number epochs train non-stop training function allow report.mostly used arguments train() listed . information, can check cran website posted .（http://cran.nexr.com/web/packages/AMORE/AMORE.pdf）","code":"\n#load package and data\nlibrary(remotes)\n#install_version(\"AMORE\", \"0.2-11\")\nlibrary(AMORE)\n\n# Generate input data\nP <- matrix(sample(seq(-1,1,length=1000),1000,replace=FALSE),ncol=1)\n\n# Generate output data\ntarget <- P^2\n\n# Generate 2 hidden layers\nnet <- newff(n.neurons=c(1,3,2,1),\n             learning.rate.global = 1e-2, momentum.global = 0.5)\n\n# Train the neutral network\nresult <- train(net,P,target,error.criterium = \"LMS\", report = TRUE,\n                show.step = 100,n.shows = 5)## index.show: 1 LMS 0.0894144335797345 \n## index.show: 2 LMS 0.0893664649835284 \n## index.show: 3 LMS 0.0886648893419836 \n## index.show: 4 LMS 2.87892981034031e-05 \n## index.show: 5 LMS 2.130723629117e-05\n# Predict for the result\ny <- sim(result$net,P)\nplot(P,y,col=\"blue\",pch=\"+\")\npoints(P,target,col=\"red\",pch=\"x\")"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"neuralnet","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.3 Neuralnet","text":"package train neural networks using back propagation,resilient back propagation without wright backtracking modified globally convergent. alloes flexible settings custom_choice error activation function. Furthermore, calculation generalized weights imlemented. one generally used many people, one popular package bp neural network.","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"neuralnet-usage","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.3.1 neuralnet() Usage","text":"","code":"neuralnet(formula, data, hidden = 1, threshold = 0.01,\n stepmax = 1e+05, rep = 1, startweights = NULL，\n learningrate.limit = NULL, learningrate.factor = list(minus = 0.5,\n plus = 1.2), learningrate = NULL, lifesign = \"none\",\n lifesign.step = 1000, algorithm = \"rprop+\", err.fct = \"sse\",\n act.fct = \"logistic\", linear.output = TRUE, exclude = NULL,\n constant.weights = NULL, likelihood = FALSE)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-3","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.3.2 Arguments","text":"formula: symbolic description model fitted.data: data frame containing variables specified formula.hidden: vector integers specifying number hidden neurons (vertices) layer.threshold: numeric value specifying threshold partial derivatives error function stopping criteria.etc.mostly used arguments neuralnet() listed . futher information, can check cran website posted .","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"compute-usage","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.3.3 compute() Usage","text":"","code":"compute(x, covariate, rep = 1)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-4","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.3.4 Arguments","text":"x: object class nn.covariate: dataframe matrix containing variables used train neural network.rep: integer indicating neural network’s repetition used.(https://cran.r-project.org/web/packages/neuralnet/neuralnet.pdf)","code":"\n#load package and data\n# install.packages(\"neuralnet\")\nlibrary(grid)\nlibrary(MASS)\nlibrary(neuralnet)\n\n# Generate 50 data from 0 to 100 and turn it into input and output\ntraininginput <- as.data.frame(runif(50,min=0,max=100))\ntrainingoutput <- sqrt(traininginput)\n\n# Combine input and output\ntrainingdata <- cbind(traininginput,trainingoutput)\ncolnames(trainingdata) <- c(\"Input\", \"Output\")\n\n# Train 10 hiddens for neural network\nnet.sqrt <- neuralnet(Output ~ Input, trainingdata, hidden=10,threshold=0.001)\nsummary(net.sqrt)##                     Length Class      Mode    \n## call                 5     -none-     call    \n## response            50     -none-     numeric \n## covariate           50     -none-     numeric \n## model.list           2     -none-     list    \n## err.fct              1     -none-     function\n## act.fct              1     -none-     function\n## linear.output        1     -none-     logical \n## data                 2     data.frame list    \n## exclude              0     -none-     NULL    \n## net.result           1     -none-     list    \n## weights              1     -none-     list    \n## generalized.weights  1     -none-     list    \n## startweights         1     -none-     list    \n## result.matrix       34     -none-     numeric\n# Plot the neural network\nplot(net.sqrt)\n\n# Compute for the neutons\ntestdata <- as.data.frame((1:10)^2)\nresult <- compute(net.sqrt,testdata)\nls(result)## [1] \"net.result\" \"neurons\"\nprint(result$net.result)##           [,1]\n##  [1,] 1.001483\n##  [2,] 1.967301\n##  [3,] 3.009390\n##  [4,] 3.998934\n##  [5,] 5.002556\n##  [6,] 5.999033\n##  [7,] 6.999842\n##  [8,] 8.000364\n##  [9,] 8.999183\n## [10,] 9.994979"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"rsnss","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.4 RSNSS","text":"RSNSS new package neural network, ’s originally ceom SNNS library wraps SNNS functionality make available R. Also, RSNSS expand functionality flexibility SNNS contains algorithms topologies.(https://cran.r-project.org/web/packages/RSNNS/RSNNS.pdf;\nhttps://rdrr.io/cran/RSNNS/man/mlp.html)","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"usage-1","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.4.1 Usage","text":"","code":"analyzeClassification(y, method = \"WTA\", l = 0, h = 0)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-5","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.2.4.2 Arguments","text":"y: inputsmethod: “WTA” “402040”l: lower bound, e.g. 402040: l=0.4 h upper bound, e.g. 402040: h=0.6","code":"\n#load package and data\n\n# install.packages(\"RSNNS\")\nlibrary(Rcpp)\nlibrary(RSNNS)\n\n#load data\ndata(iris)\n\n#use sample function to get random sample data set \n iris <- iris[sample(1:nrow(iris),length(1:nrow(iris))),1:ncol(iris)]\n \n#define net input \n irisValues <- iris[,1:4]\n \n#define net output, and transform the data format \n irisTargets <- decodeClassLabels(iris[,5])\n \n#select training set and testing set  \n iris <- splitForTrainingAndTest(irisValues, irisTargets, ratio=0.15)\n \n#standardized data\n iris <- normTrainingAndTestSet(iris)\n \n#use mlp to do the neural network algorithm (feed-forward)  \nmodel <- mlp(iris$inputsTrain, iris$targetsTrain, size=5, learnFuncParams=c(0.1), maxit=50, inputsTest=iris$inputsTest, targetsTest=iris$targetsTest)\nsummary(model)## SNNS network definition file V1.4-3D\n## generated at Tue Apr 12 21:44:45 2022\n## \n## network name : RSNNS_untitled\n## source files :\n## no. of units : 12\n## no. of connections : 35\n## no. of unit types : 0\n## no. of site types : 0\n## \n## \n## learning function : Std_Backpropagation\n## update function   : Topological_Order\n## \n## \n## unit default section :\n## \n## act      | bias     | st | subnet | layer | act func     | out func\n## ---------|----------|----|--------|-------|--------------|-------------\n##  0.00000 |  0.00000 | i  |      0 |     1 | Act_Logistic | Out_Identity \n## ---------|----------|----|--------|-------|--------------|-------------\n## \n## \n## unit definition section :\n## \n## no. | typeName | unitName          | act      | bias     | st | position | act func     | out func | sites\n## ----|----------|-------------------|----------|----------|----|----------|--------------|----------|-------\n##   1 |          | Input_1           | -0.29143 |  0.13084 | i  | 1,0,0    | Act_Identity |          | \n##   2 |          | Input_2           | -0.13387 | -0.00879 | i  | 2,0,0    | Act_Identity |          | \n##   3 |          | Input_3           |  0.19442 | -0.29257 | i  | 3,0,0    | Act_Identity |          | \n##   4 |          | Input_4           |  0.11948 |  0.00347 | i  | 4,0,0    | Act_Identity |          | \n##   5 |          | Hidden_2_1        |  0.83784 |  1.33418 | h  | 1,2,0    |||\n##   6 |          | Hidden_2_2        |  0.22736 | -0.92067 | h  | 2,2,0    |||\n##   7 |          | Hidden_2_3        |  0.12808 | -2.82738 | h  | 3,2,0    |||\n##   8 |          | Hidden_2_4        |  0.39944 |  0.06052 | h  | 4,2,0    |||\n##   9 |          | Hidden_2_5        |  0.31358 | -1.16370 | h  | 5,2,0    |||\n##  10 |          | Output_setosa     |  0.11700 | -0.60774 | o  | 1,4,0    |||\n##  11 |          | Output_versicolor |  0.68134 |  0.50483 | o  | 2,4,0    |||\n##  12 |          | Output_virginica  |  0.07557 | -2.22674 | o  | 3,4,0    |||\n## ----|----------|-------------------|----------|----------|----|----------|--------------|----------|-------\n## \n## \n## connection definition section :\n## \n## target | site | source:weight\n## -------|------|---------------------------------------------------------------------------------------------------------------------\n##      5 |      |  4: 1.23525,  3: 1.32506,  2:-1.28824,  1: 0.92506\n##      6 |      |  4:-0.21415,  3:-1.29071,  2: 1.66811,  1:-0.67684\n##      7 |      |  4: 2.98342,  3: 2.10284,  2:-0.21317,  1:-0.39641\n##      8 |      |  4:-1.36627,  3:-1.16256,  2: 0.79454,  1:-0.09370\n##      9 |      |  4: 1.51683,  3: 1.03424,  2:-0.12963,  1: 0.06655\n##     10 |      |  9:-2.10872,  8: 2.42271,  7:-1.11247,  6: 1.36118,  5:-2.25204\n##     11 |      |  9:-0.89046,  8:-0.96601,  7:-3.94641,  6:-1.99330,  5: 2.24251\n##     12 |      |  9: 1.75366,  8:-3.31889,  7: 3.03418,  6:-0.56827,  5: 0.28522\n## -------|------|---------------------------------------------------------------------------------------------------------------------\n#use the model above to make prediction\npar(mfrow=c(2,2))\nplotIterativeError(model)\npredictions <- predict(model,iris$inputsTest)\nplotRegressionError(predictions[,2], iris$targetsTest[,2])\n\n# Generate confusion matrix and plot ROC curve\nconfusionMatrix(iris$targetsTrain,fitted.values(model))##        predictions\n## targets  1  2  3\n##       1 43  0  0\n##       2  0 37  3\n##       3  0  1 43\nconfusionMatrix(iris$targetsTest,predictions)##        predictions\n## targets  1  2  3\n##       1  7  0  0\n##       2  0 10  0\n##       3  0  0  6\nplotROC(fitted.values(model)[,2], iris$targetsTrain[,2])\nplotROC(predictions[,2], iris$targetsTest[,2])"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"general-plotting-for-neural-network","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3 General plotting for Neural network","text":"Network visualization allows administrators quickly intuitively understand lot information state network glance. sure algorithm, ’s better us visualize network data. network visualization, like find key actors links, relationship strength, structural properties diffusion patterns, etc.like introduce two basic package network visualizetion network igraph. network can represent range relational data types, supports arbitrary vertex/edge/graph attributes. igraph can handle large graphs well provides functions generating random regular graphs, graph visualization, centrality methods much .(https://www.auvik.com/franklyit/blog/--network-visualization/;\nhttps://kateto.net/network-visualization;\nhttps://cran.r-project.org/web/packages/igraph/igraph.pdf;\nhttps://cran.r-project.org/web/packages/network/network.pdf)","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"network","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3.1 network","text":"","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"usage-2","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3.1.1 Usage","text":"","code":"add.edge( x,\n  tail,\n  head,\n  names.eval = NULL,\n  vals.eval = NULL,\n  edge.check = FALSE,\n  ...\n)\nadd.edges(x, tail, head, names.eval = NULL, vals.eval = NULL, ...)"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-6","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3.1.2 Arguments","text":"x: object class networktail: add.edge, vector vertex IDs reflecting tail set edge added; add.edges, list vectorshead: add.edge, vector vertex IDs reflecting head set edge added; add.edges, list vectorsnames.eval: add.edge, optional list names edge attributes; add.edges, list length equal number edges, element containing list names attributes corresponding edgevals.eval: add.edge, optional list edge attribute values (matching names.eval); add.edges, list listsedge.check: logical; perform (computationally expensive) tests check legality submitted edges?…\nadditional arguments","code":"\nset.seed(110)\nlibrary(network)\npar(mfrow = c(2, 3))\n# generate a three dots graph\nnet <- network.initialize(3)\nplot(net,vertex.cex=10)\n# add one edge\nadd.edge(net,2,3) \nplot(net,vertex.cex=10, displaylabels=T)\n# add two more dots\nadd.vertices(net,2)\nplot(net,vertex.cex=10, displaylabels=T)\n# generate a 5*12 dataframe\ndf <- matrix(rnorm(60),5)\n# use covariance matrix to generate network\ndfcor <- cor(df)\n# remove the low correlation\ndfcor[dfcor<0.5] <- 0\nnetcor <- as.network(dfcor,matrix.type = 'adjacency')\nplot(netcor)\n# add property to dots and edges\nset.vertex.attribute(netcor, \"class\", length(netcor$val):1)\nset.edge.attribute(netcor,\"color\",length(netcor$mel):1)\n# more visual\nplot(netcor,vertex.cex=5,vertex.col=get.vertex.attribute(netcor,\"class\"),edge.col=get.edge.attribute(netcor,'color'))"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"igraph","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3.2 igraph","text":"","code":""},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"usage-3","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3.2.1 Usage","text":"","code":"## S3 method for class 'igraph'\ne1 + e2"},{"path":"neural-network-ploting-with-bp-algorithm-and-without-algorithm.html","id":"arguments-7","chapter":"25 Neural Network Ploting with BP Algorithm and without Algorithm","heading":"25.3.2.2 Arguments","text":"e1: First argument, probably igraph graph.e2: Second argument.","code":"\nset.seed(110)\nlibrary(igraph)\npar(mfrow = c(2, 2))\n# generate a three dots graph\nnet <- graph.empty(n=3, directed=TRUE)\nplot(net)\n# add two edges\nnew_edges <- c(1,3, 2,3)\nnet <- add.edges(net, new_edges)\nplot(net)\n# add two more dots\nnet <- add.vertices(net, 2)\nplot(net)\n# generate a 5*12 dataframe\ndf <- matrix(rnorm(60),5)\n# use covariance matrix to generate network\ndfcor <- cor(df)\n# remove the low correlation\ndfcor[dfcor<0.5] <- 0\nnet <- graph.adjacency(dfcor,weighted=TRUE,diag=FALSE)\nplot(net)"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"animation-graphs-in-plot_ly-and-gganimate","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26 Animation graphs in plot_ly and gganimate","text":"Yingtong Peng Xiaoran HuMotivation:\nclasses, seen many data graphs change time, finding changes time costs lots graphing work since need draw one plot time, however, using animation plot, changes time/groups can seen one plot easily clearly. One advantages animation expands number variables can visualize, can let variables data set “drive” animation.project, learned two ways draw animation plots: 1.Using plot_ly() function ‘frame’ argument. 2.Using animate() function ggplot. also learned use animation options make graphic transitions smoother.\nNext time, can improve animation plots: Change slider appearance, glyph color,shape,size, axis labels. can also animation plots, dynamic box plot, dynamic map.","code":""},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"types-of-graphics","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.1 Types of graphics","text":"Static(Permanently fixed created)Interactive(Changes based action performed user)Dynamic(Changes periodically without user input)","code":"\nlibrary(ggplot2)\nlibrary(gganimate)\nlibrary(ggpubr)\nlibrary(gapminder)\nlibrary(gifski)\nlibrary(plotly) \nlibrary(babynames)\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(tidyr)"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"self-created-data","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.2 Self-created data","text":"","code":"\ntheme_set(theme_pubr())\n# Make 2 basic states and concatenate them:\ndat1 <- data.frame(group=c(\"A\",\"B\",\"C\"), values=c(3,5,9), frame=rep('a',3))\ndat2 <- data.frame(group=c(\"A\",\"B\",\"C\"), values=c(6,4,8), frame=rep('b',3))\ndata <- rbind(dat1,dat2)\nhead(data)##   group values frame\n## 1     A      3     a\n## 2     B      5     a\n## 3     C      9     a\n## 4     A      6     b\n## 5     B      4     b\n## 6     C      8     b"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"static-barplotsone-categorical-variable-one-discrete-variable-over-group","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.2.1 Static Barplots(One categorical variable, One discrete variable over group)","text":"","code":"\n# Static barplots:\ng1<-ggplot(dat1, aes(x=group, y=values, fill=group)) + \n  geom_bar(stat='identity')\ng2<-ggplot(dat2, aes(x=group, y=values, fill=group)) + \n  geom_bar(stat='identity')\nfigure<-ggarrange(g1,g2,labels=c(\"dat1\",\"dat2\"),legend=\"bottom\",common.legend=TRUE)\nfigure"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"dynamic-barplotone-categorical-variable-one-discrete-variable-over-group","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.2.2 Dynamic Barplot(One categorical variable, One discrete variable over group)","text":"Using dynamic plot, changes two data sets can seen understood easily one single plot.","code":"\n# Make a dynamic ggplot,add frame=group\ng3<-ggplot(data, aes(x=group, y=values, fill=group)) + \n  geom_bar(stat='identity') +\n  theme_bw() +\n  # gganimate specific bits:\n  transition_states(\n    frame,\n    transition_length = 2,\n    state_length = 1\n  ) +\n  ease_aes('sine-in-out')\nanimate(g3,renderer=gifski_renderer())"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"gdp-data","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.3 GDP data","text":"","code":"\n# Get data:\nhead(gapminder)## # A tibble: 6 × 6\n##   country     continent  year lifeExp      pop gdpPercap\n##   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n## 1 Afghanistan Asia       1952    28.8  8425333      779.\n## 2 Afghanistan Asia       1957    30.3  9240934      821.\n## 3 Afghanistan Asia       1962    32.0 10267083      853.\n## 4 Afghanistan Asia       1967    34.0 11537966      836.\n## 5 Afghanistan Asia       1972    36.1 13079460      740.\n## 6 Afghanistan Asia       1977    38.4 14880372      786."},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"animation-plot-using-gganimatetwo-continuous-variables-over-time","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.3.1 Animation Plot using gganimate(Two Continuous Variables Over Time)","text":"","code":"\n# Make a dynamic ggplot, add frame=year: one image per year\ng3<-ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +\n  geom_point() +\n  scale_x_log10() +\n  theme_bw() +\n  # gganimate specific bits:\n  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +\n  transition_time(year) +\n  ease_aes('linear')\nanimate(g3,renderer=gifski_renderer())\nfig<-gapminder %>% \n  plot_ly(x = ~gdpPercap, y = ~lifeExp, size = ~pop, color = ~continent, frame = ~year, text=~country, hoverinfo = \"text\", type = 'scatter', mode = 'markers' )  %>%\n  add_text(x = 6500, y = 50, text = ~year, frame = ~year, textfont = list(size=150,color=toRGB(\"gray80\")))\nfig<-fig %>% \n  layout( xaxis = list( type = \"log\" ) ) \nfig"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"add-animation-options","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.3.2 Add Animation Options","text":"easing options animation:“linear”,“quad”,“cubic”,“sin”,“exp”,“circle”,“back”,“bounce”","code":"\nfig<-fig %>%\n  animation_opts(1000, easing = \"elastic\", redraw = FALSE)\nfig"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"animation-plot-facet-by-continenttwo-continuous-variables-over-time","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.3.3 Animation Plot facet by continent(Two Continuous Variables Over Time)","text":"","code":"\n# Make a ggplot, but add frame=year: one image per year\ng4<-ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10() +\n  facet_wrap(~continent) +\n  # Here comes the gganimate specific bits\n  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +\n  transition_time(year) +\n  ease_aes('linear')\nanimate(g4,renderer=gifski_renderer())"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"babynames-data","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.4 Babynames Data","text":"","code":"\nhead(babynames)## # A tibble: 6 × 5\n##    year sex   name          n   prop\n##   <dbl> <chr> <chr>     <int>  <dbl>\n## 1  1880 F     Mary       7065 0.0724\n## 2  1880 F     Anna       2604 0.0267\n## 3  1880 F     Emma       2003 0.0205\n## 4  1880 F     Elizabeth  1939 0.0199\n## 5  1880 F     Minnie     1746 0.0179\n## 6  1880 F     Margaret   1578 0.0162"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"keep-only-three-names-for-female","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.4.1 Keep only three names for female","text":"","code":"\n(dim(babynames))## [1] 1924665       5\ndon<-babynames %>% \n  filter(name %in% c(\"Ashley\", \"Patricia\", \"Helen\")) %>%\n  filter(sex==\"F\")"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"interactive-plotone-categorical-variable-one-continuous-variable-over-time","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.4.2 Interactive Plot(One categorical variable, one continuous variable over time)","text":"","code":"\nbaby<- don %>%\n  plot_ly(x= ~year,y= ~n, color= ~name) %>%\n  add_lines()\nbaby"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"animation-plot-using-plotlyone-categorical-variable-one-continuous-variable-over-time","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.4.3 Animation Plot using plotly(One categorical variable, one continuous variable over time)","text":"","code":"\ncomplete_don = don %>% complete(name, year, fill = list(n = 0))\nbabyani<-complete_don %>%\n  split(f = .$year) %>%\n  accumulate(.,~bind_rows(.x,.y)) %>%\n  set_names(1880:2017) %>%\n  bind_rows(.id = \"frame\") %>%\n  plot_ly(x= ~year,y= ~n)%>%\n  add_lines(color = ~name, frame= ~frame, ids= ~frame)\nbabyani"},{"path":"animation-graphs-in-plot_ly-and-gganimate.html","id":"animation-plot-using-gganimateone-categorical-variable-one-continuous-variable-over-time","chapter":"26 Animation graphs in plot_ly and gganimate","heading":"26.4.4 Animation Plot using gganimate(One categorical variable, one continuous variable over time)","text":"","code":"\n# Plot\ng5<-don %>%\n  ggplot( aes(x=year, y=n, group=name, color=name)) +\n    geom_line() +\n    geom_point() +\n    ggtitle(\"Popularity of American names in the previous 30 years\") +\n    theme_ipsum() +\n    ylab(\"Number of babies born\") +\n    transition_reveal(year)\nanimate(g5,renderer=gifski_renderer())"},{"path":"forest-plots.html","id":"forest-plots","chapter":"27 Forest Plots","heading":"27 Forest Plots","text":"Shreya Rao","code":""},{"path":"forest-plots.html","id":"introduction-3","chapter":"27 Forest Plots","heading":"27.1 Introduction","text":"Forest Plots provide tabular graphical information estimates comparisons associations, corresponding precision, statistical significance.forest plot arrays point estimates (e.g., mean) confidence intervals (e.g., 95% CI) represented whiskers multiple studies /multiple findings within study horizontal orientation.Explanatory text displayed next points whisker diagrams provide details regarding data presented.vertical reference line typically plotted null hypothesis, statistical significance individual point whiskers compared reference line.cases data compared difference means, null zero (0) x scales normal. ratio (e.g., odds ratio) compared, null value 1 scales logarithmic.Example 1:\nExample 2:\n","code":""},{"path":"forest-plots.html","id":"data","chapter":"27 Forest Plots","heading":"27.2 Data","text":"Assume study conducted year May 2020 June 2021 collected mortality rates people along socio-demographic medical information. Researchers want see factors Sex, Socioeconomic condition, Period pandemic Preexisting conditions influenced mortality rate. , calculated odds ratio mortality rates factors respect base factor within four different categories.analysis, data looks like :Note dataset columns - factors, groups/categoies factors belong , odds ratio, lower limits confidence interval upper limits confidence intervals odds ratio. factors columns also indicates reference factor every group. reference groups within category NA values odds ratio, lower upper confidence level limits.Just looking values table, can fully understand nuances. better understand analysis, need make forest plot. use library forestplot plot .","code":"\nor.df <- data.frame(\n  factors = c(\"Female (ref)\", \"Male\", \n              \"High (ref)\", \"Low\", \n              \"Period 1 (05/17/2020-09/30/2020) (ref)\", \"Period 2 (10/01/2020-01/31/2021)\",\n         \"Period 3 (02/01/2021-05/14/2021)\", \"Period 4 (05/14/2021-06/14/2021)\", \n         \"No comorbidity (ref)\", \"Diabetes\", \"Hypertension\", \"Chronic respiratory illness\",   \"Chronic renal disease\", \"Chronic liver disease\", \"Other\"), \n  groups = c(\"Sex\", \"Sex\", \n             \"Socio-demographic factors\", \"Socio-demographic factors\", \n             \"Period of the pandemic\", \"Period of the pandemic\",\n         \"Period of the pandemic\", \"Period of the pandemic\", \n         \"Preexisting conditions\", \"Preexisting conditions\", \"Preexisting conditions\",\n         \"Preexisting conditions\", \"Preexisting conditions\", \"Preexisting conditions\", \"Preexisting conditions\"),\n  or =  c(NA, 1.15, NA, 1.76, NA, 0.90, 0.84, 6.09, NA, 1.05, 1.13, 1.05, 2.33, 2.08, 1.44),\n  ll = c(NA, 1.09, NA, 1.56, NA, 0.85, 0.77, 4.23, NA, 0.97, 1.04, 0.92, 2.04, 1.57, 1.29),\n  ul = c(NA, 1.22, NA, 1.98, NA, 0.95, 0.91, 8.23, NA, 1.15, 1.23, 1.20, 2.67, 2.74, 1.61))\n\nor.df##                                   factors                    groups   or   ll\n## 1                            Female (ref)                       Sex   NA   NA\n## 2                                    Male                       Sex 1.15 1.09\n## 3                              High (ref) Socio-demographic factors   NA   NA\n## 4                                     Low Socio-demographic factors 1.76 1.56\n## 5  Period 1 (05/17/2020-09/30/2020) (ref)    Period of the pandemic   NA   NA\n## 6        Period 2 (10/01/2020-01/31/2021)    Period of the pandemic 0.90 0.85\n## 7        Period 3 (02/01/2021-05/14/2021)    Period of the pandemic 0.84 0.77\n## 8        Period 4 (05/14/2021-06/14/2021)    Period of the pandemic 6.09 4.23\n## 9                    No comorbidity (ref)    Preexisting conditions   NA   NA\n## 10                               Diabetes    Preexisting conditions 1.05 0.97\n## 11                           Hypertension    Preexisting conditions 1.13 1.04\n## 12            Chronic respiratory illness    Preexisting conditions 1.05 0.92\n## 13                  Chronic renal disease    Preexisting conditions 2.33 2.04\n## 14                  Chronic liver disease    Preexisting conditions 2.08 1.57\n## 15                                  Other    Preexisting conditions 1.44 1.29\n##      ul\n## 1    NA\n## 2  1.22\n## 3    NA\n## 4  1.98\n## 5    NA\n## 6  0.95\n## 7  0.91\n## 8  8.23\n## 9    NA\n## 10 1.15\n## 11 1.23\n## 12 1.20\n## 13 2.67\n## 14 2.74\n## 15 1.61"},{"path":"forest-plots.html","id":"formatting","chapter":"27 Forest Plots","heading":"27.3 Formatting","text":"variables need formatted specific way utilize forestplot() function. Since want display confidence intervals values, can also formatted appropriately.make plot presentable, want separates factor categories adding blank line category. forestplot(), add empty string character vectors NA values numeric vectors., make plot readable, can specify rows forest plot bolded. creating summary vector, specifies rows plot want highlight. case, want make text headings category titles stand , create vector TRUE/FALSE value TRUE want bold text FALSE otherwise.","code":"\n#formating confidence intervals as (ll, ul) and adding to dataset\nor.df$ci <- ifelse(!is.na(or.df$or), paste(\"(\", as.character(or.df$ll), \", \", as.character(or.df$ul), \")\", sep = \"\"), \"\")\n\nci <- c(\"95% CI\", \n        \"\", or.df$ci[1:2], \"\", #sex\n        \"\", or.df$ci[3:4], \"\", #socio-demographic\n        \"\", or.df$ci[5:8], \"\", #period\n        \"\", or.df$ci[9:15]     #pre-existing condition\n        )\n#adding NA values and factor categories to or, upper limit and lower limit vectors\n\n#formatting OR values that are displayed on graph\nor.char <- c(\"OR\", \n        \"\", as.character(or.df$or[1:2]), \"\", #sex\n        \"\", as.character(or.df$or[3:4]), \"\", #socio-demographic\n        \"\", as.character(or.df$or[5:8]), \"\", #period\n        \"\", as.character(or.df$or[9:15])     #pre-existing condition\n        )\n\n#formatting OR values forestplot uses\nor <- c(NA,  \n        NA, or.df$or[1:2], NA,#sex \n        NA, or.df$or[3:4], NA, #socio-demographic\n        NA, or.df$or[5:8], NA, #period\n        NA, or.df$or[9:15]     #pre-existing condition\n        )\n\n#formatting lower limit values forestplot uses\nll <- c(NA, \n        NA, or.df$ll[1:2], NA, #sex\n        NA, or.df$ll[3:4], NA, #socio-demographic\n        NA, or.df$ll[5:8], NA, #period\n        NA, or.df$ll[9:15]     #pre-existing condition\n        )\n\n#formatting upper limit values forestplot uses\nul <- c(NA,  \n        NA, or.df$ul[1:2], NA, #sex\n        NA, or.df$ul[3:4], NA, #socio-economic\n        NA, or.df$ul[5:8], NA, #period\n        NA, or.df$ul[9:15] #pre-existing condition\n        )\n\n#formatting the categories and factor names\nfactors <- c(\"\", \n        \"Sex\", or.df$factors[1:2], \"\", #sex\n        \"Socioeconomic condition\", or.df$factors[3:4], \"\", #socio-demographic\n        \"Period of pandemic\", or.df$factors[5:8], \"\", #period\n        \"Preexisting conditions\", or.df$factors[9:15] #pre-existing condition\n        )\n#specifying bolded text\nsummary <- c(rep(TRUE, 2), rep(FALSE, 3), TRUE, rep(FALSE, 3), TRUE, rep(FALSE, 5), TRUE, rep(FALSE, 7))"},{"path":"forest-plots.html","id":"forest-plot","chapter":"27 Forest Plots","heading":"27.4 Forest Plot","text":"forestplot() takes specific type dataframe. need specify mean (values), lower (lower limits confidence intervals), upper (upper limits confidence intervals), study (factors), confint (formatted confidence intervals forestplot() displays) (values forestplot() displays).plot looks fine, x-axis scale can better confidence intervals range fully apparent. can fixed changing scale logarithmic.better, make even clear, can specify x-axis ticks (using xticks) clip conidence interval range (using clip).","code":"\nplot.data <- data.frame(mean = or,\n               lower = ll,\n               upper = ul,\n               study = factors,\n               confint = ci,\n               or = or.char)\nforestplot(plot.data, labeltext = c(study, or, confint),\n             is.summary = summary,\n             new_page = T,\n             col = fpColors(box = \"royalblue\",\n                            line = \"darkblue\"),\n             txt_gp = fpTxtGp(cex = 0.8, label = gpar(fontfamily = \"serif\"), \n                              ticks=gpar(fontsize=5, cex=1.4)),\n             graph.pos = 2,\n             boxsize = 0.2,\n             graphwidth = unit(45, 'mm'),\n             title = \"Forest Plot of Mortality Rates\")\nforestplot(plot.data, labeltext = c(study, or, confint),\n             xlog = TRUE,\n             is.summary = summary,\n             new_page = T,\n             col = fpColors(box = \"royalblue\",\n                            line = \"darkblue\"),\n             txt_gp = fpTxtGp(cex = 0.8, label = gpar(fontfamily = \"serif\"), \n                              ticks=gpar(fontsize=5, cex=1.4)),\n             graph.pos = 2,\n             boxsize = 0.2,\n             graphwidth = unit(45, 'mm'),\n             title = \"Forest Plot of Mortality Rates\")\nforestplot(plot.data, labeltext = c(study, or, confint),\n             clip = c(0.5, 5),\n             xticks = c(0.5, 1, 2, 4, 8),\n             xlog = TRUE,\n             is.summary = summary,\n             new_page = T,\n             col = fpColors(box = \"royalblue\",\n                            line = \"darkblue\"),\n             txt_gp = fpTxtGp(cex = 0.8, label = gpar(fontfamily = \"serif\"), \n                              ticks=gpar(fontsize=5, cex=1.4)),\n             graph.pos = 2,\n             boxsize = 0.2,\n             graphwidth = unit(45, 'mm'),\n             title = \"Forest Plot of Mortality Rates\")"},{"path":"forest-plots.html","id":"understanding-forestplot-better","chapter":"27 Forest Plots","heading":"27.5 Understanding forestplot() better","text":"","code":""},{"path":"forest-plots.html","id":"references-4","chapter":"27 Forest Plots","heading":"27.6 References","text":"https://www.sciencedirect.com/topics/medicine--dentistry/forest-plothttps://en.wikipedia.org/wiki/Forest_plot","code":""},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"differences-between-some-packages-of-visualizaiton","chapter":"28 Differences between some packages of visualizaiton","heading":"28 Differences between some packages of visualizaiton","text":"Yudong Zhou Yanbo Wang","code":"\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyverse)\nlibrary(dygraphs)\nlibrary(leaflet)\nlibrary(ggfortify)\nlibrary(corrplot)\n# require(devtools)\n# install_github('recharts', 'taiyun')\nlibrary(recharts) # must be installed from source"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"surface","chapter":"28 Differences between some packages of visualizaiton","heading":"28.1 – Surface","text":"Visualization important part R language. order facilitate users complete visualization operations, many developers concentrated visualization research developed variety practical packages..html file, Yudong Zhou Yanbo Wang complete descriptions summaries several visualization packages. Hope file may contribute lot students’ data-visualization learning process.Another purpose work proves early preparation final project. Yudong Yanbo believe kinds summaries examples help us quite lot final project, planning analyze visualize multivariate variables time series data.","code":""},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"ggplot2","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2 – ggplot2","text":"package, ggplot2, supposed famous commonly used visualization tool R language. now, believe students, enjoying going data visualization learning process, must quite familiar basic grammar completed several graphs useful package. Therefore, go much detail , instead, provide typical examples ggplot2 package.final project, ggplot2 going main tool demonstrate basic values variables relationships among .","code":""},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"basic-template-that-can-be-used-for-different-types-of-plots-ggplotdata-mapping-aes","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2.1 Basic template that can be used for different types of plots: ggplot(data = , mapping = aes()) + ()","text":"","code":""},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"scatterplot-2","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2.1.1 Scatterplot","text":"","code":"\nggplot(mpg, aes(cty, hwy)) +\n  geom_jitter(width = .5, size=1)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"jitter-plotline-plot","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2.2 Jitter Plot/Line Plot","text":"","code":"\nggplot(mpg, aes(cty, hwy)) +\n  geom_point() + \n  geom_smooth(method=\"lm\")"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"box-plot-1","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2.3 Box Plot","text":"","code":"\nggplot(mpg, aes(class, cty)) +\n geom_boxplot()"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"pie-chart","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2.3.1 Pie Chart","text":"","code":"\nggplot(mpg, aes(x = \"\", fill = factor(class))) + \n  geom_bar(width = 1) +\n  theme(axis.line = element_blank(), \n        plot.title = element_text(hjust=0.5)) +\n  coord_polar(theta = \"y\", start=0)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"histogram-3","chapter":"28 Differences between some packages of visualizaiton","heading":"28.2.4 Histogram","text":"details ggplot2, can go check cheatsheets — https://github.com/rstudio/cheatsheets/blob/main/data-visualization-2.1.pdf","code":"\nggplot(mpg, aes(displ)) +\n  geom_histogram(aes(fill=class), bins = 10, col = \"grey\")"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"plotly","chapter":"28 Differences between some packages of visualizaiton","heading":"28.3 – plotly","text":"package, Plotly, pretty similar aforementioned ggplot2. However, compared ggplot2, plotly able generate interactive high-quality plots.final project, may use plotly produce interactive plots make outcomes much readable illustrative.next following two examples - interactive bar chart boxplot - two useful plots going include final project.","code":""},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"basic-bar-chart","chapter":"28 Differences between some packages of visualizaiton","heading":"28.3.1 Basic Bar Chart","text":"","code":"\ndata <- ggplot2::diamonds %>% count(cut, clarity)\ndata %>% plot_ly(x = ~cut, y = ~n, color = ~clarity)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"interactive-boxplot","chapter":"28 Differences between some packages of visualizaiton","heading":"28.3.2 Interactive boxplot","text":"information plotly R, can check Plotly R Open Source Graphing Library — https://plotly.com/r/","code":"\nplot_ly(diamonds, y = ~price) %>% add_boxplot(x = ~cut)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"dygraphs","chapter":"28 Differences between some packages of visualizaiton","heading":"28.4 – dygraphs","text":"Like plotly, dygraphs also able draw interactive plots using dygraphs Javascripts charting library. One thing makes package stand dygraphs profoundly facilitates us complete time series data visualization analysis.final project, data going analyze closely related imports exports. special attribute natually makes data become time series data. doubt dygraphs definitely helpful us complete time series analysis.","code":"\ndygraph(cbind(mdeaths, fdeaths)) %>%\n  dySeries(\"mdeaths\", label = \"Male\") %>%\n  dySeries(\"fdeaths\", label = \"Female\") %>%\n  dyRangeSelector(height = 20)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"leaflet","chapter":"28 Differences between some packages of visualizaiton","heading":"28.5 – leaflet","text":", leaflet also practical package can gives birth interactive graph. case, leaflet specially designed interactive maps.leaflet package seems special unique property function. may use geographically analyze import export data.","code":"\nleaflet() %>%\n  addTiles() %>%\n  addMarkers(lat=40.8075, lng=-73.9626, popup=\"The location of Columbia University\")"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"ggfortify","chapter":"28 Differences between some packages of visualizaiton","heading":"28.6 – ggfortify","text":"ggfortify extends ggplot2 plotting popular R packages using standardized approach.Moreover, package gives us practical methods specifically complete variable relationship analysis building models.","code":""},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"heatmap-4","chapter":"28 Differences between some packages of visualizaiton","heading":"28.6.1 Heatmap","text":"","code":"\ndf <- mtcars[, c(\"mpg\", \"disp\", \"hp\", \"drat\", \"wt\")]\ndf <- as.matrix(df)\n\n# Heatmap\nautoplot(scale(df))"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"scatterplot-3","chapter":"28 Differences between some packages of visualizaiton","heading":"28.6.2 Scatterplot","text":"","code":"\n# Extract the data\ndf2 <- df[, c(\"wt\", \"mpg\")]\ncolnames(df2) <- c(\"V1\", \"V2\")\n# Scatter plot\nautoplot(df2, geom = 'point') +\n  labs(x = \"mpg\", y = \"wt\")"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"diagnostic-plots-for-linear-models-lm","chapter":"28 Differences between some packages of visualizaiton","heading":"28.6.3 Diagnostic plots for Linear Models (LM)","text":"","code":"\n# Compute a linear model\nm <- lm(Petal.Width ~ Petal.Length, data = iris)\n# Create the plot\nautoplot(m, which = 1:6, ncol = 2, label.size = 3)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"diagnostic-plots-with-generalized-linear-models-glm","chapter":"28 Differences between some packages of visualizaiton","heading":"28.6.4 Diagnostic plots with Generalized Linear Models (GLM)","text":"","code":"\n# Compute a generalized linear model\nm <- glm(Murder ~ Assault + UrbanPop + Rape,\n         family = gaussian, data = USArrests)\n# Create the plot\n# Change the theme and colour\nautoplot(m, which = 1:6, ncol = 2, label.size = 3,\n         colour = \"steelblue\") + theme_bw()"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"plotting-time-series","chapter":"28 Differences between some packages of visualizaiton","heading":"28.6.5 Plotting time series","text":"","code":"\nautoplot(AirPassengers)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"corrplot","chapter":"28 Differences between some packages of visualizaiton","heading":"28.7 – corrplot","text":"R package corrplot provides visual exploratory tool correlation matrix supports automatic variable reordering help detect hidden patterns among variables.","code":"\nM = cor(mtcars)\ncorrplot(M, method = 'number') # colorful number"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"change-the-order-by-alphabet","chapter":"28 Differences between some packages of visualizaiton","heading":"28.7.1 Change the order by ‘alphabet’","text":"","code":"\ncorrplot(M, method = 'color', order = 'alphabet')"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"change-the-method-by-shade","chapter":"28 Differences between some packages of visualizaiton","heading":"28.7.2 Change the method by ‘shade’","text":"","code":"\ncorrplot(M, method = 'shade', order = 'alphabet')"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"recharts","chapter":"28 Differences between some packages of visualizaiton","heading":"28.8 – recharts","text":"R package recharts provides interface JavaScript library ECharts data visualization. goal package make easy create charts lines R code.","code":"\niris$Species <- as.character(iris$Species)\nePoints(iris, ~Sepal.Length, ~Sepal.Width, series = ~Species)"},{"path":"differences-between-some-packages-of-visualizaiton.html","id":"summary","chapter":"28 Differences between some packages of visualizaiton","heading":"28.9 – Summary","text":"file, considering nature final project data, Yudong Zhou Yanbo Wang mainly completed enumeration simple examples visualization tools may involved. use fully reasonably final project complete import export data relationship analysis visualization.","code":""},{"path":"lecture-helper.html","id":"lecture-helper","chapter":"29 Lecture Helper","heading":"29 Lecture Helper","text":"Tianyu YaoThis r package can download install order help student STAT 5293: Statistical Graphics search, browse locate related materials quickly efficiently.","code":""},{"path":"lecture-helper.html","id":"motivation-3","chapter":"29 Lecture Helper","heading":"29.1 Motivation","text":"initial motivation build package encapsulate lecture notes build library inside R reference. way, students can quickly check potential slides contains function notions need finish tasks.","code":""},{"path":"lecture-helper.html","id":"how-it-works","chapter":"29 Lecture Helper","heading":"29.2 How it works","text":"package provide function can search library located specific texts, return relevant lectures potential pages appeared.","code":""},{"path":"lecture-helper.html","id":"challenge","chapter":"29 Lecture Helper","heading":"29.3 Challenge","text":"package heavily rely another R package, pdfsearch. search function can correctly identify pdf documents contain texts, perform badly retrieving page information.","code":""},{"path":"lecture-helper.html","id":"example","chapter":"29 Lecture Helper","heading":"29.4 Example","text":"example image","code":""},{"path":"lecture-helper.html","id":"download","chapter":"29 Lecture Helper","heading":"29.5 Download","text":"Run code download","code":"devtools::install_github(\"ytyky/LectureHelper\")"},{"path":"lecture-helper.html","id":"copyright","chapter":"29 Lecture Helper","heading":"29.6 Copyright","text":"lecture notes created, distributed fully owned Professor Joyce Robbins. can find online book hereThe function based R package pdfsearchThe LectureHelper package published repo","code":""},{"path":"basic-introduction-to-tidyverse.html","id":"basic-introduction-to-tidyverse","chapter":"30 Basic introduction to tidyverse","heading":"30 Basic introduction to tidyverse","text":"Xiaoyuan Ge Hui Li","code":"\nlibrary(ggplot2)\nlibrary(dplyr)"},{"path":"basic-introduction-to-tidyverse.html","id":"motivation-4","chapter":"30 Basic introduction to tidyverse","heading":"30.1 Motivation","text":"data science, good visualizations give provide information can just see data . Good visualizations give us direct clear sense going . However, bad data sometimes even worsen situation make us confused data hand.additional cheatsheet separate file. link :\nhttps://github.com/xiaoyuan1129/cc22spring/blob/main/resources/basic_introduction_to_%20tidyverse_cheatsheet.pdfAnd following mainly use “Tidyverse” R. focus data visualization ggplot2 data transformation dplyr. Since many included inside Tidyverse package, package help people transform data plot data. also 2 main goals want showed cheat sheet. firstly, class named data visualization mostly learned plotting different dataset different properties. Also, different situation needs, sometimes need plot varies plots combined accordingly explanation. Thus plotting accordingly based data set help us better see explain understanding data.R several packages faciliate us making different plots graphs, “ggplot2” one widely-used flexible one people use lot practice. Let’s starting using mtcars","code":""},{"path":"basic-introduction-to-tidyverse.html","id":"data-visualization-1","chapter":"30 Basic introduction to tidyverse","heading":"30.2 Data visualization","text":"","code":""},{"path":"basic-introduction-to-tidyverse.html","id":"scatterplot-4","chapter":"30 Basic introduction to tidyverse","heading":"30.2.1 Scatterplot","text":"plotting scatter plot, see relationship hwy cyl, however, additional information provided us based graph. 2 variables included , can add third one use color classify .Colors different dots help us form comprehensive acknowledge first graph . clear insight knowing different classes. However, used letting know constitution class negative relationship. used discrete variables. comes continuous variables, another way.map continuous variable mpg dataset, like cty, alpha,shape, size aesthetics. add categorical variables plots split facets.","code":"\ndim(mpg)## [1] 234  11\nhead(mpg,3)## # A tibble: 3 × 11\n##   manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n##   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n## 1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…\n## 2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…\n## 3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy))\nggplot(data = mpg) +\n  geom_point(mapping = aes(x=displ, y=hwy, color=class))\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy)) +\n  facet_wrap(~ class, nrow = 2)"},{"path":"basic-introduction-to-tidyverse.html","id":"bar-plot-1","chapter":"30 Basic introduction to tidyverse","heading":"30.2.2 Bar plot","text":"use bar plot categorical data, plotted 2 kinds bar plot . Stacked Bar chart help us observe count values across two categorical variables.advantage bar plot Show data category frequency distribution,Display relative numbers/proportions multiple categories,Summarize large amount data visual, easily intepretable form,Make trends easier highlight tables . However, main disadvantages bar chart : show sufficient detail enable timely detection schedule slippages. bar chart show dependency relationships among activities.","code":"\nggplot(diamonds)+\n  geom_bar(aes(x=cut))\n upper <- diamonds$price > quantile(diamonds$price,probs = .7)\n diamonds$Expensive <- ifelse(upper,\"high\",\"not-high\")\n theme_update(plot.title = element_text(hjust = 0.5))\n ggplot(data=diamonds) +\n   geom_bar(aes(x=cut,fill=factor(Expensive)))+\n   theme_gray()+\n   labs(title = \"Bar chart\",fill=\"Price\",x=\"\")"},{"path":"basic-introduction-to-tidyverse.html","id":"histogram-4","chapter":"30 Basic introduction to tidyverse","heading":"30.2.3 Histogram","text":"histogram bar graph-like representation data buckets range outcomes columns along x-axis. y-axis represents number count percentage occurrences data column can used visualize data distributions.purpose histogram (Chambers) graphically summarize distribution univariate data set.main advantages histogram simplicity versatility. can used many different situations offer insightful look frequency distribution。","code":"\nx <- seq(-5,5,by=.01)\n hist_data <- data.frame(x.var=rnorm(1000))\nplot_data <- data.frame(x=x,f=dnorm(x))\n ggplot(hist_data)+\ngeom_histogram(mapping=aes(x=x.var,y=..density..),\n               col=\"blue\",fill=\"white\",binwidth=.2)+\ngeom_line(plot_data,mapping = aes(x = x, y = f),\n          col=\"black\")+\nlabs(title = \"Nomal Example\",x=\"x\",y=\"Density\")"},{"path":"basic-introduction-to-tidyverse.html","id":"data-transformation","chapter":"30 Basic introduction to tidyverse","heading":"30.3 Data transformation","text":"","code":""},{"path":"basic-introduction-to-tidyverse.html","id":"installation","chapter":"30 Basic introduction to tidyverse","heading":"30.3.1 Installation","text":"","code":"\n# The easiest way to get dplyr is to install the whole tidyverse:\n#install.packages(\"tidyverse\") - library(tidyverse)\n\n# Alternatively, install just dplyr:\n# install.packages(\"dplyr\")"},{"path":"basic-introduction-to-tidyverse.html","id":"usage-4","chapter":"30 Basic introduction to tidyverse","heading":"30.3.2 Usage","text":"","code":"\nhead(mpg,6)## # A tibble: 6 × 11\n##   manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n##   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n## 1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…\n## 2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…\n## 3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…\n## 4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…\n## 5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…\n## 6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…\n#Filter rows with filter(). filter() allows you to subset observations based on their values. The first argument is the name of the data frame. The second and subsequent arguments are the expressions that filter the data frame. For example, we can select all manufacturer in 2008 year with 4 cyl, 21 cty:\nfilter(mpg, year == 2008, cyl == 4, cty == 21)## # A tibble: 10 × 11\n##    manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n##    <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n##  1 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n##  2 honda        civic        2    2008     4 manu… f        21    29 p     subc…\n##  3 hyundai      sonata       2.4  2008     4 auto… f        21    30 r     mids…\n##  4 hyundai      sonata       2.4  2008     4 manu… f        21    31 r     mids…\n##  5 toyota       camry        2.4  2008     4 manu… f        21    31 r     mids…\n##  6 toyota       camry        2.4  2008     4 auto… f        21    31 r     mids…\n##  7 toyota       camry sol…   2.4  2008     4 manu… f        21    31 r     comp…\n##  8 volkswagen   gti          2    2008     4 manu… f        21    29 p     comp…\n##  9 volkswagen   jetta        2    2008     4 manu… f        21    29 p     comp…\n## 10 volkswagen   passat       2    2008     4 manu… f        21    29 p     mids…\n#Arrange rows with arrange().arrange() works similarly to filter() except that instead of selecting rows, it changes their order. It takes a data frame and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\ndata1 <- arrange(mpg, year, cyl, cty)\nhead(data1, 6)## # A tibble: 6 × 11\n##   manufacturer model       displ  year   cyl trans drv     cty   hwy fl    class\n##   <chr>        <chr>       <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n## 1 toyota       4runner 4wd   2.7  1999     4 manu… 4        15    20 r     suv  \n## 2 toyota       toyota tac…   2.7  1999     4 manu… 4        15    20 r     pick…\n## 3 audi         a4 quattro    1.8  1999     4 auto… 4        16    25 p     comp…\n## 4 toyota       4runner 4wd   2.7  1999     4 auto… 4        16    20 r     suv  \n## 5 toyota       toyota tac…   2.7  1999     4 auto… 4        16    20 r     pick…\n## 6 audi         a4            1.8  1999     4 auto… f        18    29 p     comp…\ndata2 <- arrange(mpg, desc(year))\nhead(data2, 6)## # A tibble: 6 × 11\n##   manufacturer model      displ  year   cyl trans  drv     cty   hwy fl    class\n##   <chr>        <chr>      <dbl> <int> <int> <chr>  <chr> <int> <int> <chr> <chr>\n## 1 audi         a4           2    2008     4 manua… f        20    31 p     comp…\n## 2 audi         a4           2    2008     4 auto(… f        21    30 p     comp…\n## 3 audi         a4           3.1  2008     6 auto(… f        18    27 p     comp…\n## 4 audi         a4 quattro   2    2008     4 manua… 4        20    28 p     comp…\n## 5 audi         a4 quattro   2    2008     4 auto(… 4        19    27 p     comp…\n## 6 audi         a4 quattro   3.1  2008     6 auto(… 4        17    25 p     comp…\n#Select columns with select(). It’s not uncommon to get datasets with hundreds or even thousands of variables. In this case, the first challenge is often narrowing in on the variables you’re actually interested in. select() allows you to rapidly zoom in on a useful subset using operations based on the names of the variables.\ndata3 <- select(mpg, drv, cty, hwy)\nhead(data3, 6)## # A tibble: 6 × 3\n##   drv     cty   hwy\n##   <chr> <int> <int>\n## 1 f        18    29\n## 2 f        21    29\n## 3 f        20    31\n## 4 f        21    30\n## 5 f        16    26\n## 6 f        18    26\n#Or, you can use as below:\ndata4 <- select(mpg, drv:hwy)\nhead(data4,6)## # A tibble: 6 × 3\n##   drv     cty   hwy\n##   <chr> <int> <int>\n## 1 f        18    29\n## 2 f        21    29\n## 3 f        20    31\n## 4 f        21    30\n## 5 f        16    26\n## 6 f        18    26\n## Select all columns except those from drv to hwy (inclusive)\ndata5 <- select(mpg,-(drv:hwy))\nhead(data5,6)## # A tibble: 6 × 8\n##   manufacturer model displ  year   cyl trans      fl    class  \n##   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <chr>  \n## 1 audi         a4      1.8  1999     4 auto(l5)   p     compact\n## 2 audi         a4      1.8  1999     4 manual(m5) p     compact\n## 3 audi         a4      2    2008     4 manual(m6) p     compact\n## 4 audi         a4      2    2008     4 auto(av)   p     compact\n## 5 audi         a4      2.8  1999     6 auto(l5)   p     compact\n## 6 audi         a4      2.8  1999     6 manual(m5) p     compact\n#Add new variables with mutate(). Besides selecting sets of existing columns, it’s often useful to add new columns that are functions of existing columns. That’s the job of mutate(). mutate() always adds new columns at the end of your dataset so we’ll start by creating a narrower dataset so we can see the new variables. \nmpg_sml <- select(mpg,\n                  manufacturer,\n                  model:year,\n                  cyl,\n                  drv:hwy)\ndata6 <- mutate(mpg_sml, net = hwy-cty)\nhead(data6, 6)## # A tibble: 6 × 9\n##   manufacturer model displ  year   cyl drv     cty   hwy   net\n##   <chr>        <chr> <dbl> <int> <int> <chr> <int> <int> <int>\n## 1 audi         a4      1.8  1999     4 f        18    29    11\n## 2 audi         a4      1.8  1999     4 f        21    29     8\n## 3 audi         a4      2    2008     4 f        20    31    11\n## 4 audi         a4      2    2008     4 f        21    30     9\n## 5 audi         a4      2.8  1999     6 f        16    26    10\n## 6 audi         a4      2.8  1999     6 f        18    26     8\n#Grouped summaries with summarise(). summarise() is not terribly useful unless we pair it with group_by(). This changes the unit of analysis from the complete dataset to individual groups. Then, when you use the dplyr verbs on a grouped data frame they’ll be automatically applied “by group”.\nsummarise(mpg, avg_year = mean(year, na.rm = TRUE))## # A tibble: 1 × 1\n##   avg_year\n##      <dbl>\n## 1    2004.\namount <- group_by(mpg, cty, hwy)\ndata7 <- summarise(amount, avg_year = mean(year, na.rm = TRUE))\nhead(data7, 6)## # A tibble: 6 × 3\n## # Groups:   cty [3]\n##     cty   hwy avg_year\n##   <int> <int>    <dbl>\n## 1     9    12    2008 \n## 2    11    14    2008 \n## 3    11    15    2000.\n## 4    11    16    1999 \n## 5    11    17    2001.\n## 6    12    16    2008\n#Ungrouping. If you need to remove grouping, and return to operations on ungrouped data, use ungroup().\nye <- group_by(mpg, year)\nye %>% \n  ungroup() %>%            \n  summarise(mpg = n())## # A tibble: 1 × 1\n##     mpg\n##   <int>\n## 1   234"},{"path":"class_material_code_throughout_this_semester.html","id":"class_material_code_throughout_this_semester","chapter":"31 class_material_code_throughout_this_semester","heading":"31 class_material_code_throughout_this_semester","text":"Weijia WangParameters:shape: changes shape points squares, triangles according category variablecolor: changes colors, specify types.size: changes size shapes?scale_fill_manual(values = c(“#ff99ff”, “#cc9966”)) # fill color bar chartspan: geom_smooth(method = “loess”, span = .1, se = FALSE)","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"continuous-variables-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.1 Continuous variables","text":"### Histograms\n1) base r: hist(x, col = “color”)\n2) ggplot2: geom_histogram(color = “blue”, fill = “lightblue”, binwidth = 5, center = 52.5) + theme_grey(14))### Bindwidth\n1) bin boundaries\nright closed (55, 60] right open [55, 60)\ncode: right = TRUE FALSE\nhist(x, right = FALSE, ylim = c(0, 4), xlab = “right open ex. [55, 60)”, font.lab = 2)\n2) set bin boundaries hand:\ncode: breaks = seq(start, stop, gap)\nhist(x, breaks = seq(47.5, 72.5, 5), col = “lightblue”, axes = FALSE)\n3) Frequency (count) histogram\nhist(prices, breaks = seq(300, 800, 100), col = “lightblue”, las = 1)\n4) Density histogram: freq = FALSE\nhist(prices, breaks = c(300, 400, 500, 600, 700, 800),\nfreq = FALSE, col = “lightblue”, ylab = ““,\nmain =”Density Histogram”, las = 1)\n5) Calculate: Density histogram unequal bin widths\ng2 <- ggplot(df, aes(x = center, y = percent/(100*binwidth),\nwidth = binwidth)) +\ngeom_col(color = “blue”, fill = “lightblue”) +\nylab(“density”) + xlab(“age”) +\nscale_x_continuous(breaks = c(0, df$breaks)) +\nggtitle(“Census 2000: Zip Code 10027”)\n6) Cumulative frequency histogram:\ngeom_histogram(aes(y = cumsum(..count..)), color = “blue”, fill = “lightblue”)\n7) Change bindwidth interactively: ggvis\ndf %>% ggvis(~GDP) %>%\nlayer_histograms(fill := “green”,\nwidth = input_slider(500, 10000,\nvalue = 5000,\nstep = 500,\nlabel = “width”))","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"boxplots-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.2 Boxplots","text":"### draw:\nggplot(tidySavings, aes(person, amount)) +\ngeom_boxplot()\n### Add number quantiles:\nboxplot(D, horizontal = TRUE, ylim=c(-250, 200))\ntext(fivenum(D)[c(1,3,5)], 1.25, round(fivenum(D)[c(1,3,5)],1), col = “red”)\ntext(fivenum(D)[c(2,4)], .75, round(fivenum(D),1)[c(2,4)], col = “red”)\n### Outliers:\nobservation 2.5 times lower hinge, outlier\n### Variable width boxplots:\ngeom_boxplot(varwidth = TRUE)\n### Multiple density histograms, ordered median\ngh <- ggplot(world, aes(x = TFR, y = ..density..)) +\ngeom_histogram(color = “blue”, fill = “lightblue”) +\nfacet_wrap(~reorder(CONTINENT, -TFR, median), nrow = 6, strip.position = “right”) +\ntheme(strip.placement = “outside”,\nstrip.background = element_blank(),\nstrip.text = element_text(face = “bold”))\n### Density curve\ngeom_density(color = “red”)\n### Violin plot\ngeom_violin(adjust = 6) # change bandwidth\n### Ridgeline plot\ngr <- ggplot(world, aes(x = GDP, y = reorder(CONTINENT, -GDP,\nmedian))) +\ngeom_density_ridges(fill = “blue”, alpha = .5)","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"chapter-6-rounding-noraml-distrubution","chapter":"31 class_material_code_throughout_this_semester","heading":"31.3 Chapter 6 Rounding noraml distrubution","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"q-q-plot","chapter":"31 class_material_code_throughout_this_semester","heading":"31.3.1 Q-Q plot","text":"","code":"3.1.1 What is a Q-Q plot?\nIf the line is not 45 degrees, then it is not normally distrubtted\n\n3.1.2 How to draw\nqqnorm(x)\n\n3.1.3 DIY Q-Q plot\n qx <- quantile(x) \n qn <- quantile(n)\n plot(qn, qx, pch = 16)\n mod <- lm(c(qx[2], qx[4])~c(qn[2], qn[4]))\n abline(mod, col = \"red\")\n "},{"path":"class_material_code_throughout_this_semester.html","id":"density-curve-noraml-curve","chapter":"31 class_material_code_throughout_this_semester","heading":"31.3.2 Density Curve + Noraml Curve","text":"","code":"3.2.1 How to draw\n      library(tidyverse)\n      df <- data.frame(x = rnorm(1000, 50, 10))\n      ggplot(df, aes(x)) + geom_histogram(aes(y = ..density..),\n                                          fill = \"lightblue\",\n                                          color = \"black\") +\n        geom_density(lwd = 1.5) +\n        stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = \"red\", lwd = 1.5)"},{"path":"class_material_code_throughout_this_semester.html","id":"shapiro-wilk-test","chapter":"31 class_material_code_throughout_this_semester","heading":"31.3.3 Shapiro Wilk test","text":"","code":"3.3.1 What is this\nNull hypothesis: data is normally distributed\nAlternative hypothesis: data is not normally distributed\n\n3.3.2 How \n> shapiro.test(x)\nif P-value is very small, then the null hypothesis could be rejected."},{"path":"class_material_code_throughout_this_semester.html","id":"chapter-7-grammar-of-graphics","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4 Chapter 7 Grammar of Graphics","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"layers","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.1 Layers","text":"","code":"    g <- ggplot() + geom_point(data = df1, aes(x,y)) +\n             geom_col(data = df2, aes(num, height),\n             fill = \"green\") + \n             geom_boxplot(data = df3, aes(1, score)) +\n             geom_line(data = df4, aes(time, dist),\n             color = \"red\")"},{"path":"class_material_code_throughout_this_semester.html","id":"coord","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.2 Coord","text":"","code":"g+coord_polar()"},{"path":"class_material_code_throughout_this_semester.html","id":"facet-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.3 Facet","text":"","code":"g + facet_grid(num~height)"},{"path":"class_material_code_throughout_this_semester.html","id":"theme","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.4 Theme","text":"","code":"g+theme_wsj()"},{"path":"class_material_code_throughout_this_semester.html","id":"mapping-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.5 Mapping","text":"","code":"aes(x = x, y = y, color = \"color\", fill = \"fill\")"},{"path":"class_material_code_throughout_this_semester.html","id":"scale","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.6 Scale","text":"","code":"    scale_x_reverse()\n    scale_x_date()\n    scale_y_continuous()\n    scale_color_manual()\n    scale_fill_viridis_c() \n    "},{"path":"class_material_code_throughout_this_semester.html","id":"code-style","chapter":"31 class_material_code_throughout_this_semester","heading":"31.4.7 Code style","text":"","code":"    ggplot (data =  <DATA> ) +  \n        <GEOM_FUNCTION> (mapping = aes( <MAPPINGS> ),  \n        stat = <STAT> , position = <POSITION> ) +      \n        <COORDINATE_FUNCTION> + \n        <FACET_FUNCTION>  + \n        <SCALE_FUNCTION>  + \n        <THEME_FUNCTION>"},{"path":"class_material_code_throughout_this_semester.html","id":"chapter-8-categorical-variables","chapter":"31 class_material_code_throughout_this_semester","heading":"31.5 Chapter 8 Categorical Variables","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"types-of-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.5.1 Types of data","text":"","code":"    nominal – no fixed category order\n    ordinal – fixed category order\n    (“real”) discrete, small # of possibilities\n    Not always clearcut: nominal vs. ordinal, ordinal vs. discrete, and...\n    Sometimes numbers = nominal, not discrete\n    \n    5.1.1 Ordinal data\n          Sort in logical order of the categories (left to right, starting at bottom or top, etc.)\n    5.1.2 Nominal data\n          Sort from highest to lowest count (left to right, or top to bottom, etc.)\n    \n    5.1.3 Discrete data\n          * Cleveland dot plot:\n            ggplot(africa, aes(x = GDP, y = fct_reorder(COUNTRY, GDP))) +\n              geom_point(color = \"blue\")\n            hint: Set x and y axis different: scales = \"free_y\", space = \"free_y\""},{"path":"class_material_code_throughout_this_semester.html","id":"plotting-categorical-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.5.2 Plotting Categorical data","text":"","code":"    5.2.1 Recoding factor levels: \n          \n          1) setting levels by hand:\n          levels(x) <- c(\"Physics\", \"Math\", \"Chemistry\")\n          \n          2) fct_recode: change names of levels\n          x <- factor(c(\"G234\", \"G452\", \"G136\"))  \n          y <- fct_recode(x, Physics = \"G234\", Math = \"G452\", Chemistry = \"G136\")  \n          \n          3) fct_inorder: set level order of x to row order\n          ggplot(df, aes(x = fct_inorder(temperature), y = count))\n          \n          4) fct_relevel: manually set the order of levels of x\n          x <- c(\"A\", \"B\", \"C\", \"move1\", \"D\", \"E\", \"move2\", \"F\")  \n          fct_relevel(x, \"move1\", \"move2\")\n          \n          5) fct_reorder: reorder x by y\n          ggplot(pack1, aes(fct_reorder(color, count), count)) +   \n          geom_col() \n          \n          6) fct_infreq: order the levels of x by decreasing frequency\n          ggplot(df, aes(fct_infreq(mmcolor))) +   \n          geom_bar() \n          \n          7) fct_rev: reverse the order of factor levels of x\n          ggplot(df, aes(fct_rev(fct_infreq(mmcolor)))) +   \n          geom_bar()\n          \n          8) fct_explicit_na: turn NAs into a real factor level\n          \n    5.2.2 Binning and rebinning data\n          df %>%   \n            group_by(Class) %>%   \n            summarize(Freq = sum(Freq)) %>%   \n            ggplot(aes(Class, Freq)) +   \n            geom_col(color = \"grey50\", fill = \"lightblue\") +  \n            theme_grey(16)\n          \n    5.2.3 Percentages\n          df %>%   \n            gro up_by(Class) %>%   \n            summarize(Freq = sum(Freq)) %>%   \n            mutate(prop = Freq/sum(Freq))\n    "},{"path":"class_material_code_throughout_this_semester.html","id":"chapter-10-tidying-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.6 Chapter 10 Tidying data","text":"Tidy: 1 variable per column, 1 observation per row","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"chapter-11-dependency-relationships","chapter":"31 class_material_code_throughout_this_semester","heading":"31.7 Chapter 11 Dependency relationships","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"interactive-plot","chapter":"31 class_material_code_throughout_this_semester","heading":"31.7.1 Interactive plot","text":"","code":"    1) ggplot\n    library(plotly)\n    ggplotly(g)\n    \n    2) base r\n    plot_ly(world, x = ~GDP, y = ~TFR, color = ~CONTINENT, text = ~COUNTRY, hoverinfo = 'text') "},{"path":"class_material_code_throughout_this_semester.html","id":"dealing-with-overplotting","chapter":"31 class_material_code_throughout_this_semester","heading":"31.7.2 Dealing with overplotting","text":"","code":"    7.2.1 Open circles:\n    geom_point(pch = 21)\n    \n    7.2.2 Alpha blending: \n    geom_point(alpha = .05, stroke = 0) \n    \n    7.2.3 Smaller dots:\n    size = .05\n    shape = \".\"\n    \n    7.2.4 Subset:\n    ggplot(binnedmovies, aes(votes, rating)) + \n    geom_point(alpha = .1) +\n      facet_wrap(~mybin, scales = \"free_x\")\n      \n    7.2.5 10% highest number:\n    bin10 <- binnedmovies %>% filter(mybin == 10)\n    ggplot(bin10, aes(votes, rating)) + geom_point()\n    "},{"path":"class_material_code_throughout_this_semester.html","id":"heatmap-5","chapter":"31 class_material_code_throughout_this_semester","heading":"31.7.3 Heatmap","text":"","code":"    7.3.1 Parameters:\n    bindwidth = c(10, 10) changes large or small of the shape\n    alpha - 0.4 changes color dark or light\n    size = 2 changes large or small of the dots\n    scale_fill_gradient(low = \"grey\", high = \"purple\") changes color\n   \n    7.3.2 Square heatmap:\n    g1 + geom_bin2d(binwidth = c(5, 5)) # no dots, dark color\n    g1 + geom_bin2d(binwidth = c(5, 5), alpha = .4) + geom_point(size = 2)\n    \n    7.3.3 Hex heatmap:\n    g1 + geom_hex(binwidth = c(5, 5)) \n "},{"path":"class_material_code_throughout_this_semester.html","id":"density-estimate-contour","chapter":"31 class_material_code_throughout_this_semester","heading":"31.7.4 Density estimate contour","text":"","code":"     g +  geom_density_2d(bins = 5)\n     \n     contour lines: \n     contour(f1, add = T)\n     g + geom_contour(aes(z = z))\n     "},{"path":"class_material_code_throughout_this_semester.html","id":"chapter-12-continuous-categorical","chapter":"31 class_material_code_throughout_this_semester","heading":"31.8 Chapter 12 Continuous + Categorical","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"graphiical-data-analysis-with-r","chapter":"31 class_material_code_throughout_this_semester","heading":"31.8.1 Graphiical data analysis with R","text":"","code":"   Examining Continuous Variables\n   Displaying Categorical Data\n   Looking for Structure: Dependency Relationships and Associations\n   Combining Continuous and Categorical Data\n   Investingating Multivariate Continuous Data\n   Studying Multivariate Categorical Data\n   "},{"path":"class_material_code_throughout_this_semester.html","id":"factes","chapter":"31 class_material_code_throughout_this_semester","heading":"31.8.2 Factes","text":"facet_wrap(~categorical variable, scales = “free_x”) “free_x” means x axises ","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"mapping-options","chapter":"31 class_material_code_throughout_this_semester","heading":"31.8.3 Mapping options","text":"Continuous: x-axis, y-axis, color (great), size (great)\nCategorical: color, facets (rows, columns), shape (maybe)","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"parallel-coordinates-multivariate-continuous-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.9 Parallel Coordinates (Multivariate continuous data)","text":"9.1 3D scatterplot\n3D scatterplot:\nlibrary(scatterplot3d)\nscatterplot3d(df\\(x, df\\)y, df$z, pch = 16, color = “blue”)interactive 3D:\nlibrary(plotly)\nplot_ly(df, x = ~x, y = ~y, z = ~z, mode = “markers”,\nmarker = list(size = 4)) %>% add_markers()","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"slope-graph-ggplot2geom_line","chapter":"31 class_material_code_throughout_this_semester","heading":"31.9.1 Slope graph: ggplot2::geom_line()","text":"ggplot(tidydf, aes(x = var, y = value, group = ID)) +\ngeom_line()","code":"   9.2.1 Standardize data\n         mutate(value = standardize(value)) %>% ungroup()\n   9.2.2 Rescale data to [0,1]\n         mutate(value = scales::rescale(value)) \n   9.2.3 Parameters: GGally::ggparcoord() (static, ggplot2)\n         1. Scale: ggparcoord(mystates, columns = 2:9, scale = \" \")\n            1) scale = \"globalminmax\"\n            2) scale = “std” (default)\n            3) scale = \"uniminmax\"\n         \n         2. Reorder:\n            ggparcoord(mystates, columns = c(2, 4, 6, 8, 3, 5, 7, 9))\n         \n         3. alpha: changes color light or dark\n         \n         4. vline: add vertical lines\n            geom_vline(xintercept = 1:4, color = \"lightblue\")\n            \n         5. splines: make lines softer\n            gparcoord(df, columns = 1:4, scale = \"globalminmax\",  \n            splineFactor = 10) \n         \n         6. group: add color to different groups\n            ggparcoord(mystates, columns = 2:9, groupColumn = 10)\n         \n         7. parcoords:\n         MASS:: parcoord() (static, base)\n         parcoords::parcoords() (interactive)  \n         \n            # See: http://www.buildingwidgets.com/blog/2015/1/30/week-04-interactive-parallel-coordinates-1 \n            # devtools::install_github(\"timelyportfolio/parcoords\")  \n            library(parcoords)  \n            mystates  %>% arrange(Region) %>%  \n              parcoords(  \n                rownames = F   \n                , brushMode = \"1D-axes\"  \n                , reorderable = T  \n                , queue = T  \n                , alpha = .5\n                )  \n                \n         8. color:\n             parcoords(mystates  \n                , rownames = F   \n                , brushMode = \"1D-axes\"  \n                , reorderable = T  \n                , queue = T  \n                , color = list(  \n                  colorBy = \"Region\"  \n                  ,colorScale = \"scaleOrdinal\"  \n                  ,colorScheme = \"schemeCategory10\"  \n                  )  \n                , withD3 = TRUE  \n                )    \n            \n         9. highlighting a tred: Murder>11 is highlighted here:\n         mystates <- mystates %>%  \n             mutate(color = factor(ifelse(Murder > 11, 1, 0))) %>%   \n             arrange(color)  \n         ggparcoord(mystates, columns = 2:9, groupColumn = \"color\") + \n             scale_color_manual(values = c(\"grey70\", \"red\")) +\n             coord_flip() + guides(color = FALSE) +  \n             ggtitle(\"States with Murder Rate > 11 (per 100000) in red\")"},{"path":"class_material_code_throughout_this_semester.html","id":"biplots-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.10 Biplots","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"principal-components-analysis","chapter":"31 class_material_code_throughout_this_semester","heading":"31.10.1 Principal components analysis","text":"","code":"     pca <- prcomp(ratings[,2:7], scale. = TRUE)"},{"path":"class_material_code_throughout_this_semester.html","id":"biplot-3","chapter":"31 class_material_code_throughout_this_semester","heading":"31.10.2 Biplot","text":"","code":"     1) ggplot\n     ggplot(df_pca, aes(PC1, PC2, label = country)) +\n     geom_point() +\n     geom_text(nudge_y = .2) +\n     coord_fixed()\n     \n     2) base r\n     draw_biplot(ratings, \"living_standard\")"},{"path":"class_material_code_throughout_this_semester.html","id":"scatterplot-of-scaled-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.10.3 Scatterplot of scaled data","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"multivariate-categorical-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.11 Multivariate Categorical data","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"stacked-bar-chart-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.11.1 Stacked bar chart","text":"","code":"ggplot(cases, aes(x = Age, fill = Favorite)) + \n  geom_bar() + \n  scale_fill_manual(values = c(\"#ff99ff\", \"#cc9966\"))"},{"path":"class_material_code_throughout_this_semester.html","id":"group-bar-chart","chapter":"31 class_material_code_throughout_this_semester","heading":"31.11.2 Group bar chart","text":"","code":"ggplot(cases, aes(x = Age, fill = Favorite)) +\n  geom_bar(position = \"dodge\") +"},{"path":"class_material_code_throughout_this_semester.html","id":"cleveland-dot-plot-3","chapter":"31 class_material_code_throughout_this_semester","heading":"31.11.3 Cleveland dot plot","text":"","code":"1) Setting theme\n   theme_dotplot <-\n     theme_bw(16) +\n     theme(axis.ticks.y = element_blank(), panel.grid.major.x = element_blank(),\n           panel.grid.major.y = element_line(size = 0.5), panel.grid.minor.x = element_blank())\n2) geom_point"},{"path":"class_material_code_throughout_this_semester.html","id":"mosaic-plot-3","chapter":"31 class_material_code_throughout_this_semester","heading":"31.11.4 Mosaic plot","text":"","code":"1) two variables\n   library(vcd)\n   tidyexp$Group <- fct_rev(tidyexp$Group)\n   mosaic(Group ~ Age, direction = c(\"v\", \"h\"), tidyexp,\n          highlighting_fill = c(\"grey80\", \"cornflowerblue\"))\n2) three variables\n   vcd::mosaic(Favorite ~ Music + Age, counts3,\n   direction = c(\"v\", \"v\", \"h\"), # <- order: Music (\"v\"), Age (\"v\"), Favorite (\"h\")\n   highlighting_fill = icecreamcolors)\n   \n3) Mosaic pairs plot\n   pairs(table(cases[,2:4]), highlighting = 2)\n   \n4) Mosaic mobility plot\n   UKmob$mob <- factor(UKmob$mob, levels = 4:-4)\n   UKmob$Father <- factor(UKmob$Father, levels = levels(Yamaguchi87$Father))\n   vcd::mosaic(mob ~ Father, UKmob, \n               direction = c(\"v\", \"h\"),\n               tl_labels = c(FALSE, TRUE),  # move labels to bottom  \n               rot_labels = c(0,0,0,0),   # all horizontal\n               highlighting_fill = fills9,\n               main = \"Downward mobility\")\n 5) Change of names:\n    library(vcd)\n    library(vcdExtra)\n    library(tidyverse)\n    \n    foodorder <- Alligator %>% group_by(food) %>% summarize(Freq = sum(count)) %>% \n      arrange(Freq) %>% pull(food)\n    \n    ally <- Alligator %>% \n      rename(Freq = count) %>% \n      mutate(size = fct_relevel(size, \"small\"),\n             food = factor(food, levels = foodorder),\n             food = fct_relevel(food, \"other\"))\n    \n    vcd::mosaic(food ~ sex + size, ally,\n           direction = c(\"v\", \"v\", \"h\"),\n           highlighting_fill= RColorBrewer::brewer.pal(5, \"Accent\"))\n  \n  6) Treemap\n     library(treemap)\n     # example from ?treemap\n     data(GNI2014)\n     treemap::treemap(GNI2014,\n            index=c(\"continent\", \"iso3\"),\n            vSize=\"population\",\n            vColor=\"GNI\",\n            type=\"value\",\n            format.legend = list(scientific = FALSE, big.mark = \" \"))\n   \n   7) Spine plot:  mosaic plot with straight, parallel cuts in one dimension (“spines”) and only one variable cutting in the other direction\n      vcd::mosaic(food ~ sex + size, ally,\n      direction = c(\"v\", \"v\", \"h\"),\n      highlighting_fill= RColorBrewer::brewer.pal(5, \"Accent\"))\n   \n   8) ggplot\n      fillcolors <- brewer.pal(3, \"Blues\")\n      h <- housing %>% group_by(Type, Infl, Cont) %>% \n        mutate(RelFreq = Freq/sum(Freq)) %>% ungroup()\n      ggplot(h, aes(x = Infl, y = RelFreq, fill = Sat)) +\n        geom_col() +\n        facet_grid(Cont ~ Type) +\n        scale_fill_manual(values = fillcolors) +\n     theme_classic()"},{"path":"class_material_code_throughout_this_semester.html","id":"chi-square-test-of-independence","chapter":"31 class_material_code_throughout_this_semester","heading":"31.11.5 Chi-square test of independence","text":"","code":"   x<- chisq.test(matrix, correct = F)\n   x$observed\n   x$expected\n   x"},{"path":"class_material_code_throughout_this_semester.html","id":"alluvial-form","chapter":"31 class_material_code_throughout_this_semester","heading":"31.12 Alluvial form","text":"","code":"1) Structure: stratum, load, alluvium\n2) Basic code:\n   library(ggalluvial)\n   ggplot(df, aes(axis1 = Class1, axis2 = Class2, y = Freq)) +\n     geom_alluvium(color = \"black\") +\n     geom_stratum() +\n     geom_text(stat = \"stratum\", aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count)))) +\n     scale_x_discrete(limits = c(\"Class1\", \"Class2\"))\n3) Separate code:\n   3.1) Strata only:\n        ggplot(df, aes(axis1 = Class1, axis2 = Class2, y = Freq)) +\n        #  geom_alluvium(color = \"black\") +\n          geom_stratum() +\n          geom_text(stat = \"stratum\", aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count)))) +\n          scale_x_discrete(limits = c(\"Class1\", \"Class2\"))\n   3.2) Alluvia only:\n         ggplot(df, aes(axis1 = Class1, axis2 = Class2, y = Freq)) +\n           geom_alluvium(color = \"black\") +\n         #  geom_stratum() +\n         #  geom_text(stat = \"stratum\", aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count)))) +\n           scale_x_discrete(limits = c(\"Class1\", \"Class2\"))\n4) geom_flow:\n    df2 <- data.frame(Class1 = c(\"Stats\", \"Math\", \"Stats\", \"Math\", \"Stats\", \"Math\", \"Stats\", \"Math\"),\n              Class2 = c(\"French\", \"French\", \"Art\", \"Art\", \"French\", \"French\", \"Art\", \"Art\"),\n              Class3 = c(\"Gym\", \"Gym\", \"Gym\", \"Gym\", \"Lunch\", \"Lunch\", \"Lunch\", \"Lunch\"),\n              Freq = c(20, 3, 40, 5, 10, 2, 5, 15))\n    ggplot(df2, aes(axis1 = Class1, axis2 = Class2, axis3 = Class3, y = Freq)) +\n      geom_flow(color = \"black\") +\n      geom_stratum() +\n      geom_text(stat = \"stratum\", aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count)))) +\n      scale_x_discrete(limits = c(\"Class1\", \"Class2\", \"Class3\"))\n5) color by first variable:\n    library(vcdExtra)\n    ggplot(Yamaguchi87, aes(y = Freq, axis1 = Father, axis2 = Son)) +\n      geom_flow(aes(fill = Father), width = 1/12) +\n      geom_stratum(width = 1/12, fill = \"grey80\", color = \"black\") +\n      geom_label(stat = \"stratum\", aes(label = after_stat(stratum))) +\n      scale_x_discrete(limit = c(\"Father\", \"Son\"), expand = c(.05, .05)) +\n      scale_y_continuous(expand = c(.01, 0)) +\n      guides(fill = FALSE) +\n      theme_classic()"},{"path":"class_material_code_throughout_this_semester.html","id":"color","chapter":"31 class_material_code_throughout_this_semester","heading":"31.13 Color","text":"Continuous data:\n+scale_color_viridis_c() fill\nrecolorbrewer:\nscale_color_distiller(palette = “PuBu”)\nreverse palette order direction = 1Continuous data:\n+scale_color_viridis_c() fillrecolorbrewer:scale_color_distiller(palette = “PuBu”)reverse palette order direction = 1Continuous data:\nCreate sequential: +scale_color_gradient(low = “white”, high = “red”)\nCreate diverging: +scale_color_gradient2(low = “blue”, mid = “white”, high = “red”)Continuous data:\nCreate sequential: +scale_color_gradient(low = “white”, high = “red”)\nCreate diverging: +scale_color_gradient2(low = “blue”, mid = “white”, high = “red”)Discrete data:\n+scale_color_viridis_d()\nrecolor brewer:\n+scale_color_brewer(palette = “PuBu”)\nCreate :\n+scale_color_manual(values = c(“red”, “yellow”, “blue”)Discrete data:\n+scale_color_viridis_d()recolor brewer:\n+scale_color_brewer(palette = “PuBu”)Create :\n+scale_color_manual(values = c(“red”, “yellow”, “blue”)","code":"4) Discrete ordinal data:\n   library(RColorBrewer)\n   colors<- brewer.pal(4, \"Reds)\n   barplot(1:4, col = colors)"},{"path":"class_material_code_throughout_this_semester.html","id":"time-series-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14 Time Series","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"multiple-time-series-line","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.1 Multiple time series: line","text":"","code":"    df <- df %>% gather(key = TYPE, value = RATE, -DATE) %>%\n      mutate(TYPE = forcats::fct_reorder2(TYPE, DATE, RATE))# puts legend incorrect order"},{"path":"class_material_code_throughout_this_semester.html","id":"filling","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.2 filling:","text":"","code":"    ggplot(df, aes(DATE, RATE, fill = TYPE)) \n    "},{"path":"class_material_code_throughout_this_semester.html","id":"plot-1","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.3 plot:","text":"","code":"    plot()\n    monthplot()\n    "},{"path":"class_material_code_throughout_this_semester.html","id":"label-by-day-of-week","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.4 label by day of week","text":"","code":"      ggplot(christmas, aes(Date, Gross)) +\n       geom_label(aes(label = wday(Date, label = TRUE)))\n    label by day of month \n      geom_label(data = christmas, \n       aes(x = Date, y = Gross/1000000 + .06, \n           label = day(Date)))\n  "},{"path":"class_material_code_throughout_this_semester.html","id":"highlight-the-abnormality","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.5 Highlight the abnormality","text":"","code":"      g + annotate(\"rect\", xmin = start, xmax = end,\n               ymin = -Inf, ymax = Inf, fill = \"green\",\n               alpha = .2) +\n      annotate(\"text\", x = end + 2,\n               y = 1500000, label = \"Dec 24 - Jan 2\",\n               color = \"green\", hjust = 0)\n  "},{"path":"class_material_code_throughout_this_semester.html","id":"scale-the-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.6 Scale the data","text":"","code":"      mutate(index = round(100*value/value[1], 2)) \n "},{"path":"class_material_code_throughout_this_semester.html","id":"gaps","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.7 Gaps","text":"","code":"      mydat$Date <- as.Date(paste0(mydat$Year, \"-\", as.character(mydat$Q*3), \"-30\"))\n      scale_x_date(limits = c(as.Date(\"2012-02-01\"), as.Date(\"2014-12-31\")), date_breaks = \"6 months\", date_labels = \"%b %Y\")\n  "},{"path":"class_material_code_throughout_this_semester.html","id":"leave-gaps","chapter":"31 class_material_code_throughout_this_semester","heading":"31.14.8 Leave gaps","text":"","code":"       geom_path(aes(group = `Order method type`)) +\n       scale_x_date(limits = c(as.Date(\"2012-02-01\"), as.Date(\"2014-12-31\")),\n           date_breaks = \"6 months\", date_labels = \"%b %Y\") \n  \n  "},{"path":"class_material_code_throughout_this_semester.html","id":"dates","chapter":"31 class_material_code_throughout_this_semester","heading":"31.15 Dates","text":"","code":""},{"path":"class_material_code_throughout_this_semester.html","id":"convert-to-date-class","chapter":"31 class_material_code_throughout_this_semester","heading":"31.15.1 Convert to date class","text":"","code":"     1) Convert\n        date<- as.Date(character)\n        # class(date) >> Date\n     2) Specifying the format\n        as.Date(\"Thursday, January 6, 2005\", format = \"%A, %B %d, %Y\")\n        ## \"2005-01-06\"\n     3) Parse_date\n        as.Date(\"1/12/2019\", format=\"%m/%d/%y\")\n        ## \"2020-01-12\"\n        readr::parse_date(\"1/12/2019\", format=\"%m/%d/%y\")\n        ## NA\n       \n        as.Date(\"Thursday, January 6, 2005\", format = \"%A, %B %d, %Y\")\n        ## \"2005-01-06\"\n        readr::parse_date(\"Thursday, January 6, 2005\", format = \"%A, %B %d, %Y\")\n        ## Error: Invalid %A auto parser"},{"path":"class_material_code_throughout_this_semester.html","id":"lubridate-ymd-ydm-mdy-myd-dmy-dym","chapter":"31 class_material_code_throughout_this_semester","heading":"31.15.2 Lubridate: ymd(), ydm(), mdy(), myd(), dmy(), dym()","text":"","code":"     1) mdy\n        lubridate::mdy(\"April 13, 1907\")\n        ## \"1907-04-13\"\n     2) as.Date\n        as.Date(\"2017-11-02\") - as.Date(\"2017-01-01\")\n        ## Time difference of 305 days\n     3) Sys.Date()\n        ## \"2021-10-25\"\n        class(Sys.Date())\n        ## \"Date\"\n     4) today <- Sys.Date()\n        lubridate::year(today)\n        ## 2021\n        \n        lubridate::yday(today)\n        ## 298\n        \n        lubridate::month(today, label = TRUE)\n        ## Oct\n        ## 12 Levels: Jan < Feb < Mar < Apr < May < Jun < Jul < Aug < Sep < ... < Dec  \n        "},{"path":"class_material_code_throughout_this_semester.html","id":"base-r-functions","chapter":"31 class_material_code_throughout_this_semester","heading":"31.15.3 Base R functions","text":"","code":"     1) today <- Sys.Date()\n        weekdays(today, abbreviate = TRUE)\n        ## \"Mon\n     2) months(today, abbreviate = TRUE)\n        ## \"Oct\"\n     3) quarters(today)\n        ## \"Q4\"\n     "},{"path":"class_material_code_throughout_this_semester.html","id":"missing-data","chapter":"31 class_material_code_throughout_this_semester","heading":"31.16 Missing data","text":"Missing values column\ncolSums(.na(mycars)) %>%\nsort(decreasing = TRUE)Missing values column\ncolSums(.na(mycars)) %>%\nsort(decreasing = TRUE)Missing values row\nrowSums(.na(mycars)) %>%\nsort(decreasing = TRUE)Missing values row\nrowSums(.na(mycars)) %>%\nsort(decreasing = TRUE)Plotting missing data\nggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing))Plotting missing data\nggplot(tidycars, aes(x = key, y = fct_rev(id), fill = missing))Heatmap\nmissing_data.frame(mycars)Heatmap\nmissing_data.frame(mycars)Missing values variable\nggplot(tidycars, aes(x = key, y = fct_rev(id), fill = value)) +\ngeom_tile(color = “white”) +\nscale_fill_gradient(low = “grey80”, high = “red”, na.value = “black”)Missing values variable\nggplot(tidycars, aes(x = key, y = fct_rev(id), fill = value)) +\ngeom_tile(color = “white”) +\nscale_fill_gradient(low = “grey80”, high = “red”, na.value = “black”)Missing values variable\nmi::missing_data.frame(mycars)Missing values variable\nmi::missing_data.frame(mycars)Aggregate missing patterns\nplot_missing(mycars, percent = FALSE)Aggregate missing patterns\nplot_missing(mycars, percent = FALSE)Number missing day month\n· add day week info\nmissing <- missing %>%\nmutate(dayofweek = weekdays(.Date(key),\nabbreviate = FALSE))\n· correct day order\ndaysinorder <- c(“Monday”, “Tuesday”, “Wednesday”,\n“Thursday”, “Friday”, “Saturday”,\n“Sunday”)\n· reorder dayofweek\nmissing\\(dayofweek <- factor(missing\\)dayofweek,\nlevels = daysinorder)\n· choose colors\ndaycolors <- c(rep(“#cbc9e2”, 5), rep(“#2b8cbe”, 2))\n· plot missing values day, weekday/weekend colors\nggplot(missing, aes(x = key, y = sum.na, fill = dayofweek)) +\ngeom_col() +\nggtitle(“Number missing values day”) +\nscale_fill_manual(values = daycolors) +\nxlab(““) +\nylab(”Number missing station values (349)“) +\ntheme_classic() +\ntheme(axis.text.x = element_text(angle = 90))Number missing day month\n· add day week info\nmissing <- missing %>%\nmutate(dayofweek = weekdays(.Date(key),\nabbreviate = FALSE))\n· correct day order\ndaysinorder <- c(“Monday”, “Tuesday”, “Wednesday”,\n“Thursday”, “Friday”, “Saturday”,\n“Sunday”)· reorder dayofweek\nmissing\\(dayofweek <- factor(missing\\)dayofweek,\nlevels = daysinorder)\n· choose colors\ndaycolors <- c(rep(“#cbc9e2”, 5), rep(“#2b8cbe”, 2))· plot missing values day, weekday/weekend colors\nggplot(missing, aes(x = key, y = sum.na, fill = dayofweek)) +\ngeom_col() +\nggtitle(“Number missing values day”) +\nscale_fill_manual(values = daycolors) +\nxlab(““) +\nylab(”Number missing station values (349)“) +\ntheme_classic() +\ntheme(axis.text.x = element_text(angle = 90))","code":""},{"path":"calendar-heat-map-tutorial.html","id":"calendar-heat-map-tutorial","chapter":"32 Calendar heat map tutorial","heading":"32 Calendar heat map tutorial","text":"Eva DaiHi ! want share way creating calendar heat map multiple years. Calendar heat map calendar uses colored cells show relative number variable. final project group focused waiting time rides Disney World. Since data highly related time, find calendar heat map can good way representing data multiple years. calendar heat map tutorial, show plot two types calendar heat maps, one data multiple years one single year.. Data processing: date transformation\noriginal data set comes touringplans.com, ride “Soarin’”. data large 274770 rows. values waiting time scattered two columns. first clean merge two columns. choose “datetime” represents date time, “SPOSTMIN” represents waiting time documented. order learn tutorial, start transforming time values accurate seconds, “datetime” column selected.date information get data file accurate just date, need first transform \ncan use zoo package easily transform date formatThen need calculate daily average waiting time order make calendar heatmap.create calendar heatmap, need first create variables weekday, year, month, week, week month. use “lubridate” package helps calculate day os week date data frame.wday() calculates weekday given date. label=TRUE, output verbal format, “Sun”, “Mon”, etc. Otherwise, number weekday 1 7 calculatedSimilarly, year() calculates year date month() calculates month date.strftime() converts date week number. format=“%V”, week year 1-53 given Monday start week. Since use Sunday start week, need add 1 functionSince hard find R package calculates week month, created function takes date input. function takes Sunday start week output integer value specifying week number month given date .now done data processing. data frame now includes factors need plotting.Plotting Calendar heat map\nFirst create calendar heat map years data frame. blanks graph missing data specific dates data frame.calendar heat map “Soarin’” ride Disney World, can easily see days high average waiting time days low waiting time. comparing different levels color fill years, can see overall waiting pattern year find months lower average waiting time. can also compare across years see overall crowdness year. instance, color fills year 2021 lighter years, can considered directly impacted current pandemic.want take closer look create heat map specific year dataframe, can plot using following code. take 2015 example.faster processing data calendar heatmap, can use package “calendR”. package automatically creates calendar specific year (month), fills color values dataframe. can specify low high colors colors filled specified “special.days”. instance, can create similar calendar heatmap year 2015.However, package can create calendar heatmap year. want create heatmap using years data, still need plot using ggplot drawn .can see, calendar heat map can efficient way visualizing variable value want represent. hope tutorial can helpful!Referenceshttps://touringplans.com/walt-disney-world/crowd-calendar#DataSetshttps://stackoverflow.com/questions/25199851/r---get--week-number---monthhttps://stackoverflow.com/questions/48301514/r-fit-heat-map--grid-lines--calendar-heatmaphttps://r-charts.com/evolution/monthly-calendar-heatmap/","code":"\nlibrary(lubridate)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(zoo)\nlibrary(gridExtra)\nlibrary(ggplot2)\nlibrary(calendR)\nsoarin <- readr::read_csv(\"https://cdn.touringplans.com/datasets/soarin.csv\", show_col_types = FALSE)\nhead(soarin)## # A tibble: 6 × 4\n##   date       datetime            SACTMIN SPOSTMIN\n##   <chr>      <dttm>                <dbl>    <dbl>\n## 1 01/01/2015 2015-01-01 07:45:15      NA       10\n## 2 01/01/2015 2015-01-01 07:52:16      NA       10\n## 3 01/01/2015 2015-01-01 08:03:17      NA       10\n## 4 01/01/2015 2015-01-01 08:10:16      NA       35\n## 5 01/01/2015 2015-01-01 08:17:19      NA       45\n## 6 01/01/2015 2015-01-01 08:24:16      NA       35\nfor (i in 1:nrow(soarin)){\n  if(is.na(soarin$SPOSTMIN[i]==T)){soarin$SPOSTMIN[i] <- soarin$SACTMIN[i]}\n}\ndf <- soarin %>% select(-c(SACTMIN,date)) %>% filter(SPOSTMIN>0)\nhead(df)## # A tibble: 6 × 2\n##   datetime            SPOSTMIN\n##   <dttm>                 <dbl>\n## 1 2015-01-01 07:45:15       10\n## 2 2015-01-01 07:52:16       10\n## 3 2015-01-01 08:03:17       10\n## 4 2015-01-01 08:10:16       35\n## 5 2015-01-01 08:17:19       45\n## 6 2015-01-01 08:24:16       35\ndf <- df %>% mutate(date=as.Date(df$datetime))\nhead(df)## # A tibble: 6 × 3\n##   datetime            SPOSTMIN date      \n##   <dttm>                 <dbl> <date>    \n## 1 2015-01-01 07:45:15       10 2015-01-01\n## 2 2015-01-01 07:52:16       10 2015-01-01\n## 3 2015-01-01 08:03:17       10 2015-01-01\n## 4 2015-01-01 08:10:16       35 2015-01-01\n## 5 2015-01-01 08:17:19       45 2015-01-01\n## 6 2015-01-01 08:24:16       35 2015-01-01\nnew <- df  %>% group_by(date) %>% summarize(mean_everyday = mean(SPOSTMIN))\nnew$weekday <- factor(wday(new$date,label = TRUE))\nnew$year <- factor(year(new$date))\nnew$month <- factor(month(new$date, label=TRUE))\nnew$week <- strftime(new$date+1, format = \"%V\")\nweekofmonth <- function(date){\n  out <- as.integer(strftime(date, format = \"%U\"))-as.integer(strftime(floor_date(date, unit=\"months\"), format = \"%U\"))+1\n  return(out)\n}\n\nnew$weekofmonth <- factor(weekofmonth(new$date))\nhead(new)## # A tibble: 6 × 7\n##   date       mean_everyday weekday year  month week  weekofmonth\n##   <date>             <dbl> <ord>   <fct> <ord> <chr> <fct>      \n## 1 2015-01-01          89.6 Thu     2015  Jan   01    1          \n## 2 2015-01-02          81.1 Fri     2015  Jan   01    1          \n## 3 2015-01-03          73.4 Sat     2015  Jan   01    1          \n## 4 2015-01-04          58.1 Sun     2015  Jan   02    2          \n## 5 2015-01-05          58.4 Mon     2015  Jan   02    2          \n## 6 2015-01-06          55.6 Tue     2015  Jan   02    2\nggplot(new, aes(weekday, fct_rev(weekofmonth), fill = mean_everyday)) + \n  geom_tile(colour = \"white\") + \n  facet_grid(year~month) + \n  scale_fill_gradient(low=\"#FFE6EE\" , high=\"#bb1919\") +\n  ggtitle(\"Calendar Heatmap\")+\n  xlab(\"Weekday\")+labs(fill=\"Average Waiting Time\")+\n  ylab(\"Week Number\")+\n  scale_x_discrete(label=function(x) {abbreviate(x, minlength=1, strict = T)})+\n  theme(axis.text=element_text(size=4))\ny <- 2015\n\nggplot(new%>%filter(year==y), aes(weekday, fct_rev(weekofmonth), fill = mean_everyday)) + \n  geom_tile(colour = \"white\") + \n  facet_wrap(~month) + \n  scale_fill_gradient(low=\"#FFE6EE\", high=\"#bb1919\") +\n  ggtitle(\"Calendar Heatmap\")+\n  xlab(\"Weekday\")+labs(fill=\"Average Waiting Time\")+\n  theme(axis.text=element_text(size=6))+\n  ylab(\"Week Number\")\ncalendR(year=2015, start=\"S\", \n        special.days = (new%>%filter(year==2015))$mean_everyday, \n        gradient=TRUE, \n        low.col=\"#f9d7d7\", \n        special.col=\"#bb1919\",\n        legend.pos = \"right\",\n        legend.title = \"Average Waiting Time\",\n        weeknames.size=2.5,\n        day.size=2)"},{"path":"basic-time-series-analysis-and-prediction.html","id":"basic-time-series-analysis-and-prediction","chapter":"33 Basic time series analysis and prediction","heading":"33 Basic time series analysis and prediction","text":"Dexin SunThis tutorial time series prediction. process building time series model analysis covered.","code":""},{"path":"basic-time-series-analysis-and-prediction.html","id":"motivation-5","chapter":"33 Basic time series analysis and prediction","heading":"33.1 Motivation","text":"Time series analysis method show relationship variable time. usually use Yt value based time t. main purpose time series analysis prediction based historical data. tutorial focus build time series model prediction.","code":""},{"path":"basic-time-series-analysis-and-prediction.html","id":"data-input","chapter":"33 Basic time series analysis and prediction","heading":"33.2 Data input","text":"use dataset R call “sunspot.month”. monthly numbers sunspots, World Data Center.","code":"\nlibrary(tseries)\nlibrary(itsmr)\nlibrary(forecast)\ndata(\"sunspot.month\")"},{"path":"basic-time-series-analysis-and-prediction.html","id":"time-series-plot","chapter":"33 Basic time series analysis and prediction","heading":"33.3 Time series plot","text":"First, use “plot.ts()” show time series plot, direct way show relationship variable time.time series model divide 3 components: stationary series, trend, seasonal variation. Definition Stationary Series joint probability distributions change time expectation variance change time, meaning statistical value fluctuates constant fluctuation range bounded.example, plot , find model seasonality trend obvious. stationary series choose model fit.autocorrelation coefficient ACF characterizes correlation coefficient yt lag k-order Y(t-k), partial autocorrelation coefficient PACF characterizes removal Y(t-1), Y(t-2) equivalent pair Y(t-k) impact correlation coefficient. ACF PACF show stationary model. shown, follows:get stationary series, need remove trend seasonal variation. two common ways: Smoothing differencing. Smoothing way get function trend seasonality, hard find. Differencing focus tutorial.","code":"\nplot.ts(sunspot.month)\nacf(sunspot.month)\npacf(sunspot.month)"},{"path":"basic-time-series-analysis-and-prediction.html","id":"differencing","chapter":"33 Basic time series analysis and prediction","heading":"33.4 Differencing","text":"use “adf.test()” verify whether need differencing. “ndiffs()” show difference order.","code":"\nadf.test(sunspot.month)## \n##  Augmented Dickey-Fuller Test\n## \n## data:  sunspot.month\n## Dickey-Fuller = -7.0245, Lag order = 14, p-value = 0.01\n## alternative hypothesis: stationary\nndiffs(sunspot.month)## [1] 1\nnewST <- diff(sunspot.month,1)\nplot.ts(newST)\nacf(newST)\npacf(newST)"},{"path":"basic-time-series-analysis-and-prediction.html","id":"stationary-series-model","chapter":"33 Basic time series analysis and prediction","heading":"33.5 Stationary series model","text":"three common stationary series models:AR(p): Autoregression. evolving variable interest regressed lagged values.MA(q): Moving Average. regression error actually linear combination error terms whose values occurred contemporaneously various times past.ARMA(p,q): Autoregressive moving average. AR+MAThe model without differencing ARIMA(p,d,q) model, :: Integrated. data values replaced difference values previous values.p: order (number time lags) autoregressive modeld:degree differencingq: order moving-average modelFrom figure , can seen sequence differencing becomes stationary sequence. autocorrelation graph shows autocorrelation coefficient quickly decreases 0 lagging 1 order, shows series stable. According figure , sequence differencing applies ARIMA(5,1,2). ARIMA(5,1,2) beginning parameter, based beginning parameter small adjustment gain best model.Compared AIC value , find ARIMA(2,1,2) smallest model. Therefore, ARIMA(2,1,2) fittest model.“auto.arima” use find fittest model, easier method:","code":"\narima(x=sunspot.month,order=c(5,1,2),method=\"ML\")## \n## Call:\n## arima(x = sunspot.month, order = c(5, 1, 2), method = \"ML\")\n## \n## Coefficients:\n##           ar1      ar2      ar3      ar4      ar5     ma1      ma2\n##       -0.5212  -0.2156  -0.1722  -0.0812  -0.0498  0.1113  -0.1250\n## s.e.   0.2677   0.2113   0.1044   0.0699   0.0359  0.2677   0.1908\n## \n## sigma^2 estimated as 252.1:  log likelihood = -13287.92,  aic = 26591.84\narima(x=sunspot.month,order=c(4,1,2),method=\"ML\")## \n## Call:\n## arima(x = sunspot.month, order = c(4, 1, 2), method = \"ML\")\n## \n## Coefficients:\n##          ar1      ar2      ar3      ar4     ma1      ma2\n##       -0.197  -0.0578  -0.0672  -0.0101  -0.213  -0.1488\n## s.e.     NaN      NaN   0.0209   0.0264     NaN      NaN\n## \n## sigma^2 estimated as 252.3:  log likelihood = -13289.34,  aic = 26592.67\narima(x=sunspot.month,order=c(3,1,2),method=\"ML\")## \n## Call:\n## arima(x = sunspot.month, order = c(3, 1, 2), method = \"ML\")\n## \n## Coefficients:\n##           ar1      ar2      ar3      ma1      ma2\n##       -0.1889  -0.0398  -0.0582  -0.2208  -0.1636\n## s.e.      NaN      NaN      NaN      NaN      NaN\n## \n## sigma^2 estimated as 252.3:  log likelihood = -13289.41,  aic = 26590.82\narima(x=sunspot.month,order=c(2,1,2),method=\"ML\")## \n## Call:\n## arima(x = sunspot.month, order = c(2, 1, 2), method = \"ML\")\n## \n## Coefficients:\n##          ar1      ar2      ma1     ma2\n##       1.3304  -0.3805  -1.7581  0.7979\n## s.e.  0.0289   0.0272   0.0198  0.0186\n## \n## sigma^2 estimated as 246.3:  log likelihood = -13251.08,  aic = 26512.17\narima(x=sunspot.month,order=c(1,1,2),method=\"ML\")## \n## Call:\n## arima(x = sunspot.month, order = c(1, 1, 2), method = \"ML\")\n## \n## Coefficients:\n##           ar1      ma1      ma2\n##       -0.0099  -0.3995  -0.1246\n## s.e.   0.1104   0.1089   0.0538\n## \n## sigma^2 estimated as 252.7:  log likelihood = -13291.64,  aic = 26591.28\nauto.arima(sunspot.month)## Series: sunspot.month \n## ARIMA(2,1,2) \n## \n## Coefficients:\n##          ar1      ar2      ma1     ma2\n##       1.3307  -0.3807  -1.7582  0.7979\n## s.e.  0.0289   0.0272   0.0198  0.0186\n## \n## sigma^2 = 246.6:  log likelihood = -13251.08\n## AIC=26512.17   AICc=26512.19   BIC=26542.48"},{"path":"basic-time-series-analysis-and-prediction.html","id":"testing","chapter":"33 Basic time series analysis and prediction","heading":"33.6 Testing","text":"parameter test includes two tests: significance test parameters normality irrelevance test residuals. use “shapiro.test()” check normality residuals “Box.test()” check randomness residuals. Since p-value normality test smaller 0.05, stationary series normal distribution.","code":"\nTSmodel <- auto.arima(sunspot.month)\nshapiro.test(TSmodel$residuals)## \n##  Shapiro-Wilk normality test\n## \n## data:  TSmodel$residuals\n## W = 0.96263, p-value < 2.2e-16\nBox.test(TSmodel$residuals)## \n##  Box-Pierce test\n## \n## data:  TSmodel$residuals\n## X-squared = 0.16254, df = 1, p-value = 0.6868"},{"path":"basic-time-series-analysis-and-prediction.html","id":"prediction","chapter":"33 Basic time series analysis and prediction","heading":"33.7 Prediction","text":"Since first-order differencing originally made, necessary restore first-order differencing prediction making predictions. “forecast()” used prediction.","code":"\npre <- forecast(TSmodel,50)\nplot(pre)"},{"path":"basic-time-series-analysis-and-prediction.html","id":"reference-1","chapter":"33 Basic time series analysis and prediction","heading":"33.8 Reference","text":"https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average#Definition","code":""},{"path":"r-shiny-and-interactive-map-tutorial.html","id":"r-shiny-and-interactive-map-tutorial","chapter":"34 R Shiny and Interactive Map Tutorial","heading":"34 R Shiny and Interactive Map Tutorial","text":"Yarong Wang Qian Zhang","code":""},{"path":"r-shiny-and-interactive-map-tutorial.html","id":"description-1","chapter":"34 R Shiny and Interactive Map Tutorial","heading":"34.1 Description","text":"R shiny interactive map tutorial includes brief introduction R shiny, basic steps components make R shiny app, step--step instructions making interactive map using package leaflet well adding certain features map, finally integration leaflet package R shiny.see details tutorial, please go link provided .","code":""},{"path":"r-shiny-and-interactive-map-tutorial.html","id":"link-1","chapter":"34 R Shiny and Interactive Map Tutorial","heading":"34.2 Link","text":"Please click link access tutorial.","code":""},{"path":"r-shiny-and-interactive-map-tutorial.html","id":"references-5","chapter":"34 R Shiny and Interactive Map Tutorial","heading":"34.3 References","text":"Application layout guideApplication layout guideShiny Widgets GalleryShiny Widgets GalleryR shiny cheatsheetR shiny cheatsheetDataset source interactive map, complaint casesDataset source interactive map, complaint casesDataset source interactive map, geographic informationDataset source interactive map, geographic informationThe modified dataset complaint cases geographic information uploaded GitHubThe modified dataset complaint cases geographic information uploaded GitHub","code":""},{"path":"extract-data-from-scatterplot.html","id":"extract-data-from-scatterplot","chapter":"35 Extract data from scatterplot","heading":"35 Extract data from scatterplot","text":"Xuan LianThere time another class Columbia University, one assignments perform KNN algorithms. professor asked us draw boundary lines given data, showed scatter plot. However, data form provided, can get details data. instead solving quantitatively coding, draw ugly thresholds manually.comes many scatter plots well plots drawn ggplot R, basically standard format. Can develop package extract data Image like .png .jpeg file generated ggplot package?assignment, created R package, included several functions, extract data standard scatter plot generated ggplot. planned use computer vision method detect axis well labels . However, workload much heavier thought just finished part detect label position point position. need input 4 parameters ymax,ymin,xmin xmax, together plot_file function scatter2data get data extracted scatter plot image.still many problems function, firstly works scatter plot applicable kinds plot generated ggplot yet. Secondly accuracy 100%, meaning can still make progress point detect process.command install package:core function package scatter2data, calling function can extract dataset standard scatter plot generated ggplot.example use .firstly generated several data points get scatter plot using geom_point save plot .png format.five parameters used scatter2data function, first address plot want extracted data . four parameters ymax, ymin, xmin, xmax, maximum minimum value y x axis separately.example, ymax=1, ymin=-1, xmin=-1, xmax=2, imputing parameters can get result function.check result, plot extracted data origin data scatter plot.","code":"\n# remotes::install_github(\"Shawn-Lian/image2data\")\nlibrary(image2data)\nset.seed(0)\nX = rnorm(20)\nY = rnorm(20)\nggplot()+\n  geom_point(aes(x=X,y=Y))\nggsave('resources/image2data/test_plot.png',dpi = 100)\ndata = image2data:: scatter2data('resources/image2data/test_plot.png',1,-1,-1,2)\nggplot()+\n  geom_point(aes(x=X,y=Y,color = 'origin data')) +\n  geom_point(aes(y= data[,2],x = data[,1], color = 'extracted data'))"},{"path":"tutorial-for-the-r-graph-gallery.html","id":"tutorial-for-the-r-graph-gallery","chapter":"36 Tutorial for the r graph gallery","heading":"36 Tutorial for the r graph gallery","text":"Yayun Luo Yu Cheng","code":""},{"path":"tutorial-for-the-r-graph-gallery.html","id":"motivation-6","chapter":"36 Tutorial for the r graph gallery","heading":"36.1 Motivation","text":"process drawing graphs, often don’t know code enter R python come graph need. , learned website R graph gallery, found helpful drawing graphs R python. site learn various data graphs, also know exact code draw graphs. can modify create code according needs get best image real situation. website greatly enhances accuracy presentation charts saves us lot time process data analysis. Therefore, made tutorial help better use R python draw charts.Click link tutorial:https://github.com/YuCheng222/Tutorial---r-graph-gallery/blob/main/Tutorial%20for%20the%20R%20Graph%20Gallery.pdf","code":""},{"path":"github-initial-setup.html","id":"github-initial-setup","chapter":"37 Github initial setup","heading":"37 Github initial setup","text":"Joyce Robbins","code":""},{"path":"github-initial-setup.html","id":"create-new-repo","chapter":"37 Github initial setup","heading":"37.1 Create new repo","text":"Create new repository copying template: http://www.github.com/jtr13/cctemplate following instructions README.","code":""},{"path":"github-initial-setup.html","id":"pages-in-repo-settings","chapter":"37 Github initial setup","heading":"37.2 Pages in repo settings","text":"Change source gh-pagesMay trigger GHA get work","code":""},{"path":"github-initial-setup.html","id":"add-packages-to-description-file","chapter":"37 Github initial setup","heading":"37.3 Add packages to DESCRIPTION file","text":"Need better process…Downloaded submissions CourseWorksCreate DESCRIPTION file. Add add dependencies projthis::proj_update_deps()https://twitter.com/ijlyttle/status/1370776366585614342Add Imports real DESCRIPTION file.Found problematic packages looking reverse dependencies packages failed install:devtools::revdep()Also used pak::pkg_deps_tree()Problems:magickrJava dependency qdap","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"tutorial-for-pull-request-mergers","chapter":"38 Tutorial for pull request mergers","heading":"38 Tutorial for pull request mergers","text":"","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"general","chapter":"38 Tutorial for pull request mergers","heading":"38.1 General","text":"following checklist steps perform merging pull request. point, ’re sure , request review one PR leaders.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-branch","chapter":"38 Tutorial for pull request mergers","heading":"38.2 Check branch","text":"PR submitted non-main branch.PR submitted main branch, provide instructions fix problem:Close PR.Close PR.Follow instructions forgetting branch committed pushed GitHub: https://edav.info/github#fixing-mistakesFollow instructions forgetting branch committed pushed GitHub: https://edav.info/github#fixing-mistakesIf trouble 2., delete local folder project, delete fork GitHub, start .trouble 2., delete local folder project, delete fork GitHub, start .Open new PR.Open new PR.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"examine-files-that-were-added-or-modified","chapter":"38 Tutorial for pull request mergers","heading":"38.3 Examine files that were added or modified","text":"ONE .Rmd file.ONE .Rmd file.additional resources resources/<project_name>/ folder.additional resources resources/<project_name>/ folder.files root directory besides .Rmd file.files root directory besides .Rmd file.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-.rmd-filename","chapter":"38 Tutorial for pull request mergers","heading":"38.4 Check .Rmd filename","text":".Rmd filename words joined underscores, white space. (Update: need branch name.).Rmd filename can contain lowercase letters. (Otherwise filenames sort nicely repo home page.)","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-.rmd-file-contents","chapter":"38 Tutorial for pull request mergers","heading":"38.5 Check .Rmd file contents","text":"file contain YAML header --- line.second line blank, followed author name(s).first line start single hashtag #, followed single whitespace, title.additional single hashtag headers chapter. (, new chapters created.)hashtag headers followed numbers since hashtags create numbered subheadings. Correct: ## Subheading. Incorrect: ## 3. Subheading.file contains setup chunk .Rmd file, contain setup label. (bookdown render fail duplicate chunk labels.)\n.e. use {r, include=FALSE} instead {r setup, include=FALSE}.\nSee sample .RmdLinks internal files must contain resources/<project_name>/ path, : ![Test Photo](resources/sample_project/election.jpg)file contain install.packages(), write functions, setwd(), getwd().’s anything else looks odd ’re sure, assign jtr13 review explain issue.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"request-changes","chapter":"38 Tutorial for pull request mergers","heading":"38.6 Request changes","text":"problems checks listed , explain pull request merged request changes following steps:, add changes requested label pull request.job pull request done now. contributors fix requests, review either move forward merge explain changes still need made.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"steps-to-merge-the-pr","chapter":"38 Tutorial for pull request mergers","heading":"38.7 Steps to Merge the PR","text":"Go main branch project (jtr13/cc22spring) open _bookdown.yml fileGo main branch project (jtr13/cc22spring) open _bookdown.yml fileCopy entire rmd_files section. look something like \nrmd_files: [ 'index.Rmd', # must first chapter 'assignment.Rmd', ...., ...., ]Copy entire rmd_files section. look something like \nrmd_files: [ 'index.Rmd', # must first chapter 'assignment.Rmd', ...., ...., ]Open branch submitted PR following steps:\naccess PR branch:\n\nMake sure PR branch checking PR branch name shown (main):\nOpen branch submitted PR following steps:access PR branch:Make sure PR branch checking PR branch name shown (main):Remove rmd_files: [] section paste one copied main branch project.Remove rmd_files: [] section paste one copied main branch project.Add name new file single quotes followed comma labelled section (eg. Cheatsheets, Tutorials etc).Add name new file single quotes followed comma labelled section (eg. Cheatsheets, Tutorials etc).Save edited version.Save edited version.Come back PR.Come back PR.Merge PR.Merge PR.Click Actions tabs check whether build successful (successful build green dot front actions). PLEASE NOTE actions take complete (approximately 5-6 mins depending number files rendered), might need wait time finally check whether build successful .Click Actions tabs check whether build successful (successful build green dot front actions). PLEASE NOTE actions take complete (approximately 5-6 mins depending number files rendered), might need wait time finally check whether build successful .case build fail able understand rectify please tag one PR Assigners can review . PLEASE revert merge create new branches workflow.case build fail able understand rectify please tag one PR Assigners can review . PLEASE revert merge create new branches workflow.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"pr-leaders-only-add-part-names-to-.rmd-for-every-first-article-in-part","chapter":"38 Tutorial for pull request mergers","heading":"38.7.1 PR Leaders only: Add part names to .Rmd for every first article in part","text":"adding first chapter PART.every first article part, add chapter name top .Rmd file, propose changes. example like .\n","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"merge-pr-and-leave-a-comment","chapter":"38 Tutorial for pull request mergers","heading":"38.8 Merge PR and leave a comment","text":"Now comes final step.’re sure things correctly, assign one PR merge leaders @jtr13 review merge PR.Go back conversation tab pull requests page, example:https://github.com/jtr13/cc20/pull/23#issuecomment-728506101Leave comments congratulations 🎉 (type :tada:) click green button merge.\n","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-updated-version","chapter":"38 Tutorial for pull request mergers","heading":"38.9 Check updated version","text":"successful merge means addition file files added project merge conflicts. mean book render deploy GitHub pages without issues. merge, take 5-10 minutes GitHub Actions render book deploy updated version. Please check Action ran successfully didn’t, open issue link failed run.","code":""}]
